<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on The Road</title>
    <link>https://kane.mx/posts/</link>
    <description>Recent content in Posts on The Road</description>
    <meta name="generator" content="Hugo 0.55.5" />
    <language>en-us</language>
    <lastBuildDate>Thu, 16 May 2019 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://kane.mx/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Serverless framework 101</title>
      <link>https://kane.mx/posts/2019/serverless-framework/</link>
      <pubDate>Thu, 16 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2019/serverless-framework/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://serverless.com/&#34;&gt;Serverless Framework&lt;/a&gt;是一个开源命令行工具。他提供函数脚手架、流程自动化、最佳实践等帮助开发、部署跨云厂商的托管无服务器计算服务(官方已支持aws, Azure, GCP, IBM Cloud等各种厂商的无服务器计算)。同时支持使用插件来扩展各种功能，比如支持更多云厂商无服务器计算服务，例如&lt;a href=&#34;https://github.com/aliyun/serverless-aliyun-function-compute&#34;&gt;阿里云的函数计算&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;这里使用&lt;a href=&#34;https://kane.mx/posts/effective-cloud-computing/serverless-dingtalk-callback/&#34;&gt;基于函数计算的钉钉回调函数接口&lt;/a&gt;示例来演示如何使用&lt;a href=&#34;https://serverless.com/&#34;&gt;Serverless Framework&lt;/a&gt;将一个无服务器函数部署到&lt;a href=&#34;https://aws.amazon.com/lambda&#34;&gt;AWS Lambda&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://serverless.com/framework/docs/getting-started/&#34;&gt;安装servereless&lt;/a&gt;后，可以通过&lt;code&gt;serverless create&lt;/code&gt;命令创建函数脚手架工程，或者在已有工程的下创建serverless配置文件&lt;code&gt;serverless.yml&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;接下来可以参考&lt;a href=&#34;https://serverless.com/framework/docs/providers/aws/guide/serverless.yml/&#34;&gt;serverless aws reference&lt;/a&gt;配置你的aws lambda函数及需要的各种资源。如果已经有过使用&lt;a href=&#34;https://docs.aws.amazon.com/cloudformation/?id=docs_gateway&#34;&gt;AWS CloudFormation&lt;/a&gt;或者&lt;a href=&#34;https://docs.aws.amazon.com/serverless-application-model/?id=docs_gateway&#34;&gt;AWS SAM&lt;/a&gt;经验的，可以很快适应编写Serverless配置。Serverless的配置本质上是将CloudFormation/SAM相关的概念进行抽象，为各个云厂商的无服务器计算服务提供统一的工具、命令以及概念抽象。在部署aws lambda时，&lt;code&gt;serverless&lt;/code&gt;配置会被转换为&lt;code&gt;CloudFormation&lt;/code&gt;配置，通过AWS API进行创建或变更。&lt;/p&gt;

&lt;p&gt;对于Dingtalk Callback on AWS Lambda, &lt;code&gt;serverless&lt;/code&gt;配置声明如下。其中指定了service的基本信息，全局的配置(如stage、region等)、云厂商provider(这里是aws)。函数的基本信息、权限、layer、触发器，自定义layer以及其他云厂商资源，比如Dingtalk callback这里用到的DynamoDB。完整的serverless配置查看&lt;a href=&#34;https://github.com/zxkane/dingtalk-callback-on-aws/blob/master/serverless.yml&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;service:
  name: dingtalk-callback

frameworkVersion: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;gt;=1.0.0 &amp;lt;2.0.0&amp;#34;&lt;/span&gt;

provider:
  name: aws
  runtime: java8
  stage: ${opt:stage, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dev&amp;#39;&lt;/span&gt;} &lt;span style=&#34;color:#75715e&#34;&gt;# Set the default stage used. Default is dev&lt;/span&gt;
  region: ${opt:region, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ap-southeast-1&amp;#39;&lt;/span&gt;} &lt;span style=&#34;color:#75715e&#34;&gt;# Overwrite the default region used. Default is ap-southeast-1&lt;/span&gt;
  profile: ${opt:profile, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;} &lt;span style=&#34;color:#75715e&#34;&gt;# The default profile to use with this service&lt;/span&gt;
  versionFunctions: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Optional function versioning&lt;/span&gt;
  endpointType: regional &lt;span style=&#34;color:#75715e&#34;&gt;# Optional endpoint configuration for API Gateway REST API. Default is Edge.&lt;/span&gt;

functions:
  dingtalk-callback:
    handler: com.github.zxkane.dingtalk.Callback::handleRequest &lt;span style=&#34;color:#75715e&#34;&gt;# required, handler set in AWS Lambda&lt;/span&gt;
    name: ${self:provider.stage}-dingtalk-callback &lt;span style=&#34;color:#75715e&#34;&gt;# optional, Deployed Lambda name&lt;/span&gt;
    memorySize: &lt;span style=&#34;color:#ae81ff&#34;&gt;384&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# optional, in MB, default is 1024&lt;/span&gt;
    timeout: &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# optional, in seconds, default is 6&lt;/span&gt;
    environment: &lt;span style=&#34;color:#75715e&#34;&gt;# Function level environment variables&lt;/span&gt;
      PARA_DD_TOKEN: DD_TOKEN
      TABLE_NAME: {Ref: BPMTable}
    package:
      artifact: build/libs/dingtalk-callback-&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;-SNAPSHOT.jar
    role: dingtalkCallbackIAMRole
    layers: &lt;span style=&#34;color:#75715e&#34;&gt;# An optional list Lambda Layers to use&lt;/span&gt;
      - {Ref: DependenciesLambdaLayer}
    events: &lt;span style=&#34;color:#75715e&#34;&gt;# The Events that trigger this Function&lt;/span&gt;
      - http: &lt;span style=&#34;color:#75715e&#34;&gt;# This creates an API Gateway HTTP endpoint which can be used to trigger this function.  Learn more in &amp;#34;events/apigateway&amp;#34;&lt;/span&gt;
          path: dingtalk &lt;span style=&#34;color:#75715e&#34;&gt;# Path for this endpoint&lt;/span&gt;
          method: post &lt;span style=&#34;color:#75715e&#34;&gt;# HTTP method for this endpoint&lt;/span&gt;

layers:
  dependencies:
    path: build/deps

resources:  &lt;span style=&#34;color:#75715e&#34;&gt;# CloudFormation template syntax&lt;/span&gt;
  Resources:
    dingtalkCallbackIAMRole:
      Type: AWS::Role
      Properties:
        Policies:
          - PolicyName: SSMPolicy
          - PolicyName: DynamoDBPolicy
    BPMTable:
      Type: AWS::Table
      Properties:
        TableName: bpm_raw_${self:service.name}_${self:provider.stage}
        ProvisionedThroughput:
          ReadCapacityUnits: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
          WriteCapacityUnits: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;对于使用单一云厂商无服务器计算并且已经使用了类似&lt;a href=&#34;https://docs.aws.amazon.com/serverless-application-model/?id=docs_gateway&#34;&gt;sam cli&lt;/a&gt;实现持续集成、持续部署的用户，&lt;a href=&#34;https://serverless.com/&#34;&gt;Serverless Framework&lt;/a&gt;并不能带来更多生产力的提升，在稳定性(封装云厂商的功能，增加复杂度很可能引入新的问题)或功能的及时性上可能还不如云厂商提供的工具。&lt;/p&gt;

&lt;p&gt;对于有多云厂商部署无服务器函数需求的用户，使用了&lt;a href=&#34;https://serverless.com/&#34;&gt;Serverless Framework&lt;/a&gt;&lt;strong&gt;并不能&lt;/strong&gt;轻松的将无服务器函数部署到不同云厂商的托管服务上，他只是帮助提供跨云厂商的统一工具链及相似的持续集成、部署等最佳实践流程。例如将一套函数从AWS迁移到Azure上，需要重新实现Azure provider下的配置，因为云厂商的托管无服务器服务和其他云资源都存在着大量差异。另外函数代码也需要面临改造，不同云厂商的触发器消息事件也都有不同的格式！这里可以考虑使用类似&lt;a href=&#34;https://spring.io/projects/spring-cloud-function&#34;&gt;Spring Cloud Function&lt;/a&gt;这样的解决方案来实现跨云厂商的函数编写。&lt;/p&gt;

&lt;p&gt;总之，&lt;a href=&#34;https://serverless.com/&#34;&gt;Serverless Framework&lt;/a&gt;对于跨云厂商部署场景有一定生产效率的提升，但他离完美解决跨云厂商无服务器托管服务（各厂商服务天生不兼容）还有很远的距离，也许这个思路就是走不通的😕。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AWS Lambda Layer实践</title>
      <link>https://kane.mx/posts/2019/aws-lambda-layers/</link>
      <pubDate>Tue, 14 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2019/aws-lambda-layers/</guid>
      <description>&lt;p&gt;在&lt;a href=&#34;https://kane.mx/posts/effective-cloud-computing/serverless-dingtalk-callback/&#34;&gt;基于函数计算的钉钉回调函数接口&lt;/a&gt;中使用钉钉回调函数案例实践了&lt;a href=&#34;https://aws.amazon.com/lambda/&#34;&gt;AWS Lambda&lt;/a&gt;无服务函数。该示例中，我们将自定义的函数代码及依赖的第三方库（比如json处理库jackson, 钉钉openapi加密库, aws dynamodb client等）整体打包为一个部署包，上传到lamdba代码仓库用于函数执行。&lt;/p&gt;

&lt;p&gt;然而实际项目中，其实有大量的相关函数可能会共享这些基础依赖库、三方函数库(比如headless chrome(Puppeteer), pandoc, OCR library &amp;ndash; Tesseract等等)或者使用自定义runtime(如官方未支持的java11)的需求。AWS Lambda在去年底发布了&lt;a href=&#34;https://aws.amazon.com/about-aws/whats-new/2018/11/aws-lambda-now-supports-custom-runtimes-and-layers/&#34;&gt;Lambda layers功能&lt;/a&gt;来满足上述这些实际开发中的需求。&lt;/p&gt;

&lt;p&gt;接下来，让我们看看如何将&lt;a href=&#34;https://kane.mx/posts/effective-cloud-computing/serverless-dingtalk-callback/&#34;&gt;前文&lt;/a&gt;中的&lt;a href=&#34;https://github.com/zxkane/dingtalk-callback-on-aws/blob/267b5f11851148f5a23a834b8b7ecd4d3b247ce7/build.gradle.kts#L71-L91&#34;&gt;函数依赖&lt;/a&gt;放置到一个单独的layer中，作为不同函数的共享依赖库。&lt;/p&gt;

&lt;p&gt;在我们的构建配置&lt;code&gt;build.gradle&lt;/code&gt;中，将&lt;a href=&#34;https://github.com/zxkane/dingtalk-callback-on-aws/blob/c6a293ac58b6892278c296daa237453279f50064/build.gradle.kts#L153-L157&#34;&gt;函数的共享依赖拷贝&lt;/a&gt;到java runtime&lt;a href=&#34;https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html#configuration-layers-path&#34;&gt;特定的目录结构&lt;/a&gt;&lt;code&gt;java/lib/&lt;/code&gt;下，&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-gradle&#34; data-lang=&#34;gradle&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;153
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;154
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;155
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;156
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;157
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-gradle&#34; data-lang=&#34;gradle&#34;&gt;tasks&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;register&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Copy&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;depsLayer&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
    into&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;$buildDir/deps/java/lib&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    from&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;configurations&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;compileClasspath&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt;
    from&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;configurations&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;runtimeClasspath&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;())&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;接下来将共享的依赖创建为一个lambda layer，并且让callback函数依赖这个共享layer，不再将所有的依赖打包为一个很大的部署包减小每次变更需要发布的包大小。&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;39
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;40
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;41
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;42
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;43
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;44
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;45
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;46
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;47
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;48
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;49
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;  DependenciesLayer:
    Type: AWS::LayerVersion
    Properties:
      LayerName: DingTalkDependencies
      Description: DingTalk Dependencies Layer
      ContentUri: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;build/deps&amp;#39;&lt;/span&gt;
      CompatibleRuntimes:
        - java8
      LicenseInfo: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Available under the MIT-0 license.&amp;#39;&lt;/span&gt;
      RetentionPolicy: Retain

  CallbackFunction:
    Type: AWS::Function &lt;span style=&#34;color:#75715e&#34;&gt;# More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction&lt;/span&gt;
    Properties:
      CodeUri: build/libs/dingtalk-callback-&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;-SNAPSHOT.jar
      Handler: com.github.zxkane.dingtalk.Callback::handleRequest
      Layers:
        - !Ref DependenciesLayer
      Policies:&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;在console查看部署后的函数，如下图，可以看到函数新增了一个layer。&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&#34;https://kane.mx/posts/2019/aws-lambda-layers/lambda-with-layers.png&#34;
         alt=&#34;lambda with layers&#34;/&gt; 
&lt;/figure&gt;


&lt;p&gt;同其他的语言、技术一样，&lt;a href=&#34;https://github.com/mthenw/awesome-layers&#34;&gt;Awesome Layers&lt;/a&gt;项目收集了目前一些常用且维护较好的layer，自创轮子之前可以先参考下😀。&lt;/p&gt;

&lt;p&gt;使用layer同样有以下限制，使用前需要注意，&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;依赖的layer数不能超过5个&lt;/li&gt;
&lt;li&gt;函数以及依赖的所有layers解压后不可以超过250MB&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>QCon2019北京站回顾</title>
      <link>https://kane.mx/posts/2019/2019-qconbeijing-reviews/</link>
      <pubDate>Thu, 09 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2019/2019-qconbeijing-reviews/</guid>
      <description>&lt;p&gt;这周参加了&lt;a href=&#34;https://2019.qconbeijing.com/&#34;&gt;QCon 2019北京站&lt;/a&gt;，这里记录下部分印象深刻的主题以及个人感受。&lt;/p&gt;

&lt;p&gt;QCon是由InfoQ主办的综合性技术盛会，主题涵盖了大前端、高可用架构、容器技术、大数据、机器学习等各种热门技术主题。其中也不乏&lt;a href=&#34;https://2019.qconbeijing.com/track/501&#34;&gt;下一代分布式应用&lt;/a&gt;、&lt;a href=&#34;https://2019.qconbeijing.com/track/565&#34;&gt;混沌工程&lt;/a&gt;等前沿有意思的主题，后面会详细介绍相关的主题演讲。&lt;/p&gt;

&lt;h3 id=&#34;工程效率提升&#34;&gt;工程效率提升&lt;/h3&gt;

&lt;p&gt;这是在QCon第一日个人感兴趣且非常有意思的一个&lt;a href=&#34;https://2019.qconbeijing.com/track/499&#34;&gt;系列主题&lt;/a&gt;。无论是创业公司、独角兽企业还是互联网巨头都希望不断提升工程效率，3个相关的分享分别来自BAT，可见互联网巨头们对团队效率提升的渴望和重视。&lt;/p&gt;

&lt;h4 id=&#34;10倍速原则对工程生产力建设的方向性影响-qiaoliang-talk&#34;&gt;&lt;a href=&#34;https://2019.qconbeijing.com/presentation/1505&#34;&gt;10倍速原则对工程生产力建设的方向性影响&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;这个talk来自腾讯的高级顾问乔梁，这位老兄已经连续10年在QCon上分享持续集成、持续交付等工程效率相关的主题了！他的演讲始于对成功企业的&lt;strong&gt;一万次实验法则&lt;/strong&gt;方法论，
&lt;figure&gt;
    &lt;img src=&#34;https://kane.mx/posts/2019/2019-qconbeijing-images/1%e4%b8%87%e6%ac%a1%e6%b3%95%e5%88%99.jpeg&#34;
         alt=&#34;1万次实验法则&#34;/&gt; 
&lt;/figure&gt;

而大量高效的实验基于一个&lt;strong&gt;双环模型&lt;/strong&gt;的快速验证环。
&lt;figure&gt;
    &lt;img src=&#34;https://kane.mx/posts/2019/2019-qconbeijing-images/%e5%8f%8c%e7%8e%af%e6%a8%a1%e5%9e%8b.jpeg&#34;
         alt=&#34;双环模型&#34;/&gt; 
&lt;/figure&gt;

最终工程生产力是由&lt;strong&gt;工作流程&lt;/strong&gt;、&lt;strong&gt;支撑工具&lt;/strong&gt;和&lt;strong&gt;工程素养&lt;/strong&gt;三方面一起决定的。
&lt;figure&gt;
    &lt;img src=&#34;https://kane.mx/posts/2019/2019-qconbeijing-images/%e5%b7%a5%e7%a8%8b%e7%94%9f%e4%ba%a7%e5%8a%9b.jpeg&#34;
         alt=&#34;工程生产力&#34;/&gt; 
&lt;/figure&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;非常认可决定工程效率的这三要素，个人认为&lt;strong&gt;工程素养&lt;/strong&gt;是其他两个要素的基石，&lt;a href=&#34;https://book.douban.com/subject/30356081/&#34;&gt;奈飞文化手册&lt;/a&gt;中开篇强调的只招聘&lt;strong&gt;成年人&lt;/strong&gt;就是很好的诠释。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;百度工程能力提升之道-baidu-talk&#34;&gt;&lt;a href=&#34;https://2019.qconbeijing.com/presentation/1487&#34;&gt;百度工程能力提升之道&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;这个分享来自百度研发效能部门的产品经理，从&lt;strong&gt;人&lt;/strong&gt;、&lt;strong&gt;技&lt;/strong&gt;、&lt;strong&gt;法&lt;/strong&gt;三方面强调工程能力提升的策略模型。其实这个模型就是对应着上面&lt;a href=&#34;#10倍速原则对工程生产力建设的方向性影响-qiaoliang-talk&#34;&gt;乔梁分享的工程生产力三要素&lt;/a&gt;。
&lt;figure&gt;
    &lt;img src=&#34;https://kane.mx/posts/2019/2019-qconbeijing-images/%e6%8f%90%e5%8d%87%e5%b7%a5%e7%a8%8b%e8%83%bd%e5%8a%9b%e7%ad%96%e7%95%a5.jpeg&#34;
         alt=&#34;提升工程能力的策略&#34;/&gt; 
&lt;/figure&gt;

关于对工程师的培养和技术规范，百度发布了&amp;rdquo;百度工程师手册&amp;rdquo;，据说可以从网络上下载到。大量工具的细节分享涉及的都是百度内部工具，不过工具针对的思路还是可以借鉴的。&lt;/p&gt;

&lt;h4 id=&#34;菜鸟集团研发效能变革实践-cainiao-talk&#34;&gt;&lt;a href=&#34;https://2019.qconbeijing.com/presentation/1439&#34;&gt;菜鸟集团研发效能变革实践&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;这个分享来自阿里系的菜鸟集团，特别强调数据化驱动的研发效能提升，里面很有意思的一点是建立成本模型来评估效能的好坏。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;作为效能部门负责人，有数据特别是成本数据，让高层管理者buy-in你的想法，这应该是个非常好的角度。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;高可用架构&#34;&gt;高可用架构&lt;/h3&gt;

&lt;h4 id=&#34;声明式自愈系统-高可用分布式系统的设计之道-declarative-system-talk&#34;&gt;&lt;a href=&#34;https://2019.qconbeijing.com/presentation/1511&#34;&gt;声明式自愈系统——高可用分布式系统的设计之道&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;这个分享比较理论化的介绍声明式的、可自愈的分布式系统原理和实践，其实业界已经有个非常好的参考实现 &amp;ndash; 就是&lt;a href=&#34;https://kubernetes.io&#34;&gt;Kubernetes&lt;/a&gt; 😃。&lt;/p&gt;

&lt;h4 id=&#34;超大规模高可用性云端系统构建之禅-caichao-talk&#34;&gt;&lt;a href=&#34;https://2019.qconbeijing.com/presentation/1437&#34;&gt;超大规模高可用性云端系统构建之禅&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;这是一个非常实用的工程实践分享，列举了大量大规模云原生应用一定会面临的挑战，以及简单又实用的解决方法。每一个云原生应用开发者都应该看看这个&lt;a href=&#34;https://static001.geekbang.org/con/38/pdf/2428705636/file/%E8%B6%85%E5%A4%A7%E8%A7%84%E6%A8%A1%E9%AB%98%E5%8F%AF%E7%94%A8%E6%80%A7%E4%BA%91%E7%AB%AF%E7%B3%BB%E7%BB%9F%E6%9E%84%E5%BB%BA%E4%B9%8B%E7%A6%85-%E8%94%A1%E8%B6%85.pdf&#34;&gt;slide&lt;/a&gt;，学习前人实践的经验。另外为讲演者蔡超做个推广，对Go语言有兴趣的同学，可以考虑学习蔡超的极客时间课程&lt;a href=&#34;https://time.geekbang.org/course/intro/160&#34;&gt;Go语言从入门到实战&lt;/a&gt;。&lt;/p&gt;

&lt;h3 id=&#34;运维架构&#34;&gt;运维架构&lt;/h3&gt;

&lt;h4 id=&#34;kubernetes-日志平台建设最佳实践-aliyun-sls-talk&#34;&gt;&lt;a href=&#34;https://2019.qconbeijing.com/presentation/1448&#34;&gt;Kubernetes 日志平台建设最佳实践&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;这个分享介绍了Kubernetes上日志方案的解决思路，及它的实践 &amp;ndash; 阿里云的日志服务。对于很多有基础服务建设的团队可以作为很好的参考方案。对于已经托管在阿里云上的应用，建议就不要重复建设低端的轮子了，阿里云日志服务应该做为团队的首选。不论在性能同其他云托管服务集成上，都远远好于自建的方案。&lt;/p&gt;

&lt;h4 id=&#34;多云管下的自动化运维架构-multi-clouds-talk&#34;&gt;&lt;a href=&#34;https://2019.qconbeijing.com/presentation/1653&#34;&gt;多云管下的自动化运维架构&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;多云是现在一些厂商力推的话题，个人认为是市场排名靠后的总要找些方法来提升自己产品的竞争力😏。分享者企业做了一套ops平台来管理多云的资源，他们通过adapter方式来将不同云厂商的差异和资源进行了抽象。这其中涉及大量处理产品间差异性和被动适配的工作，个人不太认同这种方式。并且丢掉了infra as code这类重要的特性，对于有这种需求的大型企业来说不是一个完美的方案。&lt;/p&gt;

&lt;h3 id=&#34;混沌工程-chaos-engineering-themes&#34;&gt;&lt;a href=&#34;https://2019.qconbeijing.com/track/565&#34;&gt;混沌工程&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;混沌工程这个话题非常有意思，同时也是较新的一种实践工程。从最早的提出、系统实践到现在还不到10年时间。来自阿里巴巴的&lt;a href=&#34;https://2019.qconbeijing.com/presentation/1479&#34;&gt;云原生架构下的混沌工程实践&lt;/a&gt;和AWS的&lt;a href=&#34;https://2019.qconbeijing.com/presentation/1741&#34;&gt;AWS 云上混沌工程实践之对照实验设计和实施&lt;/a&gt;两个分享介绍了从混沌工程的起源到如何全方位的实践用于提升云原生应用的&amp;rdquo;韧性&amp;rdquo;，非常值得学习。&lt;a href=&#34;#超大规模高可用性云端系统构建之禅-caichao-talk&#34;&gt;蔡超的超大规模高可用性云端系统构建&lt;/a&gt;也提到了使用混沌工程来提升系统的高可用性，在云原生应用越来越普及的情况下，被动的设计高可用系统肯定不如主动(甚至持续的自动化)可控的注入混乱来逐渐提升系统的高可用性。目前chaos engineering的工具/平台支持还不太完善，这个方向看起来是技术创业很好的切入点😏。最后切记一点，&lt;strong&gt;混沌工程最终一定要在生产系统上实施&lt;/strong&gt;。
&lt;figure&gt;
    &lt;img src=&#34;https://kane.mx/posts/2019/2019-qconbeijing-images/%e6%b7%b7%e5%8a%a8%e5%b7%a5%e7%a8%8b%e5%ae%9e%e8%b7%b5.jpeg&#34;
         alt=&#34;混动工程实践&#34;/&gt; 
&lt;/figure&gt;
&lt;/p&gt;

&lt;h3 id=&#34;下一代分布式应用-next-gen-ha-system&#34;&gt;&lt;a href=&#34;https://2019.qconbeijing.com/track/501&#34;&gt;下一代分布式应用&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;这个主题虽说命名为下一代分布式应用，主要分享的大多是服务间流量治理问题，特别是Service Mesh下实践经验。其中来自阿里李云的&lt;a href=&#34;https://2019.qconbeijing.com/presentation/1501&#34;&gt;分布式应用的未来——Distributionless&lt;/a&gt;特别值得一提。这个分享并没有实际的案例或经验分享，他重点分享的是对于Cloud Native本质和趋势的看法，这些观点我个人特别认同(&lt;code&gt;好像找到知音似的😀&lt;/code&gt;)！完整的slide&lt;a href=&#34;https://static001.geekbang.org/con/38/pdf/3913410004/file/%E5%88%86%E5%B8%83%E5%BC%8F%E5%BA%94%E7%94%A8%E7%9A%84%E6%9C%AA%E6%9D%A5&amp;amp;mdash;&amp;amp;mdash;Distributionless-%E6%9D%8E%E4%BA%91.pdf&#34;&gt;这里下载&lt;/a&gt;。
&lt;figure&gt;
    &lt;img src=&#34;https://kane.mx/posts/2019/2019-qconbeijing-images/CloudNative%e6%9c%ac%e8%b4%a8.jpeg&#34;
         alt=&#34;CloudNative的本质&#34;/&gt; 
&lt;/figure&gt;

&lt;figure&gt;
    &lt;img src=&#34;https://kane.mx/posts/2019/2019-qconbeijing-images/CloudNative%e7%9a%84%e8%b6%8b%e5%8a%bf.jpeg&#34;
         alt=&#34;CloudNative的趋势&#34;/&gt; 
&lt;/figure&gt;

&lt;figure&gt;
    &lt;img src=&#34;https://kane.mx/posts/2019/2019-qconbeijing-images/%e4%b8%8eCloudNative%e5%90%8c%e8%a1%8c.jpeg&#34;
         alt=&#34;与CloudNative同行&#34;/&gt; 
&lt;/figure&gt;
&lt;/p&gt;

&lt;h3 id=&#34;用户增长&#34;&gt;用户增长&lt;/h3&gt;

&lt;p&gt;来自云测的陈冠诚在&lt;a href=&#34;https://2019.qconbeijing.com/presentation/1650&#34;&gt;智能优化 &amp;amp; A/B 测试 - 实验驱动用户增长的理论与技术实践&lt;/a&gt;分享了A/B测试实验对用户增长的理论及实践，顺便也推广了他家云测的A/B测试SaaS服务。听圈内的朋友分享，云测的A/B测试服务确实比较简单好用，方便产品后台创建测试并分析结果，对增长有需求的小伙伴可以考虑体验下，减少不必要的重复建设轮子。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Spring Cloud or Cloud Native</title>
      <link>https://kane.mx/posts/effective-cloud-computing/spring-cloud-or-cloud-native/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/effective-cloud-computing/spring-cloud-or-cloud-native/</guid>
      <description>&lt;p&gt;基于Java的&lt;a href=&#34;https://spring.io/projects/spring-cloud&#34;&gt;Spring Cloud&lt;/a&gt;是由Java最大开源生态&lt;a href=&#34;https://spring.io/&#34;&gt;Spring&lt;/a&gt;社区推出的Out-of-Box分布式&lt;a href=&#34;https://en.wikipedia.org/wiki/Microservices&#34;&gt;微服务&lt;/a&gt;解决方案，&lt;a href=&#34;https://github.com/spring-projects/spring-cloud/wiki/Spring-Cloud-Angel-Release-Notes/6e0e1ba3d510d4a30b95c1468007b22f2427fa25&#34;&gt;自2016年发布&lt;/a&gt;起就被众多开发者看好。Java作为广为流行的服务端编程语言，&lt;a href=&#34;https://spring.io/projects/spring-cloud&#34;&gt;Spring Cloud&lt;/a&gt;也就越来越多的被用于微服务开发。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://spring.io/projects/spring-cloud&#34;&gt;Spring Cloud&lt;/a&gt;集成了&lt;a href=&#34;https://netflix.github.io/&#34;&gt;Netflix OSS&lt;/a&gt;开源项目实现了很多功能(或作为实现之一)，包括服务治理、网关路由、客户端负载均衡、服务间调用、断路器等。&lt;a href=&#34;https://spring.io/projects/spring-cloud-netflix&#34;&gt;Spring Cloud Netflix&lt;/a&gt;将很多生产级别微服务能力开箱即用的带到了Spring Cloud架构下的微服务中，帮助开发者快速的构建满足&lt;a href=&#34;https://12factor.net/&#34;&gt;12要素&lt;/a&gt;的应用。&lt;/p&gt;

&lt;p&gt;在去年底发布的&lt;a href=&#34;https://spring.io/blog/2018/12/12/spring-cloud-greenwich-rc1-available-now#spring-cloud-netflix-projects-entering-maintenance-mode&#34;&gt;Spring Cloud Greenwich版本&lt;/a&gt;中宣布&lt;a href=&#34;https://spring.io/projects/spring-cloud-netflix&#34;&gt;Spring Cloud Netflix&lt;/a&gt;中重要的组件&lt;a href=&#34;https://github.com/Netflix/Hystrix#hystrix-status&#34;&gt;Hystrix&lt;/a&gt;、&lt;a href=&#34;https://github.com/Netflix/ribbon#project-status-on-maintenance&#34;&gt;Ribbon&lt;/a&gt;、&lt;code&gt;Zuul 1&lt;/code&gt;等由于上游开源项目进入维护状态，对应的Spring Cloud Netflix项目也进入到维护状态。这些项目将&lt;strong&gt;不再适合&lt;/strong&gt;用于长期维护的产品中！&lt;/p&gt;

&lt;p&gt;同时随着近年云计算的发展，特别是&lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt;成为容器编排平台的事实标准，加上&lt;a href=&#34;https://www.nginx.com/blog/what-is-a-service-mesh/&#34;&gt;Service Mesh(服务网格)&lt;/a&gt;对微服务的服务治理和流量控制，为&lt;a href=&#34;https://www.redhat.com/en/topics/cloud-native-apps&#34;&gt;云原生应用&lt;/a&gt;提供了更为现代、平台无关的解决方案。&lt;/p&gt;

&lt;p&gt;让我们逐一看看在&lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt;加上Serivce Mesh(例如&lt;a href=&#34;https://istio.io/&#34;&gt;Istio&lt;/a&gt;)如何实现微服务的服务发现、路由、链路追踪、断路器等功能。&lt;/p&gt;

&lt;h3 id=&#34;配置中心&#34;&gt;配置中心&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://spring.io/projects/spring-cloud-config&#34;&gt;Spring Cloud Config&lt;/a&gt;默认提供了多种配置管理后端，例如&lt;code&gt;Git&lt;/code&gt;、&lt;code&gt;Vault&lt;/code&gt;、&lt;code&gt;JDBC Backend&lt;/code&gt;等。同时也有很多开源方案可以作为替换方案，比如&lt;a href=&#34;https://github.com/alibaba/nacos&#34;&gt;Alibaba Nacos&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;作为部署在&lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt;中的应用，最佳实践是平衡&lt;a href=&#34;https://kubernetes.io/docs/user-guide/configmap/&#34;&gt;Configmap&lt;/a&gt;和&lt;a href=&#34;https://spring.io/projects/spring-cloud-config&#34;&gt;Spring Cloud Config&lt;/a&gt;。将涉及程序功能的配置放置在&lt;a href=&#34;https://kubernetes.io/docs/user-guide/configmap/&#34;&gt;Configmap&lt;/a&gt;和Secret，随同微服务的发布一起做版本管理，可以做到&lt;strong&gt;随着应用回退的时候同时回退到历史对应的配置版本&lt;/strong&gt;，而不会因为历史版本的代码被最新版本的配置所中断。&lt;a href=&#34;https://github.com/spring-cloud/spring-cloud-kubernetes&#34;&gt;Spring Cloud Kuberentes&lt;/a&gt;项目很好的支持了Spring Cloud应用从&lt;a href=&#34;https://github.com/spring-cloud/spring-cloud-kubernetes#kubernetes-propertysource-implementations&#34;&gt;Configmap&lt;/a&gt;和&lt;a href=&#34;https://github.com/spring-cloud/spring-cloud-kubernetes#secrets-propertysource&#34;&gt;Secret&lt;/a&gt;中读取配置项。而涉及业务的配置选项，将可以考虑放到Spring Cloud Config后端实现统一管理。如果应用是部署在阿里云，使用阿里云托管的配置服务和&lt;a href=&#34;https://github.com/alibaba/nacos&#34;&gt;Spring Cloud Config &amp;ndash; Nacos&lt;/a&gt;将是很好的选择。&lt;/p&gt;

&lt;h3 id=&#34;服务发现&#34;&gt;服务发现&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/service/#discovering-services&#34;&gt;Kubernetes Services&lt;/a&gt;提供了集群内原生的服务发现能力，是&lt;a href=&#34;https://spring.io/projects/spring-cloud-netflix&#34;&gt;Eureka&lt;/a&gt;或&lt;a href=&#34;https://spring.io/projects/spring-cloud-zookeeper&#34;&gt;Spring Cloud Zookeeper&lt;/a&gt;等服务发现服务的很好替代品。基于K8S Services的服务发现，很容易通过Service Mesh能力实现限流、A/B测试、金丝雀发布、断路器、chaos注入等服务治理能力。同时对微服务应用来说，不用在应用端添加对应三方库来实现服务注册及发现，减少了应用端开发需求。&lt;/p&gt;

&lt;h3 id=&#34;各种流量治理场景&#34;&gt;各种流量治理场景&lt;/h3&gt;

&lt;p&gt;应用被服务化后，一定会面临流量治理的问题。对于各种服务间如何实现限流、A/B测试、金丝雀发布、断路器、chaos注入测试、链接追踪等，这其实是一类通用的问题。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://spring.io/projects/spring-cloud&#34;&gt;Spring Cloud&lt;/a&gt;提供的是一种客户端解决思路，需要每个应用引入对应功能的libraries的支持。即使通过&lt;a href=&#34;https://www.baeldung.com/spring-boot-starters&#34;&gt;spring boot starter&lt;/a&gt;提供了近似开箱即用的能力，但是每个应用仍然需要自行添加对应的能力，版本更新、安全漏洞fix等场景都需要手动升级、测试、打包、部署。在异构编程语言实现的微服务架构下，未必每种编程框架都能提供很好的对应能力支持。除非有特别的服务治理策略，不推荐在微服务自身来实现服务流量的控制。&lt;/p&gt;

&lt;p&gt;Service Mesh(例如&lt;a href=&#34;https://istio.io/&#34;&gt;Istio&lt;/a&gt;或&lt;a href=&#34;https://linkerd.io/&#34;&gt;Linkerd&lt;/a&gt;)从整个服务治理层面对上述需求提供了统一的解决方案，而不需要微服务做自身的升级或改动。在基于Kuberentes部署运行的微服务应用，Service Mesh提供了统一的服务治理方案，将用户从不同的微服务中自身维护服务治理功能中解放出来，从平台层面提供更加统一一致的解决方案。&lt;/p&gt;

&lt;p&gt;在去年的SpringOne Platform 2018上也有一个Topic &lt;a href=&#34;https://youtu.be/AMJQO9zs2eo&#34;&gt;A Tale of Two Frameworks: Spring Cloud and Istio&lt;/a&gt; 探讨什么场景应该使用Service Mesh，什么时候使用Spring Cloud服务治理组件，有兴趣的朋友可以看一看。&lt;/p&gt;


&lt;div class=&#34;youtube container&#34;&gt;
    &lt;iframe class=&#34;youtube&#34; type=&#34;text/html&#34;
        src=&#34;https://www.youtube.com/embed/AMJQO9zs2eo&#34;
        allowfullscreen frameborder=&#34;0&#34;&gt;
    &lt;/iframe&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>为Kubernetes中任意应用添加基于oauth2的认证保护 (下)</title>
      <link>https://kane.mx/posts/effective-cloud-computing/oauth2-proxy-on-kubernetes/part2/</link>
      <pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/effective-cloud-computing/oauth2-proxy-on-kubernetes/part2/</guid>
      <description>&lt;p&gt;本文是&lt;a href=&#34;https://kane.mx/posts/effective-cloud-computing/oauth2-proxy-on-kubernetes/part1/&#34;&gt;为Kubernetes中任意应用添加基于oauth2的认证保护&lt;/a&gt;的下篇，将图文详解如何使用基于&lt;a href=&#34;https://open-doc.dingtalk.com/microapp/serverapi2/kymkv6&#34;&gt;钉钉认证&lt;/a&gt;的&lt;a href=&#34;https://github.com/bitly/oauth2_proxy&#34;&gt;oauth2 proxy&lt;/a&gt;为自身本没有认证授权功能的Web站点实现认证及授权。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;示例是使用的&lt;a href=&#34;https://aws.amazon.com/eks/?nc1=f_ls&#34;&gt;AWS EKS&lt;/a&gt;服务作为K8S环境。鉴于K8S的应用运行时属性，该示例也可以部署在其他云厂商托管的K8S。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;示例模块简介&#34;&gt;示例模块简介&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/ingress-nginx&#34;&gt;Nginx Ingress Controller&lt;/a&gt;为K8S集群内Web应用提供反向代理，以及支持外部认证。&lt;/li&gt;
&lt;li&gt;简单的Web站点，基于&lt;a href=&#34;https://hub.docker.com/_/nginx&#34;&gt;Nginx docker容器&lt;/a&gt;。该站点默认没有认证及授权功能，使用外部&lt;a href=&#34;https://open-doc.dingtalk.com/microapp/serverapi2/kymkv6&#34;&gt;钉钉&lt;/a&gt;应用作为认证及授权。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/zxkane/oauth2_proxy&#34;&gt;OAuth2 Proxy on Dingtalk&lt;/a&gt;提供基于&lt;a href=&#34;https://open-doc.dingtalk.com/microapp/serverapi2/kymkv6&#34;&gt;钉钉&lt;/a&gt;应用的扫码认证及授权，只有认证且授权的用户才可以访问上面的Web站点。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;默认设定&#34;&gt;默认设定&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Web站点域名&lt;code&gt;web.kane.mx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;认证服务域名&lt;code&gt;oauth.kane.mx&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;准备-aws-eks-aws-eks-环境&#34;&gt;准备&lt;a href=&#34;https://aws.amazon.com/eks/?nc1=f_ls&#34;&gt;AWS EKS&lt;/a&gt;环境&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/create-cluster.html&#34;&gt;创建EKS集群&lt;/a&gt;。由于&lt;a href=&#34;https://github.com/kubernetes/ingress-nginx&#34;&gt;Nginx Ingress&lt;/a&gt;服务是LoadBalancer类型，EKS创建NLB或ELB对应的targets时需要targets部署在public VPC subnets，所以为了简化部署EKS集群的VPC subnets都选择public subnet。新建的EKS集群允许公开访问。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/managing-auth.html&#34;&gt;本地安装配置kubectl, aws-iam-authenticator&lt;/a&gt;用于远程管理集群。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/launch-workers.html&#34;&gt;为集群添加worker节点&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/helm.html&#34;&gt;配置Helm部署环境&lt;/a&gt;。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;钉钉应用准备&#34;&gt;钉钉应用准备&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;为企业或组织开通&lt;a href=&#34;https://open-dev.dingtalk.com/#/index&#34;&gt;钉钉开发平台&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;创建一个新的&lt;a href=&#34;https://open-dev.dingtalk.com/#/loginAndShareApp&#34;&gt;移动应用&lt;/a&gt;。回调域名填写&lt;code&gt;&amp;lt;http or https&amp;gt;/&amp;lt;认证服务域名&amp;gt;/oauth2/callback&lt;/code&gt;。记录下来应用的&lt;code&gt;appId&lt;/code&gt;和&lt;code&gt;appSecret&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;创建一个&lt;a href=&#34;https://open-dev.dingtalk.com/#/create-bench/self&#34;&gt;企业内部工作台应用&lt;/a&gt;。地址可以随意设置。服务器出口IP设置为&lt;code&gt;EKS集群中工作节点的公网IP&lt;/code&gt;或者&lt;code&gt;NAT EIP&lt;/code&gt;，取决于工作节点如何访问Internet。并记录下来应用&lt;code&gt;appKey&lt;/code&gt;和&lt;code&gt;appSecret&lt;/code&gt;。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;部署示例应用&#34;&gt;部署示例应用&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;克隆&lt;a href=&#34;https://github.com/zxkane/hands-on-dingtalk-oauth2-proxy&#34;&gt;示例&lt;/a&gt;部署脚本。&lt;/li&gt;
&lt;li&gt;替换&lt;code&gt;values.yaml&lt;/code&gt;中的&lt;code&gt;dingtalk_corpid&lt;/code&gt;为工作台应用的&lt;code&gt;appKey&lt;/code&gt;， &lt;code&gt;dingtalk_corpsecret&lt;/code&gt;为工作台应用的&lt;code&gt;appSecret&lt;/code&gt;。
    由于社区维护的&lt;a href=&#34;https://github.com/helm/charts/tree/master/stable/oauth2-proxy&#34;&gt;oauth2-proxy charts&lt;/a&gt;并不支持dingtalk扩展的SECRET ENV，所以将密钥配置到了&lt;code&gt;configmap&lt;/code&gt;中。用于生产环境的话，建议按&lt;a href=&#34;https://github.com/pilipa-cn/charts/commit/7ac0f67acc71577275f743bdcf9a870bd65361b0&#34;&gt;这个commit&lt;/a&gt;使用&lt;code&gt;secret&lt;/code&gt;保存应用secret。
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;62
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;63
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;64
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;65
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;66
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;67
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;68
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;69
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;70
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;71
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;72
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;oauth2-proxy:
  config:
    clientID: aaa
    clientSecret: bbb
    cookieSecret: ccc
    configFile: |&lt;span style=&#34;color:#e6db74&#34;&gt;+
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      email_domains = [ &amp;#34;*&amp;#34; ]&lt;/span&gt;
      cookie_domain = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;kane.mx&amp;#34;&lt;/span&gt;
      cookie_secure = &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;      dingtalk_corpid = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;appkey of dingtalk app&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;      dingtalk_corpsecret = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;appsecret of dingtalk app&amp;gt;&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
如果仅希望企业部分部门的员工可以获得授权，在上面&lt;code&gt;configFile&lt;/code&gt;配置下添加如下配置，
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;dingtalk_departments = [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xx公司/产品技术中心&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;xx公司/部门2/子部门3&amp;#34;&lt;/span&gt;]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;替换部署应用的域名为你的域名。&lt;/li&gt;
&lt;li&gt;执行以下命令安装Helm部署依赖。
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;helm dep up&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;执行以下命令部署nginx ingress controller, web应用以及oauth2 proxy
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;helm upgrade --install -f values.yaml --set oauth2-proxy.config.clientID&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;移动应用appid&amp;gt;,oauth2-proxy.config.clientSecret&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;lt;移动应用appsecret&amp;gt; site-with-auth --wait ./&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
如果集群中已经部署了&lt;code&gt;Nginx Ingress Controller&lt;/code&gt;，修改&lt;code&gt;values.yaml&lt;/code&gt;如下将忽略部署Nginx ingress，
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;47
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;48
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;49
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;50
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;51
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;52
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;53
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;affinity: {}

nginx-ingress:
&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;  enabled: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;  controller:
    ingressClass: nginx
    config:&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;部署成功后，获取&lt;code&gt;ELB&lt;/code&gt;地址。
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;kubectl get svc -o jsonpath&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{ $.status.loadBalancer.ingress[*].hostname }&amp;#39;&lt;/span&gt; &amp;lt;deployment name&amp;gt;-nginx-ingress-controller;echo
a3afe672259c511e98e2a0a0d88fda3e-xx.elb.ap-southeast-1.amazonaws.com&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;部署成功后配置&#34;&gt;部署成功后配置&lt;/h3&gt;

&lt;p&gt;将站点和oauth服务域名解析到上面部署创建的ELB上。&lt;/p&gt;

&lt;h3 id=&#34;测试&#34;&gt;测试&lt;/h3&gt;

&lt;p&gt;访问Web站点(如本示例中的&lt;code&gt;http://web.kane.mx&lt;/code&gt;)，未授权的情况下，调转到钉钉应用扫码登录界面。使用组织内成员的钉钉扫码授权后，将跳转回Web站点应用，可以正常浏览该域名下的页面。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>基于函数计算的钉钉回调函数接口</title>
      <link>https://kane.mx/posts/effective-cloud-computing/serverless-dingtalk-callback/</link>
      <pubDate>Tue, 02 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/effective-cloud-computing/serverless-dingtalk-callback/</guid>
      <description>&lt;p&gt;由于企业内部管理的需要，用到了&lt;a href=&#34;https://open-doc.dingtalk.com/microapp/serverapi2/lo5n6i&#34;&gt;钉钉的业务事件回调&lt;/a&gt;能力，正好将这个轻量级的接口使用&lt;a href=&#34;https://kane.mx/posts/effective-cloud-computing/serverless-computing-101/&#34;&gt;无服务器技术&lt;/a&gt;来实现部署，以应对流量无规律下的动态扩展伸缩、按需使用、按量计费等需求。&lt;/p&gt;

&lt;h3 id=&#34;阿里云函数计算版本&#34;&gt;阿里云函数计算版本&lt;/h3&gt;

&lt;p&gt;由于公司系统部署在阿里云，首先选择使用&lt;a href=&#34;https://www.aliyun.com/product/fc&#34;&gt;阿里云函数计算&lt;/a&gt;来实现及部署。该接口使用了JVM上语言Kotlin开发，虽然阿里云函数计算官方支持的&lt;a href=&#34;https://help.aliyun.com/document_detail/74712.html&#34;&gt;开发语言有Java但没有Kotlin&lt;/a&gt;。其实无论Java或Kotlin最终部署文件都是Java Class字节码，加上Kotlin与Java良好的互操作性，实测函数计算可以完美支持Kotlin开发(个人认为任意JVM上的开发语言都是支持的)。&lt;/p&gt;

&lt;p&gt;同时该函数使用了&lt;a href=&#34;https://www.aliyun.com/product/ots&#34;&gt;表格存储&lt;/a&gt;来持久化回调事件。表格存储是个按量计费的分布式存储，有兴趣的可以自行查阅文档了解更多。&lt;/p&gt;

&lt;p&gt;该函数通过&lt;a href=&#34;https://www.aliyun.com/product/apigateway&#34;&gt;API网关&lt;/a&gt;和&lt;a href=&#34;https://help.aliyun.com/document_detail/100092.html&#34;&gt;表格存储触发器&lt;/a&gt;来触发。访问日志和执行日志被存储在&lt;a href=&#34;https://www.aliyun.com/product/sls&#34;&gt;日志服务&lt;/a&gt;中。&lt;/p&gt;

&lt;p&gt;函数的本地测试和线上部署，使用了函数计算提供的命令行工具&lt;a href=&#34;https://help.aliyun.com/document_detail/64204.html&#34;&gt;Fun&lt;/a&gt;。基于&lt;a href=&#34;https://github.com/aliyun/fun/blob/master/docs/specs/2018-04-03-zh-cn.md?spm=a2c4g.11186623.2.24.717428femnY0Et&amp;amp;file=2018-04-03-zh-cn.md&#34;&gt;Fun定义的阿里云Serverless模型&lt;/a&gt;实现了对函数们使用资源的声明和编排，集成&lt;a href=&#34;https://about.gitlab.com/product/continuous-integration/&#34;&gt;Gitlab CI&lt;/a&gt;实现了&lt;a href=&#34;https://github.com/zxkane/dingtalk-callback-on-aliyunfc/blob/master/.gitlab-ci.yml&#34;&gt;函数的CI/CD自动化发布流程&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;不涉及公司业务的代码已&lt;a href=&#34;https://github.com/zxkane/dingtalk-callback-on-aliyunfc&#34;&gt;开源在Github&lt;/a&gt;，有兴趣的可以作为参考。&lt;/p&gt;

&lt;p&gt;目前&lt;a href=&#34;https://help.aliyun.com/document_detail/54301.html&#34;&gt;函数计算&lt;/a&gt;和&lt;a href=&#34;https://help.aliyun.com/document_detail/52733.html&#34;&gt;表格存储&lt;/a&gt;有各自的免费配额，在业务量不大的情况下，该服务完全免费。&lt;/p&gt;

&lt;h3 id=&#34;aws-lambda版本&#34;&gt;AWS Lambda版本&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://aws.amazon.com/lambda/&#34;&gt;AWS Lambda&lt;/a&gt;是目前全球使用最为广泛的serverless服务，同时也是函数计算发展方向的引领者。&lt;/p&gt;

&lt;p&gt;由于一些个人原因，笔者最近接触了部分AWS服务，同时尝试将钉钉回调函数移植到了&lt;a href=&#34;https://aws.amazon.com/lambda/&#34;&gt;AWS Lambda&lt;/a&gt;上。阿里云上使用的云服务改为由AWS上对应服务来实现，例如存储使用了&lt;a href=&#34;https://aws.amazon.com/dynamodb/&#34;&gt;DynamoDB&lt;/a&gt;，日志使用&lt;a href=&#34;https://aws.amazon.com/cloudwatch/&#34;&gt;CloudWatch&lt;/a&gt;收集和查询。&lt;/p&gt;

&lt;p&gt;本地测试和部署工具，使用的是&lt;a href=&#34;https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html&#34;&gt;SAM CLI&lt;/a&gt;，持续集成和持续部署使用的是&lt;a href=&#34;https://aws.amazon.com/codebuild/&#34;&gt;AWS CodeBuild&lt;/a&gt;和&lt;a href=&#34;https://aws.amazon.com/codepipeline/&#34;&gt;AWS CodePipeline&lt;/a&gt;。此外AWS通过&lt;a href=&#34;https://aws.amazon.com/cloudformation/&#34;&gt;AWS CloudFormation&lt;/a&gt;提供一种非常强大的能力，可以将AWS上的各种资源通过配置声明的方式来管理(也就是现在非常热门的一个概念&amp;ndash;&lt;a href=&#34;https://en.wikipedia.org/wiki/Infrastructure_as_code&#34;&gt;Infrastructure as Code&lt;/a&gt;)。&lt;a href=&#34;https://aws.amazon.com/cloudformation/&#34;&gt;AWS CloudFormation&lt;/a&gt;会为每次一个或多个资源的变更生成ChangeSet，提供查看对比、版本管理、遇到变更错误整体回退等能力。所以，AWS版本也将该项目的CI/CD部署用到的&lt;a href=&#34;https://aws.amazon.com/codebuild/&#34;&gt;AWS CodeBuild&lt;/a&gt;、&lt;a href=&#34;https://aws.amazon.com/codepipeline/&#34;&gt;AWS CodePipeline&lt;/a&gt;、&lt;a href=&#34;https://aws.amazon.com/dynamodb/&#34;&gt;Amazon DynamoDB&lt;/a&gt;等资源通过CloudFormation的配置管理起来。&lt;/p&gt;

&lt;p&gt;配置代码段如下，
&lt;div class=&#34;highlight&#34;&gt;&lt;div style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;
&lt;table style=&#34;border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;&#34;&gt;&lt;tr&gt;&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 1
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 2
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 3
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 4
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 5
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 6
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 7
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 8
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt; 9
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;10
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;11
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;12
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;13
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;14
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;15
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;16
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;17
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;18
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;19
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;20
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;21
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;22
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;23
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;24
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;25
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;26
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;27
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;28
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;29
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;30
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;31
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;32
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;33
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;34
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;35
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;36
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;37
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;38
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;39
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;40
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;41
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;42
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;43
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;44
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;45
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;46
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;47
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;48
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;49
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;50
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;51
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;52
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;53
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;54
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;55
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;56
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;57
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;58
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;59
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;60
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;61
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;62
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;63
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;64
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;65
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;66
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;67
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;68
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;69
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;70
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;71
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;72
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;73
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;74
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;75
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;76
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;77
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;78
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;79
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;80
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;81
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;82
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;83
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;84
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;85
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;86
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;87
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;88
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;89
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;90
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;91
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;92
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;93
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;94
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;95
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;96
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;97
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;98
&lt;/span&gt;&lt;span style=&#34;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f&#34;&gt;99
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td style=&#34;vertical-align:top;padding:0;margin:0;border:0;&#34;&gt;
&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;Description: Create a CodePipeline to include Github source, CodeBuild and Lambda deployment.

Parameters:
  AppBaseName:
    Type: String
    Description: App base name
    Default: dingtalk-callback
  ArtifactStoreS3Location:
    Type: String
    Description: Name of the S3 bucket to store CodePipeline artificat.
  BranchName:
    Description: GitHub branch name
    Type: String
    Default: master
  RepositoryName:
    Description: GitHub repository name
    Type: String
    Default: dingtalk-callback-on-aws
  GitHubOAuthToken:
    Type: String
    NoEcho: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;

Resources:
  BuildDingtalkProject:
    Type: AWS::Project
    Properties:
      Name:
        Fn: ${AppBaseName}-build-${AWS::StackName}
      Description: Build, test, package dingtalk callback project
      ServiceRole:
        Fn: [ CodeBuildRole, Arn ]
      Artifacts:
        Type: S3
        Location:
          Ref: ArtifactStoreS3Location
        Name:
          Fn: ${AppBaseName}-build-${AWS::StackName}
        NamespaceType: BUILD_ID
        Path: 
          Fn: ${AppBaseName}/artifacts
        Packaging: NONE
        OverrideArtifactName: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
        EncryptionDisabled: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/java:openjdk-&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;
        PrivilegedMode: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
        ImagePullCredentialsType: CODEBUILD
        EnvironmentVariables:
          - Name: s3_bucket
            Value:
              Ref: ArtifactStoreS3Location
      Source:

&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;  DingtalkCallbackPipeline:
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;    Type: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;AWS::Pipeline&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;    Properties:
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;      Name:
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;        Fn: ${AppBaseName}-pipeline-${AWS::StackName}
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;      RoleArn:
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;        Fn: [ CodePipelineRole, Arn ]
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;      Stages:
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;        - Name: Source
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;          Actions:
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;            - Name: SourceAction
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;              ActionTypeId:
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                Category: Source
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                Owner: ThirdParty
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                Version: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                Provider: GitHub
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;              OutputArtifacts:
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                - Name: 
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                    Fn: ${AppBaseName}-source-changed
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;              Configuration:
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                Owner: !Ref GitHubOwner
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                Repo: !Ref RepositoryName
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                Branch: !Ref BranchName
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                OAuthToken: !Ref GitHubOAuthToken
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;                PollForSourceChanges: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;              RunOrder: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;        - Name: Build
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;          Actions:
&lt;/span&gt;&lt;span style=&#34;display:block;width:100%;background-color:#3c3d38&#34;&gt;            - Name: Build_Test_Package
&lt;/span&gt;              InputArtifacts:
                - Name:
                    Fn: ${AppBaseName}-source-changed
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
                Provider: CodeBuild
              OutputArtifacts:
                - Name: 
                    Fn: ${AppBaseName}-packaged-yml
              Configuration:
                ProjectName:
                  Ref: BuildDingtalkProject
              RunOrder: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;AWS版本完整的代码、CloudFormation配置以及部署文档可以通过&lt;a href=&#34;https://github.com/zxkane/dingtalk-callback-on-aws&#34;&gt;这里&lt;/a&gt;查看。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>无服务器计算101</title>
      <link>https://kane.mx/posts/effective-cloud-computing/serverless-computing-101/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/effective-cloud-computing/serverless-computing-101/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Serverless_computing&#34;&gt;Serverless Computing(无服务器计算)&lt;/a&gt;是目前最被看好的云端计算执行模型。其最大的好处是提供分布式弹性可伸缩的计算执行环境，仅为实际使用资源付费，并且将应用维护者从常规的运维事务中解放出来，更利于专注到具体的业务上。&lt;/p&gt;

&lt;p&gt;在主流的应用部署方式下，无论是使用&lt;a href=&#34;https://aws.amazon.com/cn/ec2&#34;&gt;云主机&lt;/a&gt;还是&lt;a href=&#34;https://kane.mx/posts/effective-cloud-computing/using-kubernetes-on-cloud/&#34;&gt;Kubernetes&lt;/a&gt;作为运行环境，都会有大量运维层面的事务需要考虑和处理，并且应用程序需要按照分布式程序的设计准则来应对应用的水平伸缩。同时随着云计算服务的发展和完善，云计算厂商提供了越来越多的基础服务，例如API网关、对象存储、消息队列、日志、监控等服务，函数计算可以完美的同其他云服务集成，帮助用户快速实现出生产级别的弹性可伸缩的应用。&lt;/p&gt;

&lt;p&gt;那&lt;a href=&#34;https://en.wikipedia.org/wiki/Serverless_computing&#34;&gt;函数计算&lt;/a&gt;是什么呢？让我们一起来看看&lt;a href=&#34;https://help.aliyun.com/document_detail/52895.html&#34;&gt;阿里云对于函数计算的定义&lt;/a&gt;。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;阿里云函数计算是事件驱动的全托管计算服务。通过函数计算，您无需管理服务器等基础设施，只需编写代码并上传。函数计算会为您准备好计算资源，以弹性、可靠的方式运行您的代码，并提供日志查询、性能监控、报警等功能。借助于函数计算，您可以快速构建任何类型的应用和服务，无需管理和运维。而且，您只需要为代码实际运行所消耗的资源付费，代码未运行则不产生费用。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;基于函数计算的特点，可以很好满足以下需求，&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;业务流量不确定或有明细的周期性&lt;/li&gt;
&lt;li&gt;构建分布式系统经验不足&lt;/li&gt;
&lt;li&gt;无需运维&lt;/li&gt;
&lt;li&gt;按需计算&lt;/li&gt;
&lt;li&gt;计费灵活&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;由于函数计算的扩展能力，对运维的要求极少，按量计费等特性用于需要快速验证的早期项目也是非常好的场景。&lt;/p&gt;

&lt;p&gt;下面这个slide是近期针对阿里云函数计算做的分享。&lt;/p&gt;

&lt;div class=&#34;responsive-wrap&#34;&gt;
  &lt;iframe src=&#34;https://docs.google.com/presentation/d/e/2PACX-1vQpucN0Imyd1rram7bmQJzO5lRwRrph5KDL18swF_MuKiUFm4_H2Hg8cpUnP_83yqleJnSXYtE9gvUv/embed?start=false&amp;amp;loop=false&amp;amp;delayms=60000&#34; frameborder=&#34;0&#34; width=&#34;960&#34; height=&#34;569&#34; allowfullscreen=&#34;true&#34; mozallowfullscreen=&#34;true&#34; webkitallowfullscreen=&#34;true&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>为Kubernetes中任意应用添加基于oauth2的认证保护 (上)</title>
      <link>https://kane.mx/posts/effective-cloud-computing/oauth2-proxy-on-kubernetes/part1/</link>
      <pubDate>Sun, 03 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/effective-cloud-computing/oauth2-proxy-on-kubernetes/part1/</guid>
      <description>&lt;p&gt;企业随着业务的发展，必然会部署各种各样的IT系统。出于安全性的考虑，一些系统仅可企业内部使用，甚至仅开放给企业部分部门员工使用。&lt;/p&gt;

&lt;p&gt;这些IT系统大致可分为两类，&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;系统本身不支持任何认证机制，例如资讯或文档类系统。需要增加认证保护，能够限制非企业员工访问即可。系统运维通常的做法是，为站点设置&lt;a href=&#34;https://en.wikipedia.org/wiki/Basic_access_authentication&#34;&gt;HTTP Basic认证&lt;/a&gt;保护。由于&lt;a href=&#34;https://en.wikipedia.org/wiki/Basic_access_authentication&#34;&gt;HTTP Basic认证&lt;/a&gt;是通过预设的用户、密码认证，认证信息比较容易泄露。即使定期更换密码，但需要额外的机制通知用户密码的变更，用户体验也不好。&lt;/li&gt;
&lt;li&gt;系统自身支持认证，甚至支持多种认证机制。比如最常用的开源CI/CD工具，&lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins&lt;/a&gt;内置支持本地数据库认证、通过&lt;a href=&#34;https://plugins.jenkins.io/#&#34;&gt;插件&lt;/a&gt;支持多种第三方系统集成认证。如果大量的IT系统都有一套独立的用户管理，随着企业的员工的变更，用户的增删等操作对系统管理员来说是不小的工作量。同时，也很容易由于人为疏忽，造成资产、数据的安全隐患。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;假设企业自身已经有了一套OA系统包含员工、组织结构管理，例如，国内目前最为普及流行的&lt;a href=&#34;https://www.dingtalk.com/&#34;&gt;钉钉&lt;/a&gt;或&lt;a href=&#34;https://work.weixin.qq.com/&#34;&gt;企业微信&lt;/a&gt;。我们完全可以提供一套基于&lt;a href=&#34;https://oauth.net/2/&#34;&gt;oauth 2.0协议&lt;/a&gt;的认证方式，让以上两类IT系统使用企业已有的OA系统(&lt;a href=&#34;https://www.dingtalk.com/&#34;&gt;钉钉&lt;/a&gt;或&lt;a href=&#34;https://work.weixin.qq.com/&#34;&gt;企业微信&lt;/a&gt;)来实现登录认证。做到这一点后，企业无论有多少IT系统都不再需要额外管理用户的成本，并且也避免了数据安全隐患。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.dingtalk.com/&#34;&gt;钉钉&lt;/a&gt;通过&lt;a href=&#34;https://open-dev.dingtalk.com&#34;&gt;钉钉开放平台&lt;/a&gt;提供的API开放了许多钉钉内部的能力，例如，&lt;a href=&#34;https://open-doc.dingtalk.com/microapp/serverapi2/vt6khw&#34;&gt;身份验证&lt;/a&gt;、&lt;a href=&#34;https://open-doc.dingtalk.com/microapp/serverapi2/cqfmel&#34;&gt;通讯录管理&lt;/a&gt;等等。然而&lt;a href=&#34;https://open-doc.dingtalk.com/microapp/serverapi2/kymkv6&#34;&gt;钉钉的三方网站登录接口&lt;/a&gt;并不是标准的&lt;a href=&#34;https://oauth.net/2/&#34;&gt;oauth 2.0协议&lt;/a&gt;实现，我们需要通过一个&lt;a href=&#34;https://github.com/zxkane/oauth2_proxy&#34;&gt;oauth2 proxy&lt;/a&gt;代理工具实现将&lt;a href=&#34;https://open-doc.dingtalk.com/microapp/serverapi2/kymkv6&#34;&gt;钉钉的三方网站登录&lt;/a&gt;兼容&lt;a href=&#34;https://oauth.net/2/&#34;&gt;oauth2&lt;/a&gt;协议。同理，使用&lt;a href=&#34;https://github.com/bitly/oauth2_proxy&#34;&gt;这个oauth2代理工具&lt;/a&gt;，可以使用&lt;a href=&#34;https://github.com/bitly/oauth2_proxy#google-auth-provider&#34;&gt;Google&lt;/a&gt;、&lt;a href=&#34;https://github.com/bitly/oauth2_proxy#facebook-auth-provider&#34;&gt;Facebook&lt;/a&gt;等三方网站作为统一认证方式。&lt;/p&gt;

&lt;p&gt;有了基于&lt;a href=&#34;https://github.com/zxkane/oauth2_proxy&#34;&gt;钉钉的oauth2代理&lt;/a&gt;作为企业统一登录方式，对于上面两大类系统的认证需求解决方案分别如下，&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;部署在&lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt;中无内置认证机制的Web应用，通过&lt;a href=&#34;https://kubernetes.github.io/ingress-nginx/&#34;&gt;nginx-ingress&lt;/a&gt;的&lt;a href=&#34;https://kubernetes.github.io/ingress-nginx/examples/auth/oauth-external-auth/&#34;&gt;外部OAUTH认证&lt;/a&gt;实现基于oauth2的安全认证。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins&lt;/a&gt;可以通过&lt;a href=&#34;https://plugins.jenkins.io/reverse-proxy-auth-plugin&#34;&gt;反向代理插件&lt;/a&gt;实现使用oauth2认证登录。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;在&lt;a href=&#34;https://kane.mx/posts/effective-cloud-computing/oauth2-proxy-on-kubernetes/part2/&#34;&gt;下篇&lt;/a&gt;中，我们将图文详解如何一步步实现为一个无认证的企业文档Web应用添加基于&lt;a href=&#34;https://open-doc.dingtalk.com/microapp/serverapi2/vt6khw&#34;&gt;钉钉的统一认证&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>IAM最佳实践</title>
      <link>https://kane.mx/posts/effective-cloud-computing/iam-best-practice/</link>
      <pubDate>Fri, 01 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/effective-cloud-computing/iam-best-practice/</guid>
      <description>&lt;p&gt;企业使用公有云服务的第一件事情就是创建云帐号，有了帐号之后如何让企业员工安全合规的使用云帐号下的各种资源是开启云之旅后的第一个考验。&lt;/p&gt;

&lt;p&gt;云计算厂商针对企业上云后面临的第一个需求已经推出了完善的解决方案&amp;ndash;&lt;a href=&#34;https://en.wikipedia.org/wiki/Identity_management&#34;&gt;Identity and Access Management&lt;/a&gt;。&lt;a href=&#34;https://en.wikipedia.org/wiki/Identity_management&#34;&gt;IAM&lt;/a&gt;可以帮助云帐号安全地控制对云计算服务资源的访问。企业可以使用IAM控制对哪个用户进行身份验证 (登录) 和授权 (具有权限) 以使用资源。&lt;/p&gt;

&lt;p&gt;云厂商是否提供完善的IAM服务可以作为整体产品解决方案是否成熟的一个衡量指标，比如AWS的&lt;a href=&#34;https://docs.aws.amazon.com/zh_cn/IAM/latest/UserGuide/introduction.html&#34;&gt;IAM&lt;/a&gt;和阿里云的&lt;a href=&#34;https://help.aliyun.com/document_detail/28627.html&#34;&gt;访问控制&lt;/a&gt;都是较为成熟完善的产品。国内某个以AI能力为卖点的云厂商，在IAM产品方面几乎为零，很难相信对安全合规有需求的企业会完整使用他的云产品作为解决方案。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Identity_management&#34;&gt;IAM&lt;/a&gt;通常提供以下功能:&lt;/p&gt;

&lt;h3 id=&#34;对云账户的共享访问权限&#34;&gt;对云账户的共享访问权限&lt;/h3&gt;

&lt;p&gt;允许在一个云账户下创建并管理多个用户身份，并允许给单个身份或一组身份（既可以是当前云帐号下也可以是其他云帐号下）分配不同的权限策略，从而实现不同用户拥有不同的云资源访问权限，而不必共享云帐号根用户的密码或访问密钥。&lt;/p&gt;

&lt;h3 id=&#34;精细权限&#34;&gt;精细权限&lt;/h3&gt;

&lt;p&gt;可以针对不同资源向不同人员授予不同权限。可以要求用户必须使用安全信道（如 SSL）、在指定时间范围、或在指定源 IP 条件下才能操作指定的云资源。&lt;/p&gt;

&lt;h3 id=&#34;多重验证-mfa&#34;&gt;多重验证 (MFA)&lt;/h3&gt;

&lt;p&gt;可以向云账户和各个用户添加双重身份验证以实现更高安全性。借助&lt;a href=&#34;https://en.wikipedia.org/wiki/Multi-factor_authentication&#34;&gt;MFA&lt;/a&gt;，用户不仅必须提供使用账户所需的密码或访问密钥，还必须提供来自经过特殊配置的设备的代码。&lt;/p&gt;

&lt;h3 id=&#34;联合身份&#34;&gt;联合身份&lt;/h3&gt;

&lt;p&gt;可以允许已在其他位置（例如，在企业网络中或通过 Internet 身份提供商）获得密码的用户获取对云账户的用户访问权限。&lt;/p&gt;

&lt;p&gt;后面会有专门的文章来讲如何实践联合身份。&lt;/p&gt;

&lt;h3 id=&#34;统一账单&#34;&gt;统一账单&lt;/h3&gt;

&lt;p&gt;云账户接收包括所有用户的资源操作所发生费用的统一账单。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;尽管&lt;a href=&#34;https://en.wikipedia.org/wiki/Identity_management&#34;&gt;IAM&lt;/a&gt;提供了上面种种功能，云帐号的管理者仍可通过一些最佳实践来更好的使用IAM产品来提升安全级别和减少运维成本。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;iam最佳实践&#34;&gt;IAM最佳实践&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;尽量不要使用云帐号的根用户，&lt;strong&gt;不要为根用户创建AK&lt;/strong&gt;。云帐号管理员也使用各自独立的子账号。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;为企业中每一个需要使用云服务的员工单独创建子账户，且默认不允许创建AK&lt;/strong&gt;。便于员工离职的时候，通过删除帐号来完全清理用户在云计算平台的各种权限。&lt;/li&gt;
&lt;li&gt;密码安全实践，

&lt;ul&gt;
&lt;li&gt;限制密码强度&lt;strong&gt;不少于8位&lt;/strong&gt;，必须&lt;strong&gt;由大小写字母、数字和符号中的三种组成&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;强制密码&lt;strong&gt;过期时间不超过90天&lt;/strong&gt;，且过期后不可登录。&lt;/li&gt;
&lt;li&gt;新密码至少&lt;strong&gt;禁止使用前3次密码&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;设置密码重试约束，例如，&lt;strong&gt;一小时内使用错误密码最大尝试9次登录&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;强制所有用户启用&lt;a href=&#34;https://en.wikipedia.org/wiki/Multi-factor_authentication&#34;&gt;两步认证&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;对访问网络有限制的企业，可以开启登录IP限制。&lt;/li&gt;
&lt;li&gt;[&lt;strong&gt;推荐做法&lt;/strong&gt;]已有SSO单点登录系统的企业，可以通过&lt;a href=&#34;https://en.wikipedia.org/wiki/SAML_2.0&#34;&gt;SAML 2.0标准&lt;/a&gt;实现从企业本地账号系统登录到阿里云，从而满足企业的统一用户登录认证要求。&lt;/li&gt;
&lt;li&gt;细粒度的权限管理，

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;为各种云资源创建最细粒度的权限策略&lt;/strong&gt;。例如，分别为RDS实例&lt;code&gt;rds-instance-1&lt;/code&gt;创建只读权限策略&lt;code&gt;rds-instance-1-readonly-access&lt;/code&gt;，RDS实例&lt;code&gt;rds-instance-2&lt;/code&gt;创建只读权限策略&lt;code&gt;rds-instance-2-readonly-access&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;根据职能、部门等维度为云帐号子用户创建用户组&lt;/strong&gt;。例如，按项目创建用户组，&lt;code&gt;group-project-a&lt;/code&gt;，&lt;code&gt;group-project-b&lt;/code&gt;。如果&lt;code&gt;project-a&lt;/code&gt;用户需要访问&lt;code&gt;rds-instance-1&lt;/code&gt;的信息，将自定义权限&lt;code&gt;rds-instance-1-readonly-access&lt;/code&gt;授权给&lt;code&gt;group-project-a&lt;/code&gt;。再将相关用户加到用户组&lt;code&gt;group-project-a&lt;/code&gt;中，这样这些用户就具有只读访问RDS实例&lt;code&gt;rds-instance-1&lt;/code&gt;的权限。而不是将所有RDS的读写权限都授予这些用户，&lt;strong&gt;最大限度的保证用户不获取超过实际需要的权限&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;在实际场景中，通常会通过云计算服务的API来完成某些周期性任务，比如每日RDS中的慢查询统计、云帐号每日花费统计等。这些任务都需要一个云帐号的AK来完成API的身份认证。最佳的做法是，&lt;strong&gt;为每类相关的任务创建一个&lt;code&gt;功能性子账号&lt;/code&gt;&lt;/strong&gt;，禁用他们的web登录，且遵循特殊的命名规范(&lt;code&gt;functional-&lt;/code&gt;开头)，比如&lt;code&gt;functional-rds-stats&lt;/code&gt;、&lt;code&gt;functional-cost-stats&lt;/code&gt;。创建最小的权限策略，然后分配给这些功能性用户。例如，&lt;code&gt;functional-rds-stats&lt;/code&gt;仅被授予RDS只读权限，&lt;code&gt;functional-cost-stats&lt;/code&gt;仅被授予费用的只读权限。为这些子账号创建AK，每类任务使用不同的AK来完成API认证，而不是都使用同一个AK。这样的好处是，不同类型任务的AK具有不同的权限，最大限度的保护了云帐号的安全，并且这些AK不跟实际的员工子账号关联，不会因为员工帐号的变更而受影响。如有更高的安全合规的要求下，可以定期作废已有AK，创建新AK替换。至于AK怎样安全管理，之后会有专门的文章来详解。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>不要自建Kubernetes</title>
      <link>https://kane.mx/posts/effective-cloud-computing/using-kubernetes-on-cloud/</link>
      <pubDate>Tue, 22 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/effective-cloud-computing/using-kubernetes-on-cloud/</guid>
      <description>&lt;p&gt;这是“如何高效使用云服务”系列文章的首篇分享。可能有朋友好奇为什么不是从云计算最基础的服务&amp;ndash;计算资源&lt;a href=&#34;https://cn.aliyun.com/product/ecs&#34;&gt;ECS&lt;/a&gt;/&lt;a href=&#34;https://aws.amazon.com/cn/ec2/&#34;&gt;EC2&lt;/a&gt;讲起呢？在&lt;a href=&#34;https://pivotal.io/cloud-native&#34;&gt;Cloud Native&lt;/a&gt;已经被越来越接受的今天，基于&lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt;部署、编排应用的方式已经是业界的事实标准。无论是互联网巨头，传统500强企业，还是创业团队都在使用或规划使用&lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt;作为应用程序的自动化部署、可扩展管理平台。在云计算平台，虚拟机越来越不需要单独的管理，在绝大多数的业务场景下，它们只是作为容器集群所管理的计算资源。甚至虚拟机的创建到销毁整个生命周期管理都可以由&lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt;根据集群的负载来自动完成。&lt;/p&gt;

&lt;p&gt;所有主流的云计算厂商都在解决方案中力推托管的&lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt;，&lt;a href=&#34;https://aws.amazon.com/cn/&#34;&gt;AWS&lt;/a&gt;的&lt;a href=&#34;https://aws.amazon.com/eks&#34;&gt;EKS&lt;/a&gt;，&lt;a href=&#34;https://azure.microsoft.com/en-us/&#34;&gt;Azure&lt;/a&gt;上的&lt;a href=&#34;https://azure.microsoft.com/en-us/services/kubernetes-service/&#34;&gt;AKS&lt;/a&gt;，当然少不了Google家&lt;a href=&#34;https://cloud.google.com/&#34;&gt;GCP&lt;/a&gt;上的&lt;a href=&#34;https://cloud.google.com/kubernetes-engine/&#34;&gt;Kubernetes Engine&lt;/a&gt;。国内&lt;a href=&#34;https://www.aliyun.com/product/kubernetes&#34;&gt;阿里云&lt;/a&gt;，&lt;a href=&#34;https://cloud.tencent.com/product/tke&#34;&gt;腾讯云&lt;/a&gt;等每一个公有云玩家也都基于开源&lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt;推出了托管服务。如果一家云计算厂商在提供托管&lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt;这一服务上没跟上业界的步伐，将来极大可能被淘汰出这个市场。&lt;/p&gt;

&lt;h2 id=&#34;托管的kubernetes类型&#34;&gt;托管的Kubernetes类型&lt;/h2&gt;

&lt;p&gt;以国内的阿里云为例，目前提供了两大类三种不同的&lt;a href=&#34;https://help.aliyun.com/document_detail/86737.html&#34;&gt;Kubernetes托管服务&lt;/a&gt;。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;经典Dedicated Kubernetes模式。这种模式下用户可以选择宿主机实例规格和操作系统，指定Kubernetes版本、自定义Kubernetes特性开关设置等。用户需要手动维护集群，例如升级Kubernetes版本，内置组件版本等。可以手动或自动伸缩集群节点数目。目前该模式下有两种类型，第一种集群主节点需要使用用户的ECS，用户可远程登录或管理这些ECS。另一种是，主节点也由云厂商托管，用户只能通过API Server管理Kubernetes。在费用方面，无论是否托管集群主节点，集群服务免费，按使用的ECS实例及计费方式收费。&lt;/li&gt;
&lt;li&gt;Serverless 模式(目前公测中，暂时免费)。无需创建底层虚拟化资源，可以利用 Kubernetes 命令指明应用容器镜像、CPU和内存要求以及对外服务方式，直接启动应用程序。按容器使用的CPU和内存资源量计费。这种模式下应该是在一个集群内实现多租户，目前有些&lt;a href=&#34;https://help.aliyun.com/document_detail/86371.html&#34;&gt;features不被支持&lt;/a&gt;。例如，部署不支持DaemonSet，Ingress不支持NodePort类型，存储不支持PV和PVC等。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;用户可以根据自己的业务类型来选择适合的托管Kubernetes集群。如果部署的应用是&lt;a href=&#34;https://kubernetes.io/docs/tutorials/stateless-application/&#34;&gt;无状态的Web服务&lt;/a&gt;，可以选择Serverless Kubernetes集群，进一步减少运维工作量。&lt;/p&gt;

&lt;p&gt;如果用户部署的应用有状态，需要挂载外部存储，例如MongDB集群，MQ集群，可以选择经典Dedicated Kubernetes模式。如果用户需要通过Kubernetes组件扩展或自定义实现某些功能，这些需求云厂商的标准版并没有提供，这时可以选择经典Dedicated Kubernetes模式，利用Kubernetes高度灵活的扩展机制来满足自定义需求。&lt;/p&gt;

&lt;h2 id=&#34;托管kuberentes的优势&#34;&gt;托管Kuberentes的优势&lt;/h2&gt;

&lt;p&gt;国内的阿里云有篇技术文档对比&lt;a href=&#34;https://help.aliyun.com/document_detail/69575.html&#34;&gt;阿里云Kubernetes vs. 自建Kubernetes&lt;/a&gt;，文章看起来虽然有厂商自卖自夸的嫌疑。作为&lt;a href=&#34;https://www.aliyun.com/product/kubernetes&#34;&gt;阿里云K8S&lt;/a&gt;的客户，在使用托管K8S近一年来，深切的体会到云厂商托管K8S带来的种种好处，文档中提到的种种优势确实是言之凿凿。&lt;/p&gt;

&lt;p&gt;接下来具体看看云厂商托管K8S到底有哪些优势。&lt;/p&gt;

&lt;h3 id=&#34;便捷&#34;&gt;便捷&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;通过Web界面/API一键创建Kubernetes集群，集群升级。&lt;/li&gt;
&lt;li&gt;Web界面/API实现集群的扩容或缩容。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;集群的安装，补丁以及常规版本升级在运维工作中属于体力活。在规模不大的时候，使用人工实现需要花费不少时间准备环境测试验证，且易错。如果集群体量不够大的话，开发自动化运维脚本又浪费人力成本。云计算厂商的托管K8S集群将提供专业、稳定的技术运维服务，和几乎为零的人力成本。&lt;/p&gt;

&lt;p&gt;从效率和人力成本上看，&lt;strong&gt;托管K8S集群完胜自建Kubernetes集群&lt;/strong&gt;。&lt;/p&gt;

&lt;h3 id=&#34;功能更强大&#34;&gt;功能更强大&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt;作为一个容器编排系统，开源版本中许多组件没有默认实现或实现有限，需要跟运行环境(如托管K8S的云平台)集成。例如，存储，Load Balancer，网络等核心组件。官方文档&lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer&#34;&gt;Internal load balancer&lt;/a&gt;就提供了在不同的云厂商环境中的使用示例。部署一个强大且完整的K8S集群需要同许多云计算的基础组件集成(且只能通过API完成)，这往往是云计算厂商的强项。&lt;/p&gt;

&lt;p&gt;云厂商托管的K8S可以在以下方面提供强大的云计算平台支持，&lt;/p&gt;

&lt;h4 id=&#34;网络&#34;&gt;网络&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;高性能 VPC 网络插件。&lt;/li&gt;
&lt;li&gt;支持 network policy 和流控。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;负载均衡&#34;&gt;负载均衡&lt;/h4&gt;

&lt;p&gt;支持创建公网或内网负载均衡实例，或者复用已有实例。支持指定带宽大小、计费方式、4层或7层协议代理等云厂商负载均衡功能。对应用运维来说可以把负载均衡的配置通过代码实现，并且支持版本控制。对比传统的云端部署，也可以将应用部署和应用运维集成在一起统一管理，避免应用发布和运维配置的割裂，减少人为运维失误。&lt;/p&gt;

&lt;p&gt;阿里云托管K8S的负载均衡详细配置可以参考这个&lt;a href=&#34;https://help.aliyun.com/document_detail/53759.html?spm=a2c4g.11186623.2.15.73364c07mR8rhS#h2-url-4&#34;&gt;文档&lt;/a&gt;，AWS上见此&lt;a href=&#34;https://docs.aws.amazon.com/eks/latest/userguide/load-balancing.html&#34;&gt;文档&lt;/a&gt;。&lt;/p&gt;

&lt;h4 id=&#34;存储&#34;&gt;存储&lt;/h4&gt;

&lt;p&gt;集成了云厂商的云盘、文件存储NAS、块存储等存储方案，基于标准的&lt;a href=&#34;https://github.com/kubernetes/community/blob/master/contributors/devel/flexvolume.md&#34;&gt;FlexVolume&lt;/a&gt;驱动，提供了最佳的无缝集成。&lt;/p&gt;

&lt;p&gt;如果是在云厂商的虚拟机上自建&lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt;集群，默认无法使用云上的存储资源。如果需要利用云厂商提供的存储方案，例如对象存储，就需要自行开发基于&lt;a href=&#34;https://github.com/kubernetes/community/blob/master/contributors/devel/flexvolume.md&#34;&gt;FlexVolume&lt;/a&gt;的驱动。在厂商托管K8S已经完美解决了存储集成的问题，何必自己又去费时费力的定制开发呢？&lt;/p&gt;

&lt;p&gt;可以看到，云厂商托管的K8S集群在网络、负载均衡和存储上有许多天然的优势。在其他几个维度，托管的K8S集群同样也优于自建的K8S，&lt;/p&gt;

&lt;h4 id=&#34;运维&#34;&gt;运维&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;集成厂商的日志服务，监控服务。&lt;/li&gt;
&lt;li&gt;K8S集群cluster autoscaler自动利用云厂商的弹性伸缩扩缩容集群节点。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;镜像仓库&#34;&gt;镜像仓库&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;高可用，支持大并发。&lt;/li&gt;
&lt;li&gt;支持镜像加速。&lt;/li&gt;
&lt;li&gt;支持 p2p 分发。&lt;/li&gt;
&lt;li&gt;可集成云平台的用户权限。&lt;/li&gt;
&lt;li&gt;部分厂商目前免费且不限容量。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;高可用&#34;&gt;高可用&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;提供多可用区支持。&lt;/li&gt;
&lt;li&gt;支持备份和容灾。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;技术支持&#34;&gt;技术支持&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;专门的技术团队保障容器的稳定性。&lt;/li&gt;
&lt;li&gt;每个 Linux 版本，每个 Kubernetes 版本都会在经过严格测试之后之后才会提供给用户。&lt;/li&gt;
&lt;li&gt;提供 Kubernetes 升级能力，新版本一键升级。&lt;/li&gt;
&lt;li&gt;为开源软件提供兜底，无论是K8S、Docker甚至Linux自身的问题提供支持。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;专业的技术团队是提供稳定K8S服务必不可少的。但绝大多数企业是无法做到有专业的技术团队来维护K8S、提供K8S或容器技术自身的各种最佳实践、发现以及修复开源软件Bug。&lt;/p&gt;

&lt;p&gt;在笔者的使用托管K8S的时候就遇到这样的状况。其中一个集群升级到新版本&lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt;后，内置DNS组件从&lt;a href=&#34;https://github.com/kubernetes/dns&#34;&gt;KubeDNS&lt;/a&gt;被替换为全新的&lt;a href=&#34;https://coredns.io/&#34;&gt;CoreDNS&lt;/a&gt;，而当时的&lt;a href=&#34;https://coredns.io/&#34;&gt;CoreDNS&lt;/a&gt;版本在&lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/service/#externalname&#34;&gt;Service ExternalName&lt;/a&gt;支持上有Bug，导致已有的这种Service无法提供服务。在同云厂商的技术团队沟通后，先用workaround将问题快速绕过，不影响业务的使用。同时，云厂商的技术人员（也是K8S社区committer）继续调研，发现该问题是&lt;a href=&#34;https://coredns.io/&#34;&gt;CoreDNS&lt;/a&gt;的Bug。在为开源&lt;a href=&#34;https://coredns.io/&#34;&gt;CoreDNS&lt;/a&gt;项目创建Issue后，同时提供Patch，又在CoreDNS committer建议下完善了测试用例，推动了该问题快速在CoreDNS中被修复。CoreDNS包含Fix的版本发布后，云厂商技术支持团队将更完美的解决方案提供给了我们。作为K8S服务的用户，这种体验是极好的。当时我们的技术团队既没有精力也没有能力快速发现并修复开源软件中的这类问题，而云厂商的服务间接帮我们实现了这种能力。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;这其实是一种非常好的共赢商业模式，云厂商有能力且有动力投入顶尖技术团队将开源技术商业化，云厂商的用户则用最小的代价获得了最优的基础服务来为核心业务赋能。&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>真的会用云服务吗？</title>
      <link>https://kane.mx/posts/effective-cloud-computing/preface/</link>
      <pubDate>Mon, 07 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/effective-cloud-computing/preface/</guid>
      <description>&lt;p&gt;这是“如何高效使用云服务”系列文章的引子。该系列将讲述如何利用各种公有云服务来安全合规、高质量、快速、低成本的打造产品/系统，帮助企业（特别是中小微创业团队）在人少，钱缺的情况下做到最高效率。&lt;/p&gt;

&lt;h2 id=&#34;个人使用公有云服务的经历&#34;&gt;个人使用公有云服务的经历&lt;/h2&gt;

&lt;h3 id=&#34;初会&#34;&gt;初会&lt;/h3&gt;

&lt;p&gt;最早是2012年在parttime项目中开始接触使用云计算服务，当时的初创团队也是希望用最低的成本来验证idea，所有使用了云服务来做POC。目前国内市场最领先的云计算厂商&lt;a href=&#34;https://baike.baidu.com/item/%E9%98%BF%E9%87%8C%E4%BA%91#4&#34;&gt;阿里云那时也才提供公有云服务不到1年&lt;/a&gt;。由于云产品不够成熟，加上团队技能经验不足，自助互助的渠道不畅，导致最初的云计算使用体验并不好，团队没有选择完全使用云服务构建产品。&lt;/p&gt;

&lt;h3 id=&#34;iaas-or-paas&#34;&gt;IaaS or PaaS&lt;/h3&gt;

&lt;p&gt;云计算兴起的早期，云厂商大致分为两类，提供基于&lt;a href=&#34;https://en.wikipedia.org/wiki/Infrastructure_as_a_service&#34;&gt;IaaS&lt;/a&gt;或&lt;a href=&#34;https://en.wikipedia.org/wiki/Platform_as_a_service&#34;&gt;PaaS&lt;/a&gt;的云服务。2013年起也有尝试不同类型的厂商平台，虽然也较好的完成一些体量不大的项目，但要在他们上面构建大规模用户产品或企业级应用，在云产品完善度上或支持开发团队协作上都有不少欠缺，还有大量的基础工作或限制留给了开发团队自身解决。&lt;/p&gt;

&lt;h3 id=&#34;all-in-cloud&#34;&gt;All-in Cloud&lt;/h3&gt;

&lt;p&gt;2015年我开始一个微电影项目创业，团队是不到10人的微型团队。从效率和成本考虑，我们将所有的服务都放到了阿里云上。我们使用了多种云产品，例如，云主机（多种OS），对象存储，图片处理，CDN，SLB，人脸识别等云服务，结合&lt;a href=&#34;https://en.wikipedia.org/wiki/DevOps&#34;&gt;Devops&lt;/a&gt;集成开发，测试，部署pipeline来加速产品的迭代和更新。每名工程师承担一种以上角色，前端，后端，运维，数据，视频渲染等。合理使用云厂商的各种产品帮我们在质量，效率，成本上获得巨大的收益。&lt;/p&gt;

&lt;p&gt;2017年我加入了一家企业财税服务的初创公司负责技术团队。公司在2018年获得了B轮投资，研发产品运营团队近百人，属于中等规模。随着各种开源技术的巨大进步和影响逐步扩大，&lt;a href=&#34;https://en.wikipedia.org/wiki/Microservices&#34;&gt;微服务&lt;/a&gt;架构的流行，基于&lt;a href=&#34;https://kubernetes.io/&#34;&gt;Kubernetes&lt;/a&gt;的&lt;a href=&#34;https://www.cncf.io/&#34;&gt;Cloud Native Computing&lt;/a&gt;兴起。我们利用云厂商的容器服务，&lt;a href=&#34;https://en.wikipedia.org/wiki/Cloud_database&#34;&gt;DBaaS&lt;/a&gt;，Big Data，AI技术等用最高效的方式将数个单体应用平滑升级到高可用弹性的分布式架构，更好的满足复杂业务的多变需求，公司服务也在全国300多个城市落地，服务了数十万中小微企业客户。同时利用云厂商的VPC，访问控制，WAF等产品进行权限控制和安全保护，有效防范了因为团队扩大管理难度增加而出现安全问题。&lt;/p&gt;

&lt;h2 id=&#34;缘起&#34;&gt;缘起&lt;/h2&gt;

&lt;p&gt;作为一名云计算服务6年的用户，见证了开源技术的快速发展和影响力急剧扩大，感受到整个云计算行业和厂商的长足进步。见证了国内头部云厂商从最初的使用难度颇大，现在成长为万众创业的首选服务商。&lt;/p&gt;

&lt;p&gt;过去的一年参加了数场技术会议，其中主题大多偏向于由知名的互联网或行业公司分享在海量数据下的技术应用。这些技术广泛涉及开发语言、应用架构、性能、大数据、机器学习和人工智能等领域，无论这些公司是否采用开源产品，在团队单兵技术能力，专业的分工，对开源项目的研发投入力量，这些经验和方法并不是中小企业可以轻易借鉴的。而云计算厂商将这些领域最基础通用的能力以产品的方式输出给用户，以按用量的方式计费，使用更简单，有专业团队维护和支持。中小团队就应该将这些事情“外包”给云厂商，集中精力到业务上，将最大的研发资源用到最核心最关键的地方。&lt;/p&gt;

&lt;p&gt;我同团队同事沟通中，和公司研发候选人面试交流中，发现许多从业者对云计算服务了解还不够深入。许多人理解中的云计算服务只有云服务器、云数据库等少数产品，需要自己安装维护应用服务器、负载均衡、收集日志等等看起来每个应用都绕不开的事情。他们的认知还停留在排查应用异常还需要远程登录服务器看日志，做不到合理的根据场景高效组合使用云服务，将云服务当做水电一样，作为最基础的能力加速业务的发展。业务上是采用名气大且成熟的产品，尝试新鲜看起来酷但不那么完善的产品，还是二次开发或自研开发？要做出最优的选择需要工程师能够从有高度的全局角度来考量，甚至在短时间内能用POC项目验证多个可选的方案，基于数据做出最终的选择。&lt;/p&gt;

&lt;p&gt;这就是这个系列的缘起，之后我将陆续分享使用那些高效的云服务产品的场景、心得、体会等等。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;封面图片&lt;a href=&#34;http://www.thebluediamondgallery.com/tablet/c/cloud-computing.html&#34;&gt;Cloud Computing&lt;/a&gt;引用自&lt;a href=&#34;http://www.thebluediamondgallery.com/&#34;&gt;The Blue Diamond Gallery&lt;/a&gt; under &lt;a href=&#34;http://creativecommons.org/licenses/by-sa/3.0/&#34;&gt;CC BY-SA 3.0&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>2018北京ArchSummit回顾</title>
      <link>https://kane.mx/posts/2018/2018-12-13-bj-archsummit-review/</link>
      <pubDate>Thu, 13 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2018/2018-12-13-bj-archsummit-review/</guid>
      <description>&lt;p&gt;上周参加了&lt;a href=&#34;https://bj2018.archsummit.com&#34;&gt;ArchSummit(全球架构师峰会)&lt;/a&gt;，在这里记录下部分参加的主题以及个人感受。&lt;/p&gt;

&lt;h3 id=&#34;会议回顾&#34;&gt;会议回顾&lt;/h3&gt;

&lt;p&gt;今年参加了几次技术会议，&lt;code&gt;微服务&lt;/code&gt;、&lt;code&gt;容器技术&lt;/code&gt;、&lt;code&gt;区块链&lt;/code&gt;、&lt;code&gt;大数据&lt;/code&gt;、&lt;code&gt;机器学习&lt;/code&gt;以及&lt;code&gt;人工智能&lt;/code&gt;都是当下最热门的主题。同样这次ArchSummit绝大部分topics都跟这些主题相关。&lt;/p&gt;

&lt;p&gt;这次会议主要参加了两个专场主题，&lt;a href=&#34;https://bj2018.archsummit.com/track/440&#34;&gt;Kubernetes的应用&lt;/a&gt;和&lt;a href=&#34;https://bj2018.archsummit.com/track/446&#34;&gt;快手科技技术专题&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://bj2018.archsummit.com/presentation/928&#34;&gt;基于 Kubernetes 的 DevOps&lt;/a&gt;是来自微软Azure的容器工程师分享如何基于 Kubernetes 的 CI/CD 落地实践。该分享中提到了CI/CD各个步骤中都有众多的工具支持，如何选择合适Kubernetes的工具将持续集成和部署串联在一起是Devops中的主要挑战。分享者也安利了AKS提供Devops完整的工具链，以及将开源工具同AKS中的服务集成实现CI/CD的最佳实践。&lt;/p&gt;

&lt;p&gt;我们噼里啪团队在CI/CD、Devops这块做得还不错。CI/CD pipelines持续将应用部署在运行的Kubernetes集群，过程中使用的工具链基本也是社区或CNCF推荐的主流工具。下一步可以考虑同云厂商的Devops工具链集成，进一步减少维护成本。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://bj2018.archsummit.com/presentation/1258&#34;&gt;基于Istio on Kubernetes云原生应用的最佳实践&lt;/a&gt;来自阿里云容器工程师的分享。他概要的分享了Istio技术和实现原理。当然也大力介绍了阿里云容器服务对Istio的原生支持，以及阿里云对客户使用Istio的支持，即使客户问题非常的初级他们的技术支持也很到位。&lt;/p&gt;

&lt;p&gt;Istio可以说是CNCF在Kubernetes上事实的服务治理实现。噼里啪技术团队也一直在关注这一块，正在尝试引入Istio提升服务的SLA。&lt;/p&gt;

&lt;p&gt;快手技术团队的4个分享都是围绕解决明确的业务问题而做得技术工作，非常具有实战性。其中&lt;a href=&#34;https://bj2018.archsummit.com/presentation/1337&#34;&gt;快手万亿级实时 OLAP 平台的建设与实践&lt;/a&gt;介绍了快手实时OLAP平台从0到1的搭建过程。该平台从今年4月开始搭建，截止到11月，每日可以实时计算处理超过万亿的数据。而整个平台的搭建由两名大数据工程师外加一名前端工程师负责portal等UI，人效产出让人非常佩服。结合朋友间传言快手给技术人员的offer，快手应该是一家在实践类似Netflix管理文化的公司。&lt;/p&gt;

&lt;p&gt;最后给大家推荐一个国产的分布式New SQL数据库TiDB相关的主题。TiDB是国内技术团队开源的一个分布式数据库，已被CNCF作为Database实现推荐方案之一。他们的CTO分享了&lt;a href=&#34;https://bj2018.archsummit.com/presentation/1331&#34;&gt;TiDB on Kubernetes 最佳实践&lt;/a&gt;，以及他们客户北京银行在&lt;a href=&#34;https://bj2018.archsummit.com/presentation/962&#34;&gt;两地多活的核心系统&lt;/a&gt;中采用的数据库就是TiDB。&lt;/p&gt;

&lt;h3 id=&#34;个人感受&#34;&gt;个人感受&lt;/h3&gt;

&lt;p&gt;会议的分享者大多来自国内一线的互联网公司，他们普遍具备流量大、数据多、技术团队能力更强等特质。并且很少使用公有云服务，使用开源产品多数也会维护私有版本。他们的业务解决方案对中小型技术团队来说可复制性不强，照搬实施的难度高，更多的是在扩展思路了解业界技术动态。中小型技术团队最紧迫的事情是满足业务快速发展和需求多变，更合理的解法是选用云厂商的服务或第三方服务快速高效的满足业务需求。极客邦旗下的会议大多缺少这类的分享，相比之下AWS的reInvent大会在这方面做得更好。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何修复Jenkins CI无法读取存在的任务配置</title>
      <link>https://kane.mx/posts/2016/how-to-fix-jenkins-fail-to-load-job-config/</link>
      <pubDate>Wed, 12 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/how-to-fix-jenkins-fail-to-load-job-config/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://vme360.com&#34;&gt;V秘&lt;/a&gt;开发团队一直使用着&lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins CI&lt;/a&gt;来持续集成&lt;a href=&#34;https://vme360.com&#34;&gt;V秘&lt;/a&gt;服务的新功能和各种改进。近日，&lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins CI&lt;/a&gt;在重启之后，很多已有任务的配置无法被&lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins CI&lt;/a&gt;完整的加载，导致很多功能无法使用。导致我们整个网站的各种服务无法被升级更新了:-(&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins CI&lt;/a&gt;在管理控制台列出如下的错误信息，示意现有任务的部分配置由于错误无法加载。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CannotResolveClassException: hudson.plugins.git.GitSCM, 
CannotResolveClassException: com.cloudbees.jenkins.plugins.BitBucketTrigger, 
CannotResolveClassException: hudson.plugins.emailext.ExtendedEmailPublisher, 
CannotResolveClassException: hudson.plugins.parameterizedtrigger.BuildTrigger
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;通过上面的错误信息，我们初步认为错误是由于插件无法被&lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins CI&lt;/a&gt;加载。但是通过&lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins CI&lt;/a&gt;的插件管理列表，我们发现&lt;strong&gt;Git&lt;/strong&gt;插件已经被认为是安装的了。同时我们也可以在&lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins CI&lt;/a&gt;安装目录中找到插件对应的文件&lt;code&gt;git.jar&lt;/code&gt;，并且成功验证了类&lt;code&gt;hudson.plugins.git.GitSCM&lt;/code&gt;也是存在在jar文件里面的。重新安装&lt;code&gt;Git client&lt;/code&gt;插件也不能解决这个错误！&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;经过进一步的分析，通过&lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins CI&lt;/a&gt;的系统日志，我们发现&lt;code&gt;Git插件&lt;/code&gt;虽然是成功安装了，但是它所依赖的某些插件没有被安装！这导致&lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins CI&lt;/a&gt;无法正确加载&lt;code&gt;Git插件&lt;/code&gt;。通过日志的提示，将缺失的插件一一安装上，重启&lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins CI&lt;/a&gt;后，插件加载正常，任务执行也恢复正常。&lt;/p&gt;

&lt;p&gt;这个错误出现的还是相当奇怪。因为&lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins CI&lt;/a&gt;会在安装插件的时候将依赖的插件一并安装上。此外该&lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins CI&lt;/a&gt;已经运行很久了，这些插件也是一直安装着的。不过现在回想起之前升级&lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins CI&lt;/a&gt;插件的时候，部分插件由于网络原因升级失败了，但是没有重新更新。这导致这些插件处在了一个不正确的状态。在重启&lt;a href=&#34;https://jenkins.io/&#34;&gt;Jenkins CI&lt;/a&gt;后，这些插件被标记为未安装，导致依赖它们的插件无法加载。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MongoDB中如何找出慢查询</title>
      <link>https://kane.mx/posts/2016/how-to-find-slow-queries-in-mongodb/</link>
      <pubDate>Thu, 29 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/how-to-find-slow-queries-in-mongodb/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.mongodb.com/&#34;&gt;MongoDB&lt;/a&gt;是目前最为流行的&lt;a href=&#34;https://en.wikipedia.org/wiki/NoSQL&#34;&gt;NoSQL&lt;/a&gt;数据库之一。&lt;a href=&#34;https://vme360.com&#34;&gt;V秘&lt;/a&gt;的后台数据就是保存在&lt;a href=&#34;https://www.mongodb.com/&#34;&gt;MongoDB&lt;/a&gt;中的哦;)&lt;/p&gt;

&lt;p&gt;尽管&lt;a href=&#34;https://www.mongodb.com/&#34;&gt;MongoDB&lt;/a&gt;的性能为业界称道，但任何数据库系统使用中都存在着慢查询的问题。慢查询的性能问题，可能是由于使用非最优的查询语句，不正确的索引或其他配置原因导致的。但开发人员或数据库维护人员首先要找出这些低效的查询，才能做出对应的查询优化。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;在&lt;a href=&#34;https://www.mongodb.com/&#34;&gt;MongoDB&lt;/a&gt;中实现慢查询的profile是非常容易，因为&lt;a href=&#34;https://www.mongodb.com/&#34;&gt;MongoDB&lt;/a&gt;内置了&lt;a href=&#34;https://docs.mongodb.com/manual/reference/method/db.setProfilingLevel/&#34;&gt;profile开关&lt;/a&gt;来记录执行时间触发了profile条件的查询。&lt;/p&gt;

&lt;p&gt;参照&lt;a href=&#34;https://docs.mongodb.com/manual/reference/method/db.setProfilingLevel/&#34;&gt;db.setProfileLevel()&lt;/a&gt;的文档，通过以下命令就可以记录执行时长超过&lt;strong&gt;300ms&lt;/strong&gt;的查询。&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;db&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;setProfilingLevel&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;300&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;当慢查询被重现后，可以通过查找&lt;code&gt;system.profile&lt;/code&gt; collection来查看执行时长超过&lt;strong&gt;300ms&lt;/strong&gt;的查询。&lt;/p&gt;

&lt;p&gt;被profiler记录下来慢查询record看起来如下，&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{       
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;op&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;query&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;ns&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;myCollection&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;query&amp;#34;&lt;/span&gt; : {     
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;builds&amp;#34;&lt;/span&gt; : {    
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;$elemMatch&amp;#34;&lt;/span&gt; : {
                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;builtTime&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;,
                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;$and&amp;#34;&lt;/span&gt; : [      
                                        {               
                                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;createdTime&amp;#34;&lt;/span&gt; : {
                                                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;$lt&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;ISODate(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2016-09-20T2000.796Z&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;)&lt;/span&gt;
                                                }
                                        }
                                ]
                        }
                }
        },
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;ntoreturn&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;ntoskip&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;nscanned&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;nscannedObjects&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#ae81ff&#34;&gt;18231&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;keyUpdates&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;writeConflicts&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;numYield&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#ae81ff&#34;&gt;577&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;locks&amp;#34;&lt;/span&gt; : {     
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Global&amp;#34;&lt;/span&gt; : {    
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;acquireCount&amp;#34;&lt;/span&gt; : {
                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;NumberLong(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1156&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;)&lt;/span&gt;
                        }
                },      
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Database&amp;#34;&lt;/span&gt; : {  
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;acquireCount&amp;#34;&lt;/span&gt; : {
                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;NumberLong(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;578&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;)&lt;/span&gt;
                        }
                },      
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Collection&amp;#34;&lt;/span&gt; : {
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;acquireCount&amp;#34;&lt;/span&gt; : {
                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;NumberLong(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;578&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;)&lt;/span&gt;
                        }
                }
        },
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;nreturned&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;responseLength&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#ae81ff&#34;&gt;98076&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;millis&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#ae81ff&#34;&gt;11161&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;execStats&amp;#34;&lt;/span&gt; : {
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;stage&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;COLLSCAN&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;filter&amp;#34;&lt;/span&gt; : {
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;builds&amp;#34;&lt;/span&gt; : {
                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;$elemMatch&amp;#34;&lt;/span&gt; : {
                                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;$and&amp;#34;&lt;/span&gt; : [
                                                {
                                                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;$and&amp;#34;&lt;/span&gt; : [
                                                                {
                                                                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;createdTime&amp;#34;&lt;/span&gt; : {
                                                                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;$lt&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;ISODate(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2016-09-20T2000.796Z&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;)&lt;/span&gt;
                                                                        }
                                                                }
                                                        ]
                                                },
                                                {
                                                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;builtTime&amp;#34;&lt;/span&gt; : {
                                                                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;$eq&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;
                                                        }
                                                }
                                        ]
                                }
                        }
                },
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;nReturned&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;executionTimeMillisEstimate&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#ae81ff&#34;&gt;11080&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;works&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#ae81ff&#34;&gt;18233&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;advanced&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;needTime&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#ae81ff&#34;&gt;18230&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;needFetch&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;saveState&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#ae81ff&#34;&gt;577&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;restoreState&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#ae81ff&#34;&gt;577&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;isEOF&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;invalidates&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;direction&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;forward&amp;#34;&lt;/span&gt;,
                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;docsExamined&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#ae81ff&#34;&gt;18231&lt;/span&gt;
        },      
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;ts&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;ISODate(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2016-09-20T2314.313Z&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;)&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;client&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10.171.127.66&amp;#34;&lt;/span&gt;,
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;allUsers&amp;#34;&lt;/span&gt; : [
                {
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dbuser&amp;#34;&lt;/span&gt;,
                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;db&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mydb&amp;#34;&lt;/span&gt;
                }
        ],
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dbuser@mydb&amp;#34;&lt;/span&gt;
}   &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;上面的数据具体解读如下，&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;op: &#39;query&#39;&lt;/code&gt;表示执行的是查询，&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ns&lt;/code&gt;是指查询的collection，&lt;/li&gt;
&lt;li&gt;&lt;code&gt;query&lt;/code&gt;是具体的查询语句，&lt;/li&gt;
&lt;li&gt;核心部分是&lt;code&gt;execStats&lt;/code&gt;，给出了的查询语句具体执行统计，跟&lt;strong&gt;.explain(&amp;lsquo;execStats&amp;rsquo;)&lt;/strong&gt;的内容是一致的。上面的统计是说，这个query执行了整个collection的扫描(总计扫描了18231个文档)，最终返回了2条文档，花费了11080ms，也就是11s还多的时间！这表明被记录下的慢查询跟collection的索引设置有问题，该查询没有用上索引。解决方案很简单，改善查询语句使用存在的索引或者设置合理的索引。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ts&lt;/code&gt;是查询开始请求的时间，&lt;/li&gt;
&lt;li&gt;&lt;code&gt;allUsers&lt;/code&gt;和&lt;code&gt;user&lt;/code&gt;都是MongoDB client连接所使用的用户。&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Docker Swarm mode(v1.12.x)的一些使用限制</title>
      <link>https://kane.mx/posts/2016/the-limitations-docker-swarm-mode-v1.12/</link>
      <pubDate>Tue, 20 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/the-limitations-docker-swarm-mode-v1.12/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://docs.docker.com/engine/swarm/&#34;&gt;Swarm mode&lt;/a&gt;在&lt;a href=&#34;https://www.docker.com&#34;&gt;Docker&lt;/a&gt; v1.12中正式发布，&lt;a href=&#34;https://docs.docker.com/engine/swarm/&#34;&gt;Swarm mode&lt;/a&gt;带来了诸如Docker集群，容器编排，多主机网络等激动人心的特性。&lt;a href=&#34;https://vme360.com&#34;&gt;V秘&lt;/a&gt;团队也尝试着将各种后台服务部署到&lt;a href=&#34;https://docs.docker.com/engine/swarm/&#34;&gt;Docker Swarm Cluster&lt;/a&gt;获取更好的弹性计算能力。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.docker.com&#34;&gt;Docker v1.12&lt;/a&gt;中正式发布的&lt;a href=&#34;https://docs.docker.com/engine/swarm/&#34;&gt;Docker Swarm&lt;/a&gt;在我们实用中发现仍有不少不足之处，让我们一一分享给大家。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;ol&gt;
&lt;li&gt;无法将服务的published端口只绑定到特点的网卡上。比如我们的云主机（同时也是Swarm manager/node）有&lt;strong&gt;eth0&lt;/strong&gt;和&lt;strong&gt;eth1&lt;/strong&gt;两块网卡，分别连接内网和外网。我们计划在&lt;a href=&#34;https://docs.docker.com/engine/swarm/&#34;&gt;Docker Swarm&lt;/a&gt;中运行一个&lt;strong&gt;nginx&lt;/strong&gt;服务，通过80/443端口提供HTTP/HTTPS服务。当我们希望将&lt;strong&gt;nginx&lt;/strong&gt;中的Web服务暴露在云主机上时，我们通过以下命令创建&lt;strong&gt;nginx&lt;/strong&gt;服务。然而我们无法选择将published的&lt;strong&gt;80&lt;/strong&gt;端口绑定在哪个interface上。&lt;a href=&#34;https://docs.docker.com/engine/swarm/&#34;&gt;Docker Swarm&lt;/a&gt;会自动将服务监听到Swarm node的所有80端口上。如果我们只想将这个服务暴露在内网interface暂时无法实现。
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker service create --name vme-nginx --network vme-network --replicas &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;       --publish &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;:80 --publish &lt;span style=&#34;color:#ae81ff&#34;&gt;443&lt;/span&gt;:443 &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;       nginx:1.11&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;无法为&lt;a href=&#34;https://docs.docker.com/engine/swarm/&#34;&gt;Docker Swarm&lt;/a&gt;内运行的服务设置主机名。通过&lt;a href=&#34;https://docs.docker.com/engine/reference/run/&#34;&gt;docker run命令&lt;/a&gt;执行的容器可以设置hostname。比如，
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker run --hostname vme-nginx nginx:1.11&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
但是&lt;a href=&#34;https://docs.docker.com/engine/reference/commandline/service_create/&#34;&gt;docker service create命令&lt;/a&gt;缺少等价的参数为容器指定hostname。一些依赖于&lt;strong&gt;hostname&lt;/strong&gt;的服务将无法部署在&lt;a href=&#34;https://docs.docker.com/engine/swarm/&#34;&gt;Docker Swarm&lt;/a&gt;中，比如clustered rabbitmq。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.docker.com/compose/&#34;&gt;Docker compose&lt;/a&gt;还不能与&lt;a href=&#34;https://docs.docker.com/engine/swarm/&#34;&gt;Docker Swarm&lt;/a&gt;完美集成。目前有一个experimental的&lt;a href=&#34;https://docs.docker.com/compose/bundles/&#34;&gt;Docker Stacks and Distributed Application Bundles&lt;/a&gt;在尝试做更好的整合。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;docker service update&lt;/strong&gt;有时不能更新正在运行中的container。更多讨论见&lt;a href=&#34;https://github.com/docker/swarmkit/issues/1619&#34;&gt;这个issue&lt;/a&gt;。&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>创建于Docker Swarm的服务无法在Ubuntu 14.04 LTS中运行</title>
      <link>https://kane.mx/posts/2016/docker-swarm-mode-in-ubuntu-1404/</link>
      <pubDate>Tue, 13 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/docker-swarm-mode-in-ubuntu-1404/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://vme360.com&#34;&gt;V秘&lt;/a&gt;团队一直致力于用技术改善产品。&lt;a href=&#34;https://vme360.com&#34;&gt;V秘&lt;/a&gt;后台的各种服务一直是通过完善的Devops流程自动部署到&lt;a href=&#34;https://www.docker.com&#34;&gt;Docker&lt;/a&gt;容器集群。随着&lt;a href=&#34;https://docs.docker.com/engine/swarm/&#34;&gt;Swarm mode&lt;/a&gt;在&lt;a href=&#34;https://www.docker.com&#34;&gt;Docker&lt;/a&gt; v1.12中正式发布，&lt;a href=&#34;https://docs.docker.com/engine/swarm/&#34;&gt;Swarm mode&lt;/a&gt;带来了诸如Docker集群，多主机网络等激动人心的特性。我们也在尝试将&lt;a href=&#34;https://vme360.com&#34;&gt;V秘&lt;/a&gt;服务部署到&lt;a href=&#34;https://docs.docker.com/engine/swarm/&#34;&gt;Docker Swarm Cluster&lt;/a&gt;获取更好的弹性计算能力。&lt;/p&gt;

&lt;p&gt;然而我们将&lt;a href=&#34;https://vme360.com&#34;&gt;V秘&lt;/a&gt;的服务部署到&lt;a href=&#34;https://docs.docker.com/engine/swarm/&#34;&gt;Docker Swarm Cluster&lt;/a&gt;时遇到服务容器无法启动的错误。错误信息类似如下，&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;starting container failed: could not add veth pair inside the network sandbox: could not find an appropriate master \&amp;ldquo;ov-000100-1wkbc\&amp;rdquo; for \&amp;ldquo;vethee39f9d\&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!-- more --&gt;

&lt;p&gt;经过与&lt;a href=&#34;https://github.com/docker/docker/issues&#34;&gt;Docker 社区&lt;/a&gt;的回馈讨论，暂时通过升级Docker主机(OS: Ubuntu 14.04 LTS)的内核版本解决了这个错误。&lt;/p&gt;

&lt;p&gt;具体方法如下，&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;root@swarm1:~# uname -r 
&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;.13.0-32-generic

root@swarm1:~# apt-get install linux-generic-lts-vivid
root@swarm1:~# reboot

root@swarm1:~# uname -r
&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;.19.0-69-generic&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;至于这个错误的根本原因是&lt;a href=&#34;https://www.docker.com&#34;&gt;Docker&lt;/a&gt;的bug还是对Linux Kernel有特殊的要求，需要Docker开发进一步确认。如果对此问题有更多兴趣，可以关注&lt;a href=&#34;https://github.com/docker/docker/issues/25039&#34;&gt;docker issue #25039&lt;/a&gt;。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>基于Angularjs单页面应用的SEO优化</title>
      <link>https://kane.mx/posts/2016/seo-optimization-for-angularajs-based-app/</link>
      <pubDate>Thu, 19 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/seo-optimization-for-angularajs-based-app/</guid>
      <description>&lt;p&gt;在之前的&lt;a href=&#34;https://kane.mx/posts/2016/single-page-app-meets-weixin-pay/&#34;&gt;文章&lt;/a&gt;我曾提到基于&lt;a href=&#34;https://angularjs.org/&#34;&gt;Angularjs&lt;/a&gt;的单页面应用在用户体验上的种种好处。然而任何事情都不是完美的，&lt;a href=&#34;https://angularjs.org/&#34;&gt;Angular&lt;/a&gt;和类似的框架通过应用内做页面路由的实现给SEO（也俗称搜索引擎优化）带来了不少麻烦。&lt;/p&gt;

&lt;p&gt;首先，我们来看看页面内路由是如何实现的。默认&lt;a href=&#34;https://angularjs.org/&#34;&gt;Angularjs&lt;/a&gt;生成的页面uri类型如下，&lt;/p&gt;

&lt;p&gt;&lt;code&gt;http://mydomain.com/#/app/page1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;浏览器请求上面这个uri的时候，实际发送给服务器的请求地址是&lt;strong&gt;&lt;a href=&#34;http://mydomain.com/&#34;&gt;http://mydomain.com/&lt;/a&gt;&lt;/strong&gt;, web服务器会将默认的页面响应给浏览器，比如*index.html*或*index.php*等。&lt;/p&gt;

&lt;p&gt;浏览器返回的页面里面引入了&lt;a href=&#34;https://angularjs.org/&#34;&gt;Angularjs&lt;/a&gt;和其他应用需要的JS库。&lt;a href=&#34;https://angularjs.org/&#34;&gt;Angularjs&lt;/a&gt;应用开始执行后，尝试处理路由&lt;strong&gt;/app/page1&lt;/strong&gt;。如果应用定义了该路由，将加载必要的JS库和其他html片段来完成页面的渲染。&lt;/p&gt;

&lt;p&gt;理解了&lt;a href=&#34;https://angularjs.org/&#34;&gt;Angularjs&lt;/a&gt;页面内路由的原理后，我们知道了对浏览器或搜索引擎爬虫而言，单页面应用所有的页面对浏览器和搜索引擎都是一个网址，比如&lt;code&gt;http://mydomain.com/&lt;/code&gt;。这样对爬虫抓取站内链接造成了困难，因为所有应用内的链接都被认做了同一个链接。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;我们理解了uri &lt;code&gt;http://mydomain.com/#/app/page1&lt;/code&gt;给SEO造成的麻烦，接下来就是讨论如何针对SEO来作的优化。&lt;/p&gt;

&lt;p&gt;最理想的情况当然是搜索引擎爬虫变的更加智能，它能理解网站的框架，并且针对此种情况做出优化。但截止到目前，包括Google在内的所有爬虫都无法做到这点。那我们SEO的优化只能在应用这边来做了。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://angularjs.org/&#34;&gt;Angularjs&lt;/a&gt;提供了一种&lt;a href=&#34;https://docs.angularjs.org/guide/$location&#34;&gt;HTML5 mode&lt;/a&gt;模式可以利用HTML5 History API来实现页面内路由。打开的方法如下，&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;$locationProvider&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;html5Mode&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;同时在&lt;code&gt;index.html&lt;/code&gt;页面加上如下标签，&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;base&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;在打开&lt;a href=&#34;https://docs.angularjs.org/guide/$location&#34;&gt;HTML5 mode&lt;/a&gt;后的&lt;a href=&#34;https://angularjs.org/&#34;&gt;Angularjs&lt;/a&gt;应用的链接看起来就是这样了，&lt;/p&gt;

&lt;p&gt;&lt;code&gt;http://mydomain.com/app/page1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;新的链接模式和站内跳转通过访问网站主页请求将没有任何问题。然而直接在浏览器请求如上链接的话，Web服务器将尝试请求&lt;code&gt;/app/page1&lt;/code&gt;，通常会得到&lt;strong&gt;404&lt;/strong&gt;的页面响应。因为服务器上并没有部署页面&lt;code&gt;/app/page1&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;这时就需要在Web应用服务器或应用里面实现&lt;strong&gt;URL Rewrite&lt;/strong&gt;。将&lt;code&gt;/app/page1&lt;/code&gt;的请求转到单页面应用html文件上。&lt;/p&gt;

&lt;p&gt;下面是一些Web服务器或应用的参考配置，&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Apache Rewrites&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-conf&#34; data-lang=&#34;conf&#34;&gt;	&amp;lt;VirtualHost *:80&amp;gt;
	    ServerName my-app
	
	    DocumentRoot /path/to/app
	
	    &amp;lt;Directory /path/to/app&amp;gt;
	        RewriteEngine on
	
	        # Don&amp;#39;t rewrite files or directories
	        RewriteCond %{REQUEST_FILENAME} -f [OR]
	        RewriteCond %{REQUEST_FILENAME} -d
	        RewriteRule ^ - [L]
	
	        # Rewrite everything else to index.html to allow html5 state links
	        RewriteRule ^ index.html [L]
	    &amp;lt;/Directory&amp;gt;
	&amp;lt;/VirtualHost&amp;gt;
	&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Nginx Rewrites&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-nginx&#34; data-lang=&#34;nginx&#34;&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;server&lt;/span&gt; {
	    &lt;span style=&#34;color:#f92672&#34;&gt;server_name&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;my-app&lt;/span&gt;;
	
	    &lt;span style=&#34;color:#f92672&#34;&gt;root&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/path/to/app&lt;/span&gt;;
	
	    &lt;span style=&#34;color:#f92672&#34;&gt;location&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt; {
	        &lt;span style=&#34;color:#f92672&#34;&gt;try_files&lt;/span&gt; $uri $uri/ &lt;span style=&#34;color:#e6db74&#34;&gt;/index.html&lt;/span&gt;;
	    }
	}
	&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Azure IIS Rewrites&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-conf&#34; data-lang=&#34;conf&#34;&gt;	&amp;lt;system.webServer&amp;gt;
	  &amp;lt;rewrite&amp;gt;
	    &amp;lt;rules&amp;gt; 
	      &amp;lt;rule name=&amp;#34;Main Rule&amp;#34; stopProcessing=&amp;#34;true&amp;#34;&amp;gt;
	        &amp;lt;match url=&amp;#34;.*&amp;#34; /&amp;gt;
	        &amp;lt;conditions logicalGrouping=&amp;#34;MatchAll&amp;#34;&amp;gt;
	          &amp;lt;add input=&amp;#34;{REQUEST_FILENAME}&amp;#34; matchType=&amp;#34;IsFile&amp;#34; negate=&amp;#34;true&amp;#34; /&amp;gt;                                 
	          &amp;lt;add input=&amp;#34;{REQUEST_FILENAME}&amp;#34; matchType=&amp;#34;IsDirectory&amp;#34; negate=&amp;#34;true&amp;#34; /&amp;gt;
	        &amp;lt;/conditions&amp;gt;
	        &amp;lt;action type=&amp;#34;Rewrite&amp;#34; url=&amp;#34;/&amp;#34; /&amp;gt;
	      &amp;lt;/rule&amp;gt;
	    &amp;lt;/rules&amp;gt;
	  &amp;lt;/rewrite&amp;gt;
	&amp;lt;/system.webServer&amp;gt;
	&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Express Rewrites&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;express&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;express&amp;#39;&lt;/span&gt;);
	&lt;span style=&#34;color:#66d9ef&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;express&lt;/span&gt;();
	
	&lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;use&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/js&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;express&lt;/span&gt;.&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;__dirname&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/js&amp;#39;&lt;/span&gt;));
	&lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;use&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/dist&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;express&lt;/span&gt;.&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;__dirname&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/../dist&amp;#39;&lt;/span&gt;));
	&lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;use&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/css&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;express&lt;/span&gt;.&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;__dirname&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/css&amp;#39;&lt;/span&gt;));
	&lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;use&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/partials&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;express&lt;/span&gt;.&lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;__dirname&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/partials&amp;#39;&lt;/span&gt;));
	
	&lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;all&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/*&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;req&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;next&lt;/span&gt;) {
	    &lt;span style=&#34;color:#75715e&#34;&gt;// Just send the index.html for other files to support HTML5Mode
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	    &lt;span style=&#34;color:#a6e22e&#34;&gt;res&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;sendFile&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;index.html&amp;#39;&lt;/span&gt;, { &lt;span style=&#34;color:#a6e22e&#34;&gt;root&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;__dirname&lt;/span&gt; });
	});
	
	&lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;listen&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;3006&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;//the port you want to use
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;	
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;ASP.Net C# Rewrites&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;	&lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt; ROOT_DOCUMENT = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/default.aspx&amp;#34;&lt;/span&gt;;
	
	&lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;void&lt;/span&gt; Application_BeginRequest( Object sender, EventArgs e )
	{
	    &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt; url = Request.Url.LocalPath;
	    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ( !System.IO.File.Exists( Context.Server.MapPath( url ) ) )
	        Context.RewritePath( ROOT_DOCUMENT );
	}
	
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Spring框架下的分布式session管理</title>
      <link>https://kane.mx/posts/2016/clustered-session-under-spring-framework/</link>
      <pubDate>Sat, 07 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/clustered-session-under-spring-framework/</guid>
      <description>&lt;p&gt;在微服务和容器等技术的帮助下，Web应用可以较为容易的进行水平扩展，来部署更多的应用实例来提升请求处理数QPS。当Web服务有状态的时候，如何在集群下管理用户session成为新的待解决问题。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;&lt;a href=&#34;https://spring.io&#34;&gt;Spring Framework&lt;/a&gt;针对此问题衍生出了一个子项目&lt;a href=&#34;http://projects.spring.io/spring-session/&#34;&gt;Spring Session&lt;/a&gt;来实现集群下的session管理。该项目提供了以下功能：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;提供API和实现管理用户session&lt;/li&gt;
&lt;li&gt;HttpSession - 替换实现应用容器(tomcat)中的HttpSession

&lt;ul&gt;
&lt;li&gt;Clustered Sessions - 实现集群的session而不依赖任何应用容器特定的解决方案&lt;/li&gt;
&lt;li&gt;Multiple Browser Sessions - 支持多个用户session保存在同一个浏览器实例中 (例如，类似Google的多用户认证).&lt;/li&gt;
&lt;li&gt;RESTful APIs - 通过支持session ids在Http请求头来支持Restful API的认证&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;WebSocket - 能够保证HttpSession的存活当在接受WebSocket消息时&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;从上面的功能列表中，我们可以看到&lt;a href=&#34;http://projects.spring.io/spring-session/&#34;&gt;Spring Session&lt;/a&gt;能够满足集群下各种session的使用场景和需求。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://projects.spring.io/spring-session/&#34;&gt;Spring Session&lt;/a&gt;在1.0.0 GA可以使用&lt;a href=&#34;http://redis.io/&#34;&gt;Redis&lt;/a&gt;做为session储存的backend。&lt;/p&gt;

&lt;p&gt;通过changelog，在最新的1.1.0 GA中支持&lt;a href=&#34;http://docs.spring.io/spring-session/docs/1.1.1.RELEASE/reference/html5/#what-s-new-in-1-1&#34;&gt;自定义Cookie的创建&lt;/a&gt;，允许自定义Cookie的过期时间，作用域等。在即将发布的&lt;a href=&#34;http://docs.spring.io/spring-session/docs/1.2.0.RC2/reference/html5/#what-s-new-in-1-2&#34;&gt;1.2.0 GA&lt;/a&gt;版本中，将添加支持JDBC的关系数据库和&lt;a href=&#34;https://www.mongodb.org/&#34;&gt;MongoDB&lt;/a&gt;作为session保存的backend。&lt;/p&gt;

&lt;p&gt;此外，&lt;a href=&#34;http://projects.spring.io/spring-session/&#34;&gt;Spring Session&lt;/a&gt;同&lt;a href=&#34;http://projects.spring.io/spring-boot/&#34;&gt;Spring-boot&lt;/a&gt;的应用有很好的&lt;a href=&#34;http://docs.spring.io/spring-session/docs/current/reference/html5/guides/boot.html&#34;&gt;集成&lt;/a&gt;，只需要十多行代码及配置即可集成！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>V秘是如何构建的</title>
      <link>https://kane.mx/posts/2016/how-we-build-videome/</link>
      <pubDate>Thu, 07 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/how-we-build-videome/</guid>
      <description>&lt;p&gt;春天来了，&lt;a href=&#34;https://vme360.com&#34;&gt;V秘&lt;/a&gt;大家庭也新增了两位10后的传人。新爸爸经过一番忙乱后，希望在这里与大家分享&lt;a href=&#34;https://vme360.com&#34;&gt;V秘&lt;/a&gt;的架构，共同探讨如何快速的构建高可用，高性能的Web服务。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://vme360.com&#34;&gt;V秘&lt;/a&gt;致力于提供最好的在线视频制作云平台。让用户随时随地零门槛的快速制作出高质量高清晰度的视频，来纪念记录生活中有意义的时刻，同时将这份快乐传递给更多的家人朋友一起分享。&lt;/p&gt;

&lt;p&gt;然而要可靠的可扩展的实现这样看似简单的需求，其背后确由众多知名开源技术，可靠的云服务，不间歇的监控运维来实现和保证的。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;&lt;a href=&#34;https://vme360.com&#34;&gt;V秘&lt;/a&gt;架构的基本目标就是要实现，&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;服务的高扩展性。有有效可靠的方法支撑数万并发到数十万，百万及更多的并发请求。&lt;/li&gt;
&lt;li&gt;服务的高可用性。各种服务都是多实例的集群，某些服务故障后，集群中的其他实例仍然能够提供服务。&lt;/li&gt;
&lt;li&gt;服务的自动化构建。从代码到服务部署上线是一套自动化的流程，越少的人工介入保证了服务的可用性。&lt;/li&gt;
&lt;li&gt;系统的实时监控。7x24小时的监控保证服务的可用性，当监控到数据异常或服务停止运行能及时告警引入人工运维团队。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;更多细节请参阅下面的&lt;a href=&#34;http://www.slideshare.net/zxkane/how-we-build-vme&#34;&gt;slides&lt;/a&gt;,&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/key/EaBKeYtNuNyFPL&#34; width=&#34;595&#34; height=&#34;485&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt; &lt;a href=&#34;//www.slideshare.net/zxkane/how-we-build-vme&#34; title=&#34;How we build Videome&#34; target=&#34;_blank&#34;&gt;How we build Videome&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&#34;//www.slideshare.net/zxkane&#34; target=&#34;_blank&#34;&gt;Meng Xin Zhu&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/p&gt;

&lt;p&gt;欢迎留言与我们探讨你的心得和建议。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>说一说阿里云ossfs</title>
      <link>https://kane.mx/posts/2016/aliyun-ossfs-sucks/</link>
      <pubDate>Fri, 26 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/aliyun-ossfs-sucks/</guid>
      <description>

&lt;p&gt;阿里云提供的对象或者文件存储叫&lt;a href=&#34;https://www.aliyun.com/product/oss&#34;&gt;OSS&lt;/a&gt;，为应用程序提供了海量存储，按需付费等服务。应用程序则需要通过&lt;a href=&#34;https://www.aliyun.com/product/oss&#34;&gt;Aliyun OSS&lt;/a&gt;的各语言SDK才能操作（读，写，遍历等）OSS中的文件。&lt;/p&gt;

&lt;p&gt;对运维人员来说，做一些数据维护工作的时候，通过SDK操作&lt;a href=&#34;https://www.aliyun.com/product/oss&#34;&gt;OSS&lt;/a&gt;中的文件就会比较麻烦。在linux/unix环境下，通常有一些工具把远程文件系统或云盘挂载为本地文件。在网络状况比较好的情况下，操作远程文件就像操作本地文件一样。例如，把&lt;a href=&#34;https://github.com/s3fs-fuse/s3fs-fuse&#34;&gt;Amazon S3&lt;/a&gt;，&lt;a href=&#34;https://github.com/joe42/CloudFusion&#34;&gt;Dropbox云盘&lt;/a&gt;，&lt;a href=&#34;https://github.com/libfuse/sshfs&#34;&gt;可通过ssh登录的远程服务器上的磁盘&lt;/a&gt;挂载为本地文件系统。&lt;/p&gt;

&lt;p&gt;之前也有第三方公司开发的工具把&lt;a href=&#34;https://www.aliyun.com/product/oss&#34;&gt;OSS bucket&lt;/a&gt;挂载为本地磁盘。出于安全考虑一直为敢使用。&lt;/p&gt;

&lt;p&gt;终于，阿里云推出了官方开源版本的&lt;a href=&#34;https://github.com/aliyun/ossfs&#34;&gt;ossfs&lt;/a&gt;，并且提供技术支持（通过工单）。&lt;/p&gt;

&lt;p&gt;接下来，聊聊我的使用体会。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;ul&gt;
&lt;li&gt;安装，配置都还简单。&lt;/li&gt;
&lt;li&gt;文档看起来比较详细，但实际操作起来有些就不对。感觉写文档的人，并没有在相应环境上测试过。&lt;/li&gt;
&lt;li&gt;权限设计的一塌糊涂。&lt;a href=&#34;https://github.com/aliyun/ossfs&#34;&gt;ossfs&lt;/a&gt;基于&lt;a href=&#34;https://en.wikipedia.org/wiki/Filesystem_in_Userspace&#34;&gt;FUSE&lt;/a&gt;，理当允许非root挂载或卸载OSS bucket。非root用户使用&lt;a href=&#34;https://github.com/aliyun/ossfs&#34;&gt;ossfs&lt;/a&gt;挂载的文件默认的owner都是&lt;strong&gt;root&lt;/strong&gt;! 还好目前有workaround，挂载的时候指定参数，&lt;code&gt;-ouid=your_uid -ogid=your_gid&lt;/code&gt;来指定文件的owner。&lt;/li&gt;
&lt;li&gt;性能极其低下！！！一台ECS主机挂载了一个使用内网地址的oss bucket，bucket根下面有2k+子目录（对文件系统而言）,bucket内文件总计有28G。然而执行&lt;code&gt;ls /tmp/&amp;lt;bucket mount point&amp;gt;&lt;/code&gt;超过10分钟都无法完成。而我们&lt;a href=&#34;https://vme360.com&#34;&gt;V秘&lt;/a&gt;之前用Java实现的&lt;a href=&#34;https://github.com/videome/AliyunOSSFS&#34;&gt;AliyunOSSFS&lt;/a&gt;执行同样的操作只需要数秒。&lt;/li&gt;
&lt;li&gt;阿里云相关的技术支持人员及其不专业。很多文件系统，&lt;a href=&#34;https://en.wikipedia.org/wiki/Filesystem_in_Userspace&#34;&gt;FUSE&lt;/a&gt;等概念都不甚了解。跟他们沟通这些技术问题，首先要花时间进行教育。花费大量时间来沟通，进展确缓慢。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;总之-阿里云ossfs-https-github-com-aliyun-ossfs-这个工具远远没有达到-production-ready-的质量-无法使用到生产环境中&#34;&gt;总之，&lt;a href=&#34;https://github.com/aliyun/ossfs&#34;&gt;阿里云ossfs&lt;/a&gt;这个工具远远没有达到&lt;strong&gt;production ready&lt;/strong&gt;的质量。无法使用到生产环境中。&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>如何使用微信公众平台的临时素材</title>
      <link>https://kane.mx/posts/2016/weixin-temporary-materials/</link>
      <pubDate>Wed, 27 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/weixin-temporary-materials/</guid>
      <description>&lt;p&gt;微信给公众平台提供了&lt;a href=&#34;http://mp.weixin.qq.com/wiki/15/2d353966323806a202cd2deaafe8e557.html&#34;&gt;素材管理&lt;/a&gt;的接口，通过这一系列接口可以上传，接收以及管理图片，视频等多媒体文件。其中又分为&lt;strong&gt;临时&lt;/strong&gt;和&lt;strong&gt;永久&lt;/strong&gt;两种类型。永久素材有总量的限制，临时素材微信服务器只给保存3天。&lt;/p&gt;

&lt;p&gt;最近&lt;a href=&#34;https://vme360.com&#34;&gt;V秘&lt;/a&gt;刚好有个同微信用户互动的场景，为用户美化微信拍摄的小视频。&lt;a href=&#34;https://vme360.com&#34;&gt;V秘&lt;/a&gt;后台服务器收到用户发送过来小视频（微信将其认做临时素材），将其美化处理后，再将美化的视频上传为临时素材，最终美化后的视频作为视频类型的客服消息被推送给用户。整个流程很简洁，用户发送小视频后，就坐等观看美化后的小视频了。&lt;/p&gt;

&lt;p&gt;然而最终经过V秘开发团队的实践及测试，得出的结论是，&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;##&lt;strong&gt;微信公众平台的临时素材不能用！绝对的鸡肋！&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;公众平台上传素材的API以及使用已有素材发送视频消息API都很健壮。但问题出在了微信后台资源的服务上面。&lt;/p&gt;

&lt;p&gt;开发者把图片视频成功上传为临时素材后，会从微信的接口得到这个素材的ID。这个ID随后作为给用户发送图文消息或视频消息的资源。微信后台会把这个ID对应到素材的真实URL路径上。这个过程是没有问题的。同时微信作为一个拥有海量用户的软件，它会将这些将要推送给用户的素材都发布到它的CDN。用户收到的最终图片视频的地址就是素材文件在微信/腾讯CDN上的地址。对CDN有了解的朋友都知道，CDN服务器分散在全国或全世界各地，当用户请求这个资源的时候，请求会被路由到离用户最近的CDN服务器上。当CDN服务器上还没有缓存请求的资源时，这时候有个溯源的过程。就是原始文件从文件服务器传送到该CDN服务器的一个过程。这时，用户有一个额外的等待，等待时间取决于文件大小和CDN服务器和文件服务器间的带宽。&lt;/p&gt;

&lt;p&gt;微信用来给公众号放置临时素材的CDN在这一块出了问题。在我们的测试中，微信CDN可能一直无法提供这些临时素材（某些文件超过1天后仍然无法访问）。而且出现错误的几率相当高，至少20%以上。由于CDN无法为临时素材提供可靠的访问保障，所以我们得出微信给公众号临时素材这个功能基本就是不能用。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>单页面应用(single page application)中使用微信支付</title>
      <link>https://kane.mx/posts/2016/single-page-app-meets-weixin-pay/</link>
      <pubDate>Sun, 24 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/single-page-app-meets-weixin-pay/</guid>
      <description>&lt;p&gt;随着&lt;strong&gt;AngularJS&lt;/strong&gt;等前端MVC框架的流行，AJAX的异步请求数据结合H5的push state等特性，极大的改善了网站的用户体验和页面加载性能。这类网站应用通常只有一个入口页面，通过应用内路由到不同的页面，所以俗称单页面(signle page application)应用。页面&lt;strong&gt;URL&lt;/strong&gt;看起来如下，&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;网站首页
&lt;a href=&#34;http://mysite.com/#/index&#34;&gt;http://mysite.com/#/index&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;商品列表页
&lt;a href=&#34;http://mysite.com/#/goods/list&#34;&gt;http://mysite.com/#/goods/list&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;商品详情页
&lt;a href=&#34;http://mysite.com/#/goods/skuid&#34;&gt;http://mysite.com/#/goods/skuid&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;网站关于页
&lt;a href=&#34;http://mysite.com/#/about&#34;&gt;http://mysite.com/#/about&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;对浏览器而言，上面几个地址都是访问的网站&lt;strong&gt;&lt;code&gt;/&lt;/code&gt;&lt;/strong&gt;目录，每个url不同的是&lt;code&gt;hash&lt;/code&gt;部分。而&lt;strong&gt;AngularJS&lt;/strong&gt;正是依赖页面的&lt;code&gt;hash&lt;/code&gt;来做的应用内路由，根据不同的路由来加载不同的&lt;code&gt;js&lt;/code&gt;和&lt;code&gt;html&lt;/code&gt;片段，实现动态内容的加载。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;世上并没有绝对完美的事情，单页面应用在用户体验和性能上获得了好处。然而，在别的地方必然付出代价。这里就分享一下单页面应用和微信支付集成的一些经验。&lt;/p&gt;

&lt;p&gt;这里的微信支付指的是，在微信浏览器中通过JS接口调起微信支付来完成网页应用中商品的购买。微信支付本身的开发集成并不复杂，这里就不赘述了。微信支付出于安全考虑，要求公众号必须注册支付发起页面的地址（到支付页面的上级目录为止），并且能够添加到白名单的地址不超过3个。也就是如果应用在*商品详情页*发起支付请求，那么地址&lt;strong&gt;&lt;code&gt;http://mysite.com/#/goods/&lt;/code&gt;&lt;/strong&gt;必须在白名单列表。&lt;/p&gt;

&lt;p&gt;目前为止，一切都很好理解，把支付页面加到微信支付白名单不就万事大吉了。可经过实测，事实确不是这么简单！&lt;/p&gt;

&lt;p&gt;在微信&lt;strong&gt;iOS&lt;/strong&gt;版本中，微信支付JS会错误的使用landing网站页面的URL，而不是发起支付的页面URL！比如用户通过网站首页&lt;strong&gt;&lt;code&gt;http://mysite.com/#/index&lt;/code&gt;&lt;/strong&gt;进入应用，通过站内链接浏览到了某商品详情页&lt;strong&gt;&lt;code&gt;http://mysite.com/#/goods/skuid&lt;/code&gt;&lt;/strong&gt;并发起了支付。但微信JS会把landing页面URL&lt;strong&gt;&lt;code&gt;http://mysite.com/#/index&lt;/code&gt;&lt;/strong&gt;判定为支付的发起页面，从而导致支付JS调用失败！&lt;/p&gt;

&lt;p&gt;因为应用存在多个页面，不可能把所有的页面都加到支付白名单中(有3个数目限制，并且工作量也大到不现实)。要解决这个问题，只好另辟蹊径。我目前找到的方法是，强制刷新页面当打开商品详情页的时候。等同于直接在微信浏览器中打开了商品详情页。虽然对用户体验有些影响，但支付功能正常工作了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>文件系统的Inode耗尽，会导致Docker编译镜像出现&#39;No space left on device&#39;错误</title>
      <link>https://kane.mx/posts/2016/docker-build-no-space-left-caused-by-inode-exhausted/</link>
      <pubDate>Thu, 21 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/docker-build-no-space-left-caused-by-inode-exhausted/</guid>
      <description>&lt;p&gt;最近在提交前端代码后，前端代码的自动发布老是失败。失败的原因多是编译Docker镜像时在执行&lt;code&gt;COPY&lt;/code&gt;语句拷贝文件到镜像文件系统时，扔出了&amp;rsquo;No space left on device&amp;rsquo;这个错误。这个错误根据描述非常好理解，就是docker文件系统所在磁盘没有了空间。&lt;/p&gt;

&lt;p&gt;但是通过&lt;code&gt;df -h&lt;/code&gt;命令，该磁盘至少还有3，4个G的剩余空间。而前端镜像的文件大小最多也不超过300M。在该磁盘通过&lt;code&gt;touch&lt;/code&gt;,&lt;code&gt;cp&lt;/code&gt;仍然可以创建文件。&lt;/p&gt;

&lt;p&gt;所以这个问题非常奇怪，为什么&lt;code&gt;docker&lt;/code&gt;或者&lt;code&gt;操作系统&lt;/code&gt;抱怨磁盘没有了空间？在磁盘仍然剩余数个G的情况下？&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;再通过相关的查找后，docker的这个&lt;a href=&#34;https://github.com/docker/docker/issues/18144&#34;&gt;issue&lt;/a&gt;给了我启发。Linux文件系统的&lt;code&gt;inode&lt;/code&gt;在耗尽后，该文件系统将不能再创建新文件。因为前端页面是基于&lt;code&gt;nodejs&lt;/code&gt;的程序，它依赖的packages产生了大量文件，在反复制作不同的docker images时，这些依赖文件又被反复复制，导致文件数量远远超过了默认inode和磁盘大小的比例，最终&lt;code&gt;inode&lt;/code&gt;先于磁盘空间被全部使用。&lt;/p&gt;

&lt;p&gt;遇到类似问题的同学，可以通过&lt;code&gt;df -i&lt;/code&gt;查看&lt;code&gt;inode&lt;/code&gt;的使用情况来排查问题是否由于&lt;code&gt;inode&lt;/code&gt;耗尽导致这个错误。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Daemon hell in Jenkins</title>
      <link>https://kane.mx/posts/archive/blogspot/daemon-hell-in-jenkins/</link>
      <pubDate>Tue, 21 Jul 2015 09:32:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/daemon-hell-in-jenkins/</guid>
      <description>&lt;p&gt;Recently I wrote a Linux like &lt;a href=&#34;https://gist.github.com/zxkane/b55033bd519334d57c13&#34;&gt;initd script&lt;/a&gt; to start/stop my web application.&lt;/p&gt;

&lt;p&gt;The script works well when running it in shell of linux. The web application will run in background by daemon.&lt;/p&gt;

&lt;p&gt;However I found both daemon and web application(java) exited immediately if I started the script in Jenkins as a shell step of build process.&lt;/p&gt;

&lt;p&gt;I put below simple script in &amp;lsquo;Execute shell&amp;rsquo; block,&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt; 
daemon --name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;test-daemon -- sleep 200sleep &lt;span style=&#34;color:#ae81ff&#34;&gt;60&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The process &amp;lsquo;daemon&amp;rsquo; and &amp;lsquo;sleep 200&amp;rsquo; should exit after 200 seconds the &amp;lsquo;sleep&amp;rsquo; exits. The jenkins job will be finished in 60 secs.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jenkins   9954  9950  0 21:48 ?        00:00:00 sleep 60 
jenkins   9955     1  0 21:48 ?        00:00:00 daemon —name=test-daemon — sleep 200
jenkins   9956  9955  0 21:48 ?        00:00:00 sleep 200
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Above is the process info queried via &lt;code&gt;ps&lt;/code&gt; command. The father pid of daemon is 1, not the script generated by Jenkins.&lt;br /&gt;
But both the process &amp;lsquo;daemon&amp;rsquo; and &amp;lsquo;sleep 200&amp;rsquo; immediately exited when the script finished. Should be something wrong in Jenkins to cause daemon exited unexpected.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s something really frustrating to use daemon to stop/start the web application in Jenkins.&lt;/p&gt;

&lt;p&gt;Finally I used &lt;strong&gt;docker&lt;/strong&gt; container to run my web application, which easily can be stopped/started via script in Jenkins.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The symptoms of Java broken in Mac OSX 10.10 and fix solution</title>
      <link>https://kane.mx/posts/archive/blogspot/the-symptoms-of-java-broken-in-mac-osx/</link>
      <pubDate>Mon, 13 Jul 2015 19:11:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/the-symptoms-of-java-broken-in-mac-osx/</guid>
      <description>&lt;p&gt;After uninstalling some applications from my Mac OSX, I found the applications that depends on JRE totally does not work. I noticed below symptoms,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Eclipse Mars can not be launched, even though I specified the launching vm to another one(`java -version` still work). The SWT native library failed to resolve the dependencies to &amp;lsquo;/System/Library/Frameworks/JavaVM.framework/Versions/A/JavaVM&amp;rsquo; which does not exists.&lt;/li&gt;
&lt;li&gt;I tried to reinstall Oracle 1.8.0_u45 via both brew and dmg image downloaded from Oracle website, both ways were failed as well.&lt;/li&gt;
&lt;li&gt;The Mac pkg Installer can not be started due to dylib broken. It means I can&amp;rsquo;t install any pkg via GUI. The command line(such as &lt;code&gt;sudo installer -verboseR -target / -pkg /Volumes/OS\ X\ 10.10.4\ Update\ Combo/OSXUpdCombo10.10.4.pkg&lt;/code&gt;) still works.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Finally I realized the problem was caused by I uninstalled the out of date Apple Java 6. Looks like all of above failures are required the system built-in Java. It really does not make sense the Oracle 1.8 installer script to depend on the out of date Java.&lt;/p&gt;

&lt;p&gt;Finally I reinstalled &lt;a href=&#34;https://support.apple.com/kb/DL1572?locale=en_US&#34;&gt;Java for OS X 2014-001&lt;/a&gt; to make everything working again. The GUI installer for pkg still does not work, you need use below command to use the pkg.&lt;/p&gt;

&lt;p&gt;sudo installer -verboseR -target / -pkg /Volumes/Java\ for\ OS\ X\ 2014-001/JavaForOSX.pkg&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Run groovy script via Jenkins CLI</title>
      <link>https://kane.mx/posts/archive/blogspot/run-groovy-script-via-jenkins-cli/</link>
      <pubDate>Mon, 13 May 2013 13:44:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/run-groovy-script-via-jenkins-cli/</guid>
      <description>&lt;p&gt;Jenkins supports &lt;a href=&#34;https://wiki.jenkins-ci.org/display/JENKINS/Jenkins+SSH&#34;&gt;ssh authentication&lt;/a&gt; in CLI.&lt;/p&gt;

&lt;p&gt;Below is a command to verify that I am authenticated:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt; 
java -jar jenkins-cli.jar -s http://myserver/jenkins who-am-i

    Authenticated as: myuser
    Authorities:
        authenticated&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However you still would meet permission error when running groovy script in CLI.&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;   
java -jar jenkins-cli.jar -s http://myserver/jenkins groovysh &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;jenkins.model.Jenkins.instance.pluginManager.plugins.each { println(&amp;#34;${it.longName} - ${it.version}&amp;#34;) };&amp;#39;&lt;/span&gt;

Exception in thread &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;main&amp;#34;&lt;/span&gt; java.lang.reflect.UndeclaredThrowableException
at $Proxy2.main&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Unknown Source&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
at hudson.cli.CLI.execute&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;CLI.java:271&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
at hudson.cli.CLI._main&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;CLI.java:417&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
at hudson.cli.CLI.main&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;CLI.java:322&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It&amp;rsquo;s a bug of Jenkins. &lt;strong&gt;The workaround is create a groovy script, then run that script via Jenkins CLI&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt; 
java -jar jenkins-cli.jar -s http://myserver/jenkins/ groovy test_script.gsh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Solr boost examples</title>
      <link>https://kane.mx/posts/archive/blogspot/solr-boost-examples/</link>
      <pubDate>Sat, 11 May 2013 13:16:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/solr-boost-examples/</guid>
      <description>&lt;p&gt;The index has a field named &amp;lsquo;create_time&amp;rsquo; that is the timestamp of document created time. The query string can boost the latest created document like below,&lt;/p&gt;

&lt;p&gt;{!boost b=recip(ms(NOW,create_time),3.16e-11,0.08,0.05)}name:keyword&lt;/p&gt;

&lt;p&gt;There is another field named &amp;lsquo;important&amp;rsquo; that indicates whether the document is important or not. The query string can boost the document is important like below,&lt;/p&gt;

&lt;p&gt;q={!boost b=$importfunc}name:keyword&amp;amp;importfunc=query({!v=&amp;lsquo;important:true&amp;rsquo;})&lt;/p&gt;

&lt;p&gt;Above query string uses a sub query in boost function.&lt;/p&gt;

&lt;p&gt;Finally I want to boost both above two fields, and &amp;lsquo;important&amp;rsquo; field has higher priority. The query string looks like below,&lt;/p&gt;

&lt;p&gt;defType=edismax&amp;amp;q=name:keyword&amp;amp;bf=query({!v=&amp;lsquo;import:true&amp;rsquo;})^20.0 recip(ms(NOW,create_time),3.16e-11,0.08,0.05)^10.0&amp;rdquo;)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Django&#39;s unicdoe encode error</title>
      <link>https://kane.mx/posts/archive/blogspot/djangos-unicdoe-encode-error/</link>
      <pubDate>Thu, 16 Aug 2012 09:11:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/djangos-unicdoe-encode-error/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s a common and ugly problem when using non-ascii characters in Django.&lt;/p&gt;

&lt;p&gt;The general solution is below,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;put &lt;strong&gt;# -&lt;em&gt;- coding: utf-8 -&lt;/em&gt;-&lt;/strong&gt; at beginning of every python source files that are using utf-8 characters&lt;/li&gt;
&lt;li&gt;declare every string variable as unicode, such as &lt;strong&gt;str_var = u&amp;rsquo;中文字符&amp;rsquo;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;add &lt;a href=&#34;https://docs.djangoproject.com/en/1.4/ref/models/instances/#django.db.models.Model.__unicode__&#34;&gt;a __unicode__&lt;/a&gt; method in your model classes&lt;/li&gt;
&lt;li&gt;if you are running server on apache/mod_wsgi or ngnix, you need &lt;a href=&#34;https://docs.djangoproject.com/en/1.4/howto/deployment/modpython/#if-you-get-a-unicodeencodeerror&#34;&gt;configure web server to use utf-8 encoding&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>The workaround of making Zend CE/Zend debugger work on mountain lion</title>
      <link>https://kane.mx/posts/archive/blogspot/workaround-of-making-zend-ce-mountain-lion/</link>
      <pubDate>Sat, 28 Jul 2012 20:49:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/workaround-of-making-zend-ce-mountain-lion/</guid>
      <description>&lt;p&gt;I installed both Zend CE and zend debugger of Eclipse on my Mac. Both of them work well in Mac lion.  However they don&amp;rsquo;t work any more after I upgraded my Mac to mountain lion. &lt;/p&gt;

&lt;p&gt;After some investigation I found some extensions of Zend PHP can&amp;rsquo;t be loaded due to shared library dependency can&amp;rsquo;t be found in mountain lion. The &lt;strong&gt;xslt&lt;/strong&gt; module of PHP depends on some system libraries(suc as /usr/local/libxslt-1.1.23/lib/libxslt.1.dylib) that have been removed by mountain lion.&lt;/p&gt;

&lt;p&gt;The temporary solution is disabling &lt;strong&gt;xlst module&lt;/strong&gt; of zend PHP if your application doesn&amp;rsquo;t need them. &lt;/p&gt;

&lt;p&gt;The workaround fix of Zend CE on Mac, &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;rename _&lt;strong&gt;/usr/local/zend/lib/php_extensions/xsl.so&lt;/strong&gt;_ to any other name&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The workaround fix of zend debugger for Eclipse, &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Delete the line &lt;em&gt;extension=xsl.so&lt;/em&gt; from file &lt;strong&gt;&lt;your eclipse&gt;/plugins/org.zend.php.debug.debugger.macosx_5.3.18.v20110322/resources/php53/php.ini&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Dual monitors on Ubuntu</title>
      <link>https://kane.mx/posts/archive/blogspot/dual-monitors-on-ubuntu/</link>
      <pubDate>Mon, 19 Mar 2012 20:04:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/dual-monitors-on-ubuntu/</guid>
      <description>&lt;p&gt;I had two monitors for my workstation. One is 22&amp;rsquo; and the another is 17&amp;rsquo;. I used the small one as a extend desktop.&lt;/p&gt;

&lt;p&gt;Today I get a another 23&amp;rsquo; monitor to replace the small one. However the resolution of the 23&amp;rsquo; monitor can&amp;rsquo;t be changed after pluging it in. It always used the resolution matching the 17&amp;rsquo; one.&lt;/p&gt;

&lt;p&gt;Both &amp;lsquo;Setting - Display&amp;rsquo; and &amp;lsquo;AMD Catalyst control&amp;rsquo; can&amp;rsquo;t adjust it as higher resolution.&lt;/p&gt;

&lt;p&gt;After some tuning, I found a workaround.&lt;/p&gt;

&lt;p&gt;I totally remove all config of small one from &lt;strong&gt;/etc/X11/xorg.conf&lt;/strong&gt;. Then change its resolution in &amp;lsquo;AMD Catalyst control&amp;rsquo;, it works!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Embedding an HTTP server in Equinox</title>
      <link>https://kane.mx/posts/archive/blogspot/embedding-http-server-in-equinox/</link>
      <pubDate>Mon, 05 Mar 2012 19:25:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/embedding-http-server-in-equinox/</guid>
      <description>&lt;p&gt;I want to create a test server for my application. Using embedding Http server in equinox is my first option.&lt;/p&gt;

&lt;p&gt;I had experience using simple http service implementation of equinox, however I want to play with Jetty this time.&lt;/p&gt;

&lt;p&gt;Following &lt;a href=&#34;http://www.eclipse.org/equinox/server/http_in_equinox.php&#34;&gt;the guide&lt;/a&gt; of Equinox server, I can&amp;rsquo;t running a Jetty server with my servlet in Eclipse Indigo. Obviously &lt;a href=&#34;http://www.eclipse.org/equinox/server/http_in_equinox.php&#34;&gt;the guide&lt;/a&gt; is out of date.&lt;/p&gt;

&lt;p&gt;After tuning it, I found below bundles are minimum collection to run Jetty inside OSGi runtime.&lt;br /&gt;
 &lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/zxkane/1977922.js?file=embedded-jetty-osgi&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;You only need create a run configuration of OSGi framework, add your bundles with servlets and above bundles.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Acess Intranet without VPN</title>
      <link>https://kane.mx/posts/archive/blogspot/acess-intranet-without-vpn/</link>
      <pubDate>Fri, 17 Feb 2012 17:47:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/acess-intranet-without-vpn/</guid>
      <description>&lt;p&gt;Sometimes I need access the Intranet of company, however I don&amp;rsquo;t like to create VPN connection. The connection is slow, waste time to create the connection and have to change password due to security policy.&lt;/p&gt;

&lt;p&gt;My workstation is Linux, which has a lot of utility tools to help me access Intranet at home without VPN.&lt;/p&gt;

&lt;p&gt;Firstly I set up a ssh server on my personal computer. It&amp;rsquo;s quite easy if you are using Linux, for Windows I installed &lt;a href=&#34;https://www.itefix.no/i2/copssh&#34;&gt;Copssh&lt;/a&gt;.&lt;br /&gt;
Then register a free domain name and configure it in my router. And let router forward port &lt;code&gt;22&lt;/code&gt;(or any port you wan to use) to my personal computer.&lt;br /&gt;
In my working Linux machine, create a ssh tunnel to my personal computer. Must use the &lt;a href=&#34;https://kane.mx/posts/archive/blogspot/ssh-key/&#34;&gt;public/private key for authenticating&lt;/a&gt;. For example,&lt;/p&gt;

&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/zxkane/1876750.js?file=ssh-tunnel0.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;It means remote server can access my workstation&amp;rsquo;s port &lt;code&gt;22&lt;/code&gt; via accessing its port &lt;code&gt;1002&lt;/code&gt; after the ssh tunnel is created successfully. Above command line also forwards the ports &lt;code&gt;5900&lt;/code&gt; and &lt;code&gt;6500&lt;/code&gt;. The default VNC session will listen the port &lt;code&gt;5900&lt;/code&gt;.&lt;br /&gt;
But it only works when my personal computer is running. And the connection can&amp;rsquo;t be reconnected after it fails once.&lt;br /&gt;
The graceful solution is installing &amp;lsquo;autossh&amp;rsquo; in my Linux, which is an utility to retry the ssh connection with an interval if it&amp;rsquo;s disconnected or failed.&lt;/p&gt;

&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/zxkane/1876750.js?file=ssh-tunnel1.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;Then create a script and running it when OS is booted. The script will be executed by root user, so we need configure it ran by the normal user.&lt;/p&gt;

&lt;script type=&#34;application/javascript&#34; src=&#34;//gist.github.com/zxkane/1876750.js?file=ssh-tunnel2.sh&#34;&gt;&lt;/script&gt;

&lt;p&gt;After my personal computer is booted a while(&lt;strong&gt;the default interval of autossh is 300 seconds&lt;/strong&gt;), I can use &lt;code&gt;localhost:10002&lt;/code&gt; to login my workstation, &lt;code&gt;localhost:5900&lt;/code&gt; to access my VNC session. Of course you can use &amp;lsquo;froxyproxy&amp;rsquo; of Firefox via a localport to access web page of Intranet.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to reuse the existing OpenID accounts after the host name of Gerrit server is changed</title>
      <link>https://kane.mx/posts/archive/blogspot/how-to-reuse-existing-openid-accounts/</link>
      <pubDate>Wed, 15 Feb 2012 11:36:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/how-to-reuse-existing-openid-accounts/</guid>
      <description>&lt;p&gt;An internal Gerrit server was moved, so the hostname of server is changed. However we are using OpenID for user control, the OpenID provider(such as Google account) will generate a new token for the new server(hostname changing will impact the identity token of Google account) when we login Gerrit with same OpenID account. Gerrit will create a new internal account by default even though my OpenID account has existed in the system and has a lot of activities.&lt;/p&gt;

&lt;p&gt;The solution is updating the &amp;lsquo;ACCOUNT_EXTERNAL_IDS&amp;rsquo; table of Gerrit via gsql. Setting the &amp;lsquo;ACCOUNT_ID&amp;rsquo; to your existing account_id for the new record whose &amp;lsquo;EXTERNAL_ID&amp;rsquo; is the new token gotten from Google.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;update ACCOUNT_EXTERNAL_IDS set ACCOUNT_ID=&amp;lsquo;1000001&amp;rsquo; where EXTERNAL_ID=&amp;lsquo;&lt;a href=&#34;https://www.google.com/accounts/o8/id?id=xxxxxxxxxx&#39;&#34;&gt;https://www.google.com/accounts/o8/id?id=xxxxxxxxxx&#39;&lt;/a&gt;;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Then search the documentation of Gerrit, I find a configuration property looks like supporting such a migration for OpenID authentication.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;auth.allowGoogleAccountUpgrade&lt;/p&gt;

&lt;p&gt;Allows Google Account users to automatically update their Gerrit account when/if their Google Account OpenID identity token changes. Identity tokens can change if the server changes hostnames, or for other reasons known only to Google. The upgrade path works by matching users by email address if the identity is not present, and then changing the identity.&lt;/p&gt;

&lt;p&gt;This setting also permits old Gerrit 1.x users to seamlessly upgrade from Google Accounts on Google App Engine to OpenID authentication.&lt;/p&gt;

&lt;p&gt;Having this enabled incurs an extra database query when Google Account users register with the Gerrit server.&lt;/p&gt;

&lt;p&gt;By default, unset/false.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>JRE/JDK&#39;s certificate issue and solution</title>
      <link>https://kane.mx/posts/archive/blogspot/jrejdks-certificate-issue-and-solution/</link>
      <pubDate>Thu, 24 Nov 2011 15:58:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/jrejdks-certificate-issue-and-solution/</guid>
      <description>&lt;p&gt;The problem came from I tried to set up send mail server(SMTP) for my Gerrit server. My Gerrit server is using OpenID for user authorization, so I registered a new email account to send notification from Gerrit.&lt;/p&gt;

&lt;p&gt;Most of email service providers require the secure authorization when using its SMTP server to send mail. However the root CA of my email provider is not added into the default certificate of JRE. So Gerrit always failed to send email due to ssl verification exception.&lt;/p&gt;

&lt;p&gt;My solution is adding the certificate of SMTP server into the certificate used by JRE.&lt;/p&gt;

&lt;p&gt;The detail steps are below,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Use &lt;strong&gt;open_ssl&lt;/strong&gt; utility to the certificate of SMTP server or its root CA of email provider. Below command can list the certificate of SMTP and its chain. You can paste any of them into a file.&lt;/p&gt;

&lt;p&gt;openssl s_client -connect smtp.163.com:465&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Then import the certificate saved in previous step into my JRE&amp;rsquo;s key store. The default password of JRE&amp;rsquo;s default keystore is &amp;lsquo;&lt;strong&gt;changeit&lt;/strong&gt;&amp;rsquo;. You can find the &lt;em&gt;cacerts&lt;/em&gt; under jre/lib/security folder.&lt;/p&gt;

&lt;p&gt;sudo keytool -import -keystore cacerts -alias Smtp163com -file /tmp/smtp.163.PEM&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>The tips of Maven/Tycho building crossplatform RCP and repository</title>
      <link>https://kane.mx/posts/archive/blogspot/tips-of-maventycho-building/</link>
      <pubDate>Tue, 08 Nov 2011 16:16:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/tips-of-maventycho-building/</guid>
      <description>&lt;p&gt;I successfully converted our product build from PDE build to Maven/Tycho. Something is worth to be documented here.&lt;/p&gt;

&lt;p&gt;There are several examples and posts to demonstrate how using Tycho building your Eclipse plug-ins, features, applications and products. The most helpful example is the &lt;a href=&#34;http://git.eclipse.org/c/tycho/org.eclipse.tycho.git/tree/tycho-demo&#34;&gt;demo&lt;/a&gt; of Tycho project.&lt;/p&gt;

&lt;p&gt;Below are some traps I met when building my project by Tycho,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;product build&lt;/strong&gt;&lt;br /&gt;
Our product is based on plug-ins, however we added the &amp;lsquo;&lt;strong&gt;featurelist&lt;/strong&gt;&amp;rsquo; in build.properties of PDE build to include some root binary for the product. However Tycho doesn&amp;rsquo;t support this type of build, we create some features as the placeholder of plug-ins. Then change the product as features based. You have to manually remove the &lt;strong&gt;plugins&lt;/strong&gt; tag in .product definition file, otherwise Tycho will fail on strange error if the .produce has both &lt;strong&gt;features&lt;/strong&gt; and &lt;strong&gt;plugins&lt;/strong&gt; tag. Then configure the director plugin as not installing features.&lt;/p&gt;

&lt;p&gt;org.eclipse.tycho&lt;br /&gt;
    tycho-p2-director-plugin&lt;br /&gt;
    ${tycho-version}&lt;br /&gt;
    materialize-products&lt;br /&gt;
      materialize-products&lt;br /&gt;
      false&lt;br /&gt;
       myappprofile&lt;br /&gt;
     archive-products&lt;br /&gt;
      archive-products&lt;/p&gt;

&lt;p&gt;And I used below way to customize the qualifier string of our build.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;org.eclipse.tycho  
tycho-packaging-plugin  
${tycho-version}  
&#39;${qualifier-prefix}_&#39;yyyyMMddHHmm 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;An limitation of director plugin is that no way using different profile name for the application installed on different hosts. I contributed a patch on &lt;a href=&#34;https://bugs.eclipse.org/bugs/show_bug.cgi?id=362550&#34;&gt;bug 362550&lt;/a&gt; for this enhancement.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;feature build&lt;/strong&gt;&lt;br /&gt;
We have some features to pack some binary files as root files. But Tycho doesn&amp;rsquo;t support root folder that is recognized by PDE build. The workaround is creating an additional folder, then put the root files into it.&lt;br /&gt;
Meanwhile Tycho doesn&amp;rsquo;t support wildcard to other native touch points, such as changing the files permission. For static file list use comma separated list as workaround.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;eclipse test plug-in&lt;/strong&gt;&lt;br /&gt;
I have a plug-in whose scope is &amp;lsquo;test&amp;rsquo;, but it doesn&amp;rsquo;t have test case and no dependency for any test framework, such as junit 3.8 or junit 4. And it&amp;rsquo;s used for mocking test server. Configure surefire plugin to let it build as test plug-in as well.&lt;/p&gt;

&lt;p&gt;org.eclipse.tycho&lt;br /&gt;
    tycho-surefire-plugin&lt;br /&gt;
    ${tycho-version}&lt;br /&gt;
    junit&lt;br /&gt;
       junit&lt;br /&gt;
       4.1&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; false   
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;junit&lt;br /&gt;
   junit&lt;br /&gt;
   4.1&lt;/p&gt;

&lt;p&gt;And configure the surefire plugin like below to test code in Maven build.&lt;/p&gt;

&lt;p&gt;org.eclipse.tycho&lt;br /&gt;
    tycho-surefire-plugin&lt;br /&gt;
    ${tycho-version}&lt;br /&gt;
    my.group&lt;br /&gt;
      my.feature&lt;br /&gt;
      ${version}&lt;br /&gt;
      eclipse-feature&lt;br /&gt;
     my.group&lt;br /&gt;
      my.testserver&lt;br /&gt;
      1.0.0&lt;br /&gt;
      eclipse-plugin&lt;br /&gt;
     ${testSuiteName}&lt;br /&gt;
     ${testClassName}&lt;br /&gt;
     -Dcom.sun.management.jmxremote&lt;br /&gt;
     -consoleLog&lt;br /&gt;
     org.eclipse.equinox.ds&lt;br /&gt;
       1&lt;br /&gt;
       true&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;sign jars&lt;/strong&gt;&lt;br /&gt;
Add below signjar plugin into parent pom.xml, however I met the md5 error when materializing the repository built on .product. There is a workaround mentioned on &lt;a href=&#34;https://bugs.eclipse.org/bugs/show_bug.cgi?id=344691#c11&#34;&gt;Bug 344691&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  org.apache.maven.plugins  
  maven-jarsigner-plugin  
  1.2  
  ${keystore}  
   MyCompany  
   ${storepass}  
   ${keypass}  
   true  
   ${skip.jar.signing}  
   -tsa  
    https://timestamp.geotrust.com/tsa   
   **/artifacts.jar  
    **/content.jar   
   jar  
    eclipse-plugin  
    eclipse-feature  
    eclipse-test-plugin   
  sign  
    sign   
   verify  
    verify
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Migration Clearcase to Git -- part 2</title>
      <link>https://kane.mx/posts/archive/blogspot/migration-clearcase-to-git-part-2/</link>
      <pubDate>Tue, 25 Oct 2011 19:45:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/migration-clearcase-to-git-part-2/</guid>
      <description>&lt;p&gt;Several days ago I had a post to record the unsuccessful experience to migrate source code from Clearcase to Git.&lt;/p&gt;

&lt;p&gt;We have a new way after doing some brain storms. This way still is not a perfect solution, but it&amp;rsquo;s much better than previous trial.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Use &lt;strong&gt;clearexport_ccase&lt;/strong&gt; to export the source folder to intermittent data. See &lt;a href=&#34;http://publib.boulder.ibm.com/infocenter/cchelp/v7r0m1/index.jsp?topic=/com.ibm.rational.clearcase.cc_ref.doc/topics/clearexport_ccase.htm&#34;&gt;documentation&lt;/a&gt; of Clearcase admin.&lt;/li&gt;
&lt;li&gt;Create a temporary vob for importing the data later. See &lt;a href=&#34;http://publib.boulder.ibm.com/infocenter/cchelp/v7r0m1/index.jsp?topic=/com.ibm.rational.clearcase.tutorial.doc/a_cr_storagecomp_fcc_ux.htm&#34;&gt;example&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Import the data into temporary vob. See &lt;a href=&#34;http://www.philforhumanity.com/ClearCase_Support_38.html&#34;&gt;example&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Repeat step 1 to 3 for importing all necessary data into temporary vob.&lt;/li&gt;
&lt;li&gt;Use the SVN Importer to import the temporary vob as Subversion repository.&lt;/li&gt;
&lt;li&gt;Last steps refer to a documentation of &lt;a href=&#34;http://www.winklerweb.net/index.php/blog/4-eclipse/16-migrating-the-cdo-svn-repository-to-git&#34;&gt;succeeded migration case&lt;/a&gt; of one of Eclipse project from Subversion to Git.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Git definitely is greatest SCM tool now. The size of Subversion repository is around 10GB, finally the Git repository is less than 700MB, which saves more than 10 times disk space. It&amp;rsquo;s awesome!&lt;/p&gt;

&lt;p&gt;The flaw of this way is that the removed elements in Clearcase(said using Main/LATEST as cspec of Clearcase vob when exporting) would lose after importing into a temporary vob. So switching to a maintenance branch or tag like 1.0/2.0 in Git, the source code is incomplete. The files existed in that branch or tag, then removed in latest code base are lost. The workaround could be manually checking in GA version to have complete code.&lt;/p&gt;

&lt;p&gt;If anybody have graceful and perfect solution to migrate Clearcase to Git, I think he could start a new business. :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Migrate Clearcase to Git</title>
      <link>https://kane.mx/posts/archive/blogspot/migrate-clearcase-to-git/</link>
      <pubDate>Mon, 17 Oct 2011 19:50:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/migrate-clearcase-to-git/</guid>
      <description>&lt;p&gt;I tried to migrate the source code of project from Clearcase to Git repository. As far as I know there is no elegant solution for such migration. For purpose of this migration, I want to keep the history and label of files in Clearcase after migrating to Git repository.&lt;/p&gt;

&lt;p&gt;There are mature tools to migrate CVS/SVN repository to Git, so I tried to use Subversion as a bridge for my migration.&lt;/p&gt;

&lt;p&gt;I used a free software &amp;lsquo;&lt;a href=&#34;http://www.polarion.com/products/svn/svn_importer.php&#34;&gt;SVN Importer&lt;/a&gt;&amp;rsquo; to import the Clearcase vobs to Subversion. The tool is great, and it keeps the history of files, labels and branches. The entire size of new Subversion repository has near 50GB which is unacceptable size of Git repository. The subversion repository contains a lot of legacy code and unwanted binaries, so removing those revisions could significantly reduce the size of subversion repository. And subversion provides some admin tools to manipulate the metadata of subversion, it&amp;rsquo;s possible to remove the unnecessary revisions and re-create a subversion repository with refined content. But I don&amp;rsquo;t have any experience to use the admin tool of subversion before, I failed to filter the unwanted data. It&amp;rsquo;s not worthy of costing too much effects on it. Finally I failed to filter the subversion repository.&lt;/p&gt;

&lt;p&gt;Actually the detail history of files is rarely used. If need, we still can find it in Clearcase. At last I manually checked in the released version of our project into Git repository, and tagged them.&lt;/p&gt;

&lt;p&gt;Wrote this unsuccessful idea here for elapsed efforts.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>p2 query performance</title>
      <link>https://kane.mx/posts/archive/blogspot/p2-query-performance/</link>
      <pubDate>Mon, 17 Oct 2011 19:34:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/p2-query-performance/</guid>
      <description>&lt;p&gt;Our p2 based on installer suffered performance issue when querying IUs from repositories. Though the repositories have a large number of IUs to be queried, but we find the performance of using QL is unacceptable in some special scenarios.&lt;/p&gt;

&lt;p&gt;I &lt;a href=&#34;https://docs.google.com/document/d/1wfnr2d2TF4vIYDCMmWPuYd0kQA32WiWaXTiaCoJovho/edit?pli=1&#34;&gt;published several different methods&lt;/a&gt; to find the expected IUs. Thomas pointed out the better expression of QL and finally helped us to find out the our repository without &lt;strong&gt;IIndexProvider&lt;/strong&gt; implementation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IIndexProvider&lt;/strong&gt; implementation of a repository is quite important to improve the performance of QL, especially use the &amp;lsquo;traverse&amp;rsquo; clause to query something.&lt;/p&gt;

&lt;p&gt;And Slicer API is an alternative method when querying the complete dependencies.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Create an import library for building application in MinGW</title>
      <link>https://kane.mx/posts/archive/blogspot/create-import-library-for-building/</link>
      <pubDate>Fri, 12 Aug 2011 10:51:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/create-import-library-for-building/</guid>
      <description>&lt;p&gt;Yesterday I modified an existing c++ application for Windows. And its default build environment is Makefile and MinGW.&lt;/p&gt;

&lt;p&gt;However I used a newly Windows API that is not included by header files of MinGW.&lt;/p&gt;

&lt;p&gt;First of all, I copied the constant definition from header file of Windows SDK, and defined the Windows API method as a extern C method. So it&amp;rsquo;s no problem to compile the code in MinGW.&lt;/p&gt;

&lt;p&gt;Secondly I have to fix the link issue. Because the symbol of the Windows API also can&amp;rsquo;t be found by gcc link.&lt;/p&gt;

&lt;p&gt;Here great thanks to Google. It&amp;rsquo;s quite easy to get the knowledge from others.&lt;/p&gt;

&lt;p&gt;I found a way to create an library by using dlltool. Dlltool is a utility to create an library with specified methods from existing dll library, which can be used by gcc link later.&lt;/p&gt;

&lt;p&gt;Below are links I referred to create an import library,&lt;/p&gt;

&lt;p&gt;[1] &lt;a href=&#34;http://www.emmestech.com/moron_guides/moron1.html&#34;&gt;http://www.emmestech.com/moron_guides/moron1.html&lt;/a&gt;&lt;br /&gt;
[2] &lt;a href=&#34;http://www.mingw.org/wiki/CreateImportLibraries&#34;&gt;http://www.mingw.org/wiki/CreateImportLibraries&lt;/a&gt;&lt;br /&gt;
[3] &lt;a href=&#34;http://lists-archives.org/mingw-users/19461-import-library-for-c.html&#34;&gt;http://lists-archives.org/mingw-users/19461-import-library-for-c.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Customize PDE build</title>
      <link>https://kane.mx/posts/archive/blogspot/customize-pde-build/</link>
      <pubDate>Fri, 22 Jul 2011 13:59:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/customize-pde-build/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://help.eclipse.org/helios/index.jsp?topic=/org.eclipse.pde.doc.user/tasks/pde_customization.htm&#34;&gt;The documentation of PDE&lt;/a&gt; has a chapter for this topic. Basically it&amp;rsquo;s simply. Copy the template scripts what you want from &lt;em&gt;templates/headless-build&lt;/em&gt; folder under &lt;em&gt;org.eclipse.pde.build&lt;/em&gt; plug-in to your build configuration directory that is the folder has &lt;em&gt;build.properties&lt;/em&gt; file.&lt;/p&gt;

&lt;p&gt;However I found the variables listed in template &amp;lsquo;&lt;em&gt;customAssembly.xml&lt;/em&gt;&amp;rsquo; can&amp;rsquo;t be used in the runtime. I filed bug &lt;a href=&#34;https://bugs.eclipse.org/bugs/show_bug.cgi?id=346370&#34;&gt;346370&lt;/a&gt; against it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Using the certificate of Windows code signing to sign jars</title>
      <link>https://kane.mx/posts/archive/blogspot/using-certificate-of-windows-code/</link>
      <pubDate>Mon, 18 Jul 2011 21:03:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/using-certificate-of-windows-code/</guid>
      <description>&lt;p&gt;I did sign the jars via reusing the existing certificate of Windows code signing several months ago. Writing it down for further reference.&lt;/p&gt;

&lt;p&gt;Whatever your purpose of reusing the existing Windows code certificate, I only document the way from technical perspective.&lt;/p&gt;

&lt;p&gt;After buying the certificate of Windows code signing from CA, you will get a .pvk file that stores both the certificate and private key. PVK file is the PKCS12 format[1], however java uses JKS format by default. So you need convert the pvk file to JKS keystore and certificate.&lt;/p&gt;

&lt;p&gt;Since 6.0 JDK supports PKCS12 directly, you can use &amp;lsquo;jarsigner&amp;rsquo; and PVK file to sign jars directly[2].&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;  
jarsigner -keystore /working/mystore.pvk -storetype pkcs12 -storepass myspass -keypass j638klm -signedjar sbundle.jar bundle.jar jane  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Or using keytool to convert the PKCS#12 to JKS format[3] if using Eclipse PDE build to sign your jars.&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt; 
keytool -importkeystore -srckeystore KEYSTORE.pvk -destkeystore KEYSTORE.jks  -srcstoretype PKCS12 -deststoretype JKS -srcstorepass mysecret -deststorepass mysecret -srcalias myalias -destalias myalias -srckeypass mykeypass -destkeypass mykeypass -noprompt   &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;[1] &lt;a href=&#34;http://en.wikipedia.org/wiki/PKCS&#34;&gt;http://en.wikipedia.org/wiki/PKCS&lt;/a&gt;&lt;br /&gt;
[2] &lt;a href=&#34;http://download.oracle.com/javase/6/docs/technotes/tools/solaris/jarsigner.html&#34;&gt;http://download.oracle.com/javase/6/docs/technotes/tools/solaris/jarsigner.html&lt;/a&gt;&lt;br /&gt;
[3] &lt;a href=&#34;http://shib.kuleuven.be/docs/ssl_commands.shtml#keytool&#34;&gt;http://shib.kuleuven.be/docs/ssl_commands.shtml#keytool&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Unlock the locked profile if firefox/thunderbird crash</title>
      <link>https://kane.mx/posts/archive/blogspot/unlock-locked-profile-if/</link>
      <pubDate>Wed, 11 May 2011 13:19:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/unlock-locked-profile-if/</guid>
      <description>&lt;p&gt;I met that firefox/thunderbird complained another its instance running even if no a running firefox/thunderbird process. Finally let them run again after removing the &amp;lsquo;.parentlock&amp;rsquo; file in their default profile.&lt;/p&gt;

&lt;p&gt;strace utility helps me a lot to find the solution.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;strace -f -e file firfox&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Eclipse P2&#39;s import/export capability</title>
      <link>https://kane.mx/posts/archive/blogspot/eclipse-p2s-importexport-capability/</link>
      <pubDate>Fri, 22 Apr 2011 15:56:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/eclipse-p2s-importexport-capability/</guid>
      <description>&lt;p&gt;I implemented the &lt;a href=&#34;https://kane.mx/posts/archive/blogspot/p2-replication-plug-in/&#34;&gt;replication tool&lt;/a&gt; at the end of 2009, then published it to &lt;a href=&#34;https://kane.mx/posts/archive/blogspot/p2-replication-tool-lives-on-eclipse/&#34;&gt;Eclipse Marketplace&lt;/a&gt; in May 2010. However it&amp;rsquo;s not pervasively used due to users have to install that plug-in firstly.&lt;/p&gt;

&lt;p&gt;I searched a similar &lt;a href=&#34;https://bugs.eclipse.org/bugs/show_bug.cgi?id=282419&#34;&gt;request&lt;/a&gt; on bugzilla, then I initialized my contribution in the early of this year. Finally it was accepted and will release as part of eclipse itself since Eclipse 3.7 M7! I hope it would benefit the users of Eclipse more and more.&lt;/p&gt;

&lt;p&gt;And I was nominated and elected as the committer of Equinox p2, it&amp;rsquo;s a great honor for me. :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[vim] delete the lines not contain words</title>
      <link>https://kane.mx/posts/archive/blogspot/vim-delete-lines-not-contain-words/</link>
      <pubDate>Wed, 05 Jan 2011 14:25:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/vim-delete-lines-not-contain-words/</guid>
      <description>&lt;p&gt;:g!/some expression/d&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Inside P2&#39;s profile (2) - the fragment matches all osgi bundles</title>
      <link>https://kane.mx/posts/archive/blogspot/inside-p2s-profile-2-fragment-matches/</link>
      <pubDate>Tue, 28 Dec 2010 11:33:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/inside-p2s-profile-2-fragment-matches/</guid>
      <description>&lt;p&gt;Recently our installer met a strange bug, it didn&amp;rsquo;t uninstall all legacy bundles after updating to new version. Finally I found it&amp;rsquo;s due to a magic fragment is missing in the profile due to some causes.&lt;/p&gt;

&lt;p&gt;    &lt;unit id=&#39;tooling.osgi.bundle.default&#39; version=&#39;1.0.0&#39; singleton=&#39;false&#39;&gt;&lt;br /&gt;
      &lt;hostRequirements size=&#39;1&#39;&gt;&lt;br /&gt;
        &lt;required namespace=&#39;org.eclipse.equinox.p2.eclipse.type&#39; name=&#39;bundle&#39; range=&#39;0.0.0&#39; multiple=&#39;true&#39; greedy=&#39;false&#39;/&gt;&lt;br /&gt;
      &lt;/hostRequirements&gt;&lt;br /&gt;
      &lt;properties size=&#39;1&#39;&gt;&lt;br /&gt;
        &lt;property name=&#39;org.eclipse.equinox.p2.type.fragment&#39; value=&#39;true&#39;/&gt;&lt;br /&gt;
      &lt;/properties&gt;&lt;br /&gt;
      &lt;provides size=&#39;2&#39;&gt;&lt;br /&gt;
        &lt;provided namespace=&#39;org.eclipse.equinox.p2.iu&#39; name=&#39;tooling.osgi.bundle.default&#39; version=&#39;1.0.0&#39;/&gt;&lt;br /&gt;
        &lt;provided namespace=&#39;org.eclipse.equinox.p2.flavor&#39; name=&#39;tooling&#39; version=&#39;1.0.0&#39;/&gt;&lt;br /&gt;
      &lt;/provides&gt;&lt;br /&gt;
      &lt;requires size=&#39;1&#39;&gt;&lt;br /&gt;
        &lt;required namespace=&#39;org.eclipse.equinox.p2.eclipse.type&#39; name=&#39;bundle&#39; range=&#39;0.0.0&#39; multiple=&#39;true&#39; greedy=&#39;false&#39;/&gt;&lt;br /&gt;
      &lt;/requires&gt;&lt;br /&gt;
      &lt;touchpoint id=&#39;null&#39; version=&#39;0.0.0&#39;/&gt;&lt;br /&gt;
      &lt;touchpointData size=&#39;1&#39;&gt;&lt;br /&gt;
        &lt;instructions size=&#39;4&#39;&gt;&lt;br /&gt;
          &lt;instruction key=&#39;install&#39;&gt;&lt;br /&gt;
            installBundle(bundle:${artifact})&lt;br /&gt;
          &lt;/instruction&gt;&lt;br /&gt;
          &lt;instruction key=&#39;uninstall&#39;&gt;&lt;br /&gt;
            uninstallBundle(bundle:${artifact})&lt;br /&gt;
          &lt;/instruction&gt;&lt;br /&gt;
          &lt;instruction key=&#39;unconfigure&#39;&gt;&lt;/p&gt;

&lt;p&gt;          &lt;/instruction&gt;&lt;br /&gt;
          &lt;instruction key=&#39;configure&#39;&gt;&lt;br /&gt;
            setStartLevel(startLevel:4);&lt;br /&gt;
          &lt;/instruction&gt;&lt;br /&gt;
        &lt;/instructions&gt;&lt;br /&gt;
      &lt;/touchpointData&gt;&lt;br /&gt;
    &lt;/unit&gt;&lt;/p&gt;

&lt;p&gt;It has &amp;lsquo;hostRequirements&amp;rsquo; element that represents it&amp;rsquo;s a fragment IU and match all the eclipse&amp;rsquo;s plug-ins in that profile. And this fragment defines the touch point actions for its hosts that will do installBundle action during &amp;lsquo;install&amp;rsquo; phrase and uninstallBundle action during &amp;lsquo;uninstall&amp;rsquo; phrase. It&amp;rsquo;s a very good way to remove the duplicate touch point definitions for all eclipse&amp;rsquo;s plug-ins in the profile.&lt;/p&gt;

&lt;p&gt;BTW, p2&amp;rsquo;s engine also doesn&amp;rsquo;t attach this fragment to the eclipse&amp;rsquo;s plug-in IU if the top level IU doesn&amp;rsquo;t have the STRICT rule. I&amp;rsquo;m not sure the root cause of designing for it, but it&amp;rsquo;s the fact.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Inside P2&#39;s profile (1) - inclusion rules</title>
      <link>https://kane.mx/posts/archive/blogspot/inside-p2s-profile-1-inclusion-rules/</link>
      <pubDate>Tue, 28 Dec 2010 11:13:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/inside-p2s-profile-1-inclusion-rules/</guid>
      <description>&lt;p&gt;You would see some interesting properties at the bottom of eclipse&amp;rsquo;s profile.&lt;/p&gt;

&lt;p&gt;For example,&lt;/p&gt;

&lt;p&gt;&lt;iuProperties id=&#39;org.eclipse.sdk.ide&#39; version=&#39;3.6.1.M20100909-0800&#39;&gt;&lt;br /&gt;
      &lt;properties size=&#39;2&#39;&gt;&lt;br /&gt;
        &lt;property name=&#39;org.eclipse.equinox.p2.internal.inclusion.rules&#39; value=&#39;STRICT&#39;/&gt;&lt;br /&gt;
      &lt;/properties&gt;&lt;br /&gt;
&lt;/iuProperties&gt;&lt;/p&gt;

&lt;p&gt;It attaches a property named &amp;lsquo;org.eclipse.equinox.p2.internal.inclusion.rules&amp;rsquo; with value &amp;lsquo;STRICT&amp;rsquo; on the IU &amp;lsquo;org.eclipse.sdk.ide&amp;rsquo; with version 3.6.1.M20100909-0800.&lt;br /&gt;
 &lt;br /&gt;
It&amp;rsquo;s a very important property for the p2 engine. It means the IU &amp;lsquo;org.eclipse.sdk.ide&amp;rsquo; has been explicitly installed into the profile, so it&amp;rsquo;s not allowed be implicitly updated or removed.&lt;/p&gt;

&lt;p&gt;For example,&lt;br /&gt;
We have top feature IU &amp;lsquo;org.eclipse.sdk.ide&amp;rsquo; that represents the Eclipse SDK,   &amp;lsquo;org.eclipse.pde.feature&amp;rsquo; that represents the Plug-in Development Tool and &amp;lsquo;org.eclipse.jdt.feature&amp;rsquo; that represents the Java Development Tool. And both JDT and PDT are part of Eclipse SDK, so &amp;lsquo;org.eclipse.pde.feature&amp;rsquo; and &amp;lsquo;org.eclipse.jdt.feature&amp;rsquo; are required by &amp;lsquo;org.eclipse.sdk.ide&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;If the profile only has the STRICT rule for &amp;lsquo;org.eclipse.sdk.ide&amp;rsquo;, &amp;lsquo;org.eclipse.jdt.feature&amp;rsquo; and &amp;lsquo;org.eclipse.pdt.feature&amp;rsquo; will implicitly be updated to 3.6.2 when updating &amp;lsquo;org.eclipse.sdk.ide&amp;rsquo; from 3.6.1 to 3.6.2.&lt;/p&gt;

&lt;p&gt;However the profile has below STRICT rule for PDT feature,&lt;/p&gt;

&lt;p&gt;&lt;iuProperties id=&#39;org.eclipse.pdt.feature&#39; version=&#39;3.6.1.M20100909-0800&#39;&gt;&lt;br /&gt;
      &lt;properties size=&#39;2&#39;&gt;&lt;br /&gt;
        &lt;property name=&#39;org.eclipse.equinox.p2.internal.inclusion.rules&#39; value=&#39;STRICT&#39;/&gt;&lt;br /&gt;
      &lt;/properties&gt;&lt;br /&gt;
&lt;/iuProperties&gt;&lt;/p&gt;

&lt;p&gt;The p2 engine will report errors due to &amp;lsquo;org.eclipse.pdt.feature&amp;rsquo; has STRICT rule for updating. Hence third-party must explicitly update both &amp;lsquo;org.eclipse.sdk.ide&amp;rsquo; and &amp;lsquo;org.eclipse.pdt.feature&amp;rsquo; from 3.6.1 to 3.6.2.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>stack overflow protector</title>
      <link>https://kane.mx/posts/archive/blogspot/stack-overflow-protector/</link>
      <pubDate>Thu, 23 Dec 2010 13:25:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/stack-overflow-protector/</guid>
      <description>&lt;p&gt;Latest gcc compiler enables the stack overflow protector that is since GLIBC 2.4. So the library or executable is compiled by latest gcc could be loaded or executed in RHEL4 or Solaris 9 that only have GLIBC 2.3. Hence using option &amp;lsquo;-fno-stack-protector&amp;rsquo; to compile the library or executable to make sure it could be executed in older linux release.&lt;/p&gt;

&lt;p&gt;g++ -fno-stack-protector -o test.o test&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>the loop name for &#39;for&#39; clause in java</title>
      <link>https://kane.mx/posts/archive/blogspot/loop-name-for-for-clause-in-java/</link>
      <pubDate>Tue, 21 Sep 2010 10:46:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/loop-name-for-for-clause-in-java/</guid>
      <description>&lt;p&gt;Recently I just know such a useful syntax usage of java.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aLoopName: for (;;) {    // ...  while (someCondition)    // ...    if (otherCondition)        continue aLoopName;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>rename command</title>
      <link>https://kane.mx/posts/archive/blogspot/rename-command/</link>
      <pubDate>Sun, 19 Sep 2010 11:40:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/rename-command/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s a powerful command to rename files in a batch.&lt;/p&gt;

&lt;p&gt;Usage:&lt;/p&gt;

&lt;p&gt;rename &amp;rsquo;s/(\d+)$/$1\.txt/&amp;rsquo; * rename add &amp;lsquo;.txt&amp;rsquo; extension name for all files that ends with number.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>applying proxy for the softwares without proxy support in linux</title>
      <link>https://kane.mx/posts/archive/blogspot/applying-proxy-for-softwares-without/</link>
      <pubDate>Mon, 13 Sep 2010 13:14:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/applying-proxy-for-softwares-without/</guid>
      <description>&lt;p&gt;If you have http proxy, set it to system environment,&lt;/p&gt;

&lt;p&gt;export http_proxy=http://&lt;a href=&#34;http://127.0.0.1&#34;&gt;127.0.0.1&lt;/a&gt;:8000 Then start the application in that same terminal.&lt;/p&gt;

&lt;p&gt;If the proxy is socks proxy, use &amp;lsquo;&lt;a href=&#34;http://tsocks.sourceforge.net/about.php&#34;&gt;tsocks&lt;/a&gt;&amp;rsquo; to wrap the application in terminal.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Food and Drinking</title>
      <link>https://kane.mx/posts/archive/blogspot/food-and-drinking/</link>
      <pubDate>Mon, 30 Aug 2010 15:11:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/food-and-drinking/</guid>
      <description>&lt;p&gt;Honestly speaking, you have eaten the best delicious food if you&amp;rsquo;re living in China. Though we have more and more concerns on the safety of food, we have to recognize that Chinese food is more delicious than others.&lt;/p&gt;

&lt;p&gt;The cuisine is simple in Austria. People always use pork, beef, flour, tomato, potato and few green vegetables. So they surprised Chinese cost several hours to make the food.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lh4.ggpht.com/_5seoFihTGKg/TGhDMuC9-GI/AAAAAAAAEts/07UdMerwnek/s1600/DSC01486.JPG&#34;&gt;&lt;img src=&#34;http://lh4.ggpht.com/_5seoFihTGKg/TGhDMuC9-GI/AAAAAAAAEts/07UdMerwnek/s320/DSC01486.JPG&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Gulasch, it&amp;rsquo;s good tasted after eating pizza several times&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lh3.ggpht.com/_5seoFihTGKg/THA4tivsMbI/AAAAAAAAFfM/icqAdSenGh8/s1600/DSC02235.JPG&#34;&gt;&lt;img src=&#34;http://lh3.ggpht.com/_5seoFihTGKg/THA4tivsMbI/AAAAAAAAFfM/icqAdSenGh8/s320/DSC02235.JPG&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;pasta&lt;/p&gt;

&lt;p&gt;About the drinking, most of them directly drink the water from water pipe. And some of them like the special water that mixes water with gas. The coffee and beer are the favorite of local citizens. You can find more than one hundred beer brand in the city, and some of them have been found for centuries. Indeed they&amp;rsquo;re good tasted.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lh4.ggpht.com/_5seoFihTGKg/TGhDHwbEImI/AAAAAAAAEts/2agQjADYhME/s1600/IMAG0062.jpg&#34;&gt;&lt;img src=&#34;http://lh4.ggpht.com/_5seoFihTGKg/TGhDHwbEImI/AAAAAAAAEts/2agQjADYhME/s320/IMAG0062.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;special water&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lh5.ggpht.com/_5seoFihTGKg/TGhDLmzGr1I/AAAAAAAAEts/xxBc93WCpjU/s1600/DSC01484.JPG&#34;&gt;&lt;img src=&#34;http://lh5.ggpht.com/_5seoFihTGKg/TGhDLmzGr1I/AAAAAAAAEts/xxBc93WCpjU/s320/DSC01484.JPG&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Die Weissf&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lh5.ggpht.com/_5seoFihTGKg/TGHFar39TQI/AAAAAAAAEWI/zuSA9t4mxbs/s1600/DSC01410.JPG&#34;&gt;&lt;img src=&#34;http://lh5.ggpht.com/_5seoFihTGKg/TGHFar39TQI/AAAAAAAAEWI/zuSA9t4mxbs/s320/DSC01410.JPG&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wieninger, it comes from Vienna&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lh6.ggpht.com/_5seoFihTGKg/TG7mpCBHSbI/AAAAAAAAFYk/csiGmZc-dKY/s1600/DSC02115.JPG&#34;&gt;&lt;img src=&#34;http://lh6.ggpht.com/_5seoFihTGKg/TG7mpCBHSbI/AAAAAAAAFYk/csiGmZc-dKY/s320/DSC02115.JPG&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Stiegl, local famous brand&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Working Workspace</title>
      <link>https://kane.mx/posts/archive/blogspot/working-workspace/</link>
      <pubDate>Fri, 27 Aug 2010 17:29:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/working-workspace/</guid>
      <description>&lt;p&gt;Joel posted a &lt;a href=&#34;http://www.joelonsoftware.com/articles/fieldguidetodevelopers.html&#34;&gt;blog&lt;/a&gt; related to how to hire the great programmers. One of his key points is building comfortable workspaces.&lt;/p&gt;

&lt;p&gt;I believe every programmer loves the workspace like Google and Fog Creek. The workspace of Google has been very famous due to its French chef, gymnasium and big sofas. Why is Fog Creek? It&amp;rsquo;s the company created by Joel, he also practiced his theory on his company. Ruan YiFeng posted a &lt;a href=&#34;http://www.ruanyifeng.com/blog/2009/02/fog_creek_s_new_office.html&#34;&gt;blog&lt;/a&gt; for it. I bet you would envy the guys working in that office.&lt;/p&gt;

&lt;p&gt;How about the workspace of the office in Salzburg? Let me show some pictures.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Space&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lh5.ggpht.com/_5seoFihTGKg/TGBWwuo-tHI/AAAAAAAAEMQ/xHxeyT70HXk/s1600/DSC01304.JPG&#34;&gt;&lt;img src=&#34;http://lh5.ggpht.com/_5seoFihTGKg/TGBWwuo-tHI/AAAAAAAAEMQ/xHxeyT70HXk/s320/DSC01304.JPG&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;programmers have two monitors&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Reading&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lh4.ggpht.com/_5seoFihTGKg/TGBWxauiGbI/AAAAAAAAEMQ/vci8KUFBYR8/s1600/DSC01305.JPG&#34;&gt;&lt;img src=&#34;http://lh4.ggpht.com/_5seoFihTGKg/TGBWxauiGbI/AAAAAAAAEMQ/vci8KUFBYR8/s320/DSC01305.JPG&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;non-technique magazines&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lh6.ggpht.com/_5seoFihTGKg/TGhB7aPoeTI/AAAAAAAAEtw/8vwp35gWKDM/s1600/DSC01531.JPG&#34;&gt;&lt;img src=&#34;http://lh6.ggpht.com/_5seoFihTGKg/TGhB7aPoeTI/AAAAAAAAEtw/8vwp35gWKDM/s320/DSC01531.JPG&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;technique books&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lh5.ggpht.com/_5seoFihTGKg/TGhB8dGbfaI/AAAAAAAAEtw/uJi1Th1VRpk/s1600/DSC01532.JPG&#34;&gt;&lt;img src=&#34;http://lh5.ggpht.com/_5seoFihTGKg/TGhB8dGbfaI/AAAAAAAAEtw/uJi1Th1VRpk/s320/DSC01532.JPG&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Drinking&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lh6.ggpht.com/_5seoFihTGKg/TGBWzSLoSmI/AAAAAAAAEMQ/7HYCatHdGz4/s1600/DSC01308.JPG&#34;&gt;&lt;img src=&#34;http://lh6.ggpht.com/_5seoFihTGKg/TGBWzSLoSmI/AAAAAAAAEMQ/7HYCatHdGz4/s320/DSC01308.JPG&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;coffee machine&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lh3.ggpht.com/_5seoFihTGKg/TGBWyMvCgwI/AAAAAAAAEMQ/fPdMhx7PBHw/s1600/DSC01306.JPG&#34;&gt;&lt;img src=&#34;http://lh3.ggpht.com/_5seoFihTGKg/TGBWyMvCgwI/AAAAAAAAEMQ/fPdMhx7PBHw/s320/DSC01306.JPG&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kitchen&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lh4.ggpht.com/_5seoFihTGKg/TGHEaDcOJNI/AAAAAAAAER0/NUTKufmDPAs/s1600/DSC01344.JPG&#34;&gt;&lt;img src=&#34;http://lh4.ggpht.com/_5seoFihTGKg/TGHEaDcOJNI/AAAAAAAAER0/NUTKufmDPAs/s320/DSC01344.JPG&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;freezer for fast food&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lh4.ggpht.com/_5seoFihTGKg/TGBWyoK53jI/AAAAAAAAEMQ/-5oBPlQCxO8/s1600/DSC01307.JPG&#34;&gt;&lt;img src=&#34;http://lh4.ggpht.com/_5seoFihTGKg/TGBWyoK53jI/AAAAAAAAEMQ/-5oBPlQCxO8/s320/DSC01307.JPG&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lh3.ggpht.com/_5seoFihTGKg/TG7mjY2LsOI/AAAAAAAAFYE/Gjq4G4pjPCk/s1600/DSC02105.JPG&#34;&gt;&lt;img src=&#34;http://lh3.ggpht.com/_5seoFihTGKg/TG7mjY2LsOI/AAAAAAAAFYE/Gjq4G4pjPCk/s320/DSC02105.JPG&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Entertainment&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lh3.ggpht.com/_5seoFihTGKg/TGhB_OLyyAI/AAAAAAAAEtw/h8kupi6nsPM/s1600/DSC01536.JPG&#34;&gt;&lt;img src=&#34;http://lh3.ggpht.com/_5seoFihTGKg/TGhB_OLyyAI/AAAAAAAAEtw/h8kupi6nsPM/s320/DSC01536.JPG&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;table football game&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Transportation</title>
      <link>https://kane.mx/posts/archive/blogspot/transportation/</link>
      <pubDate>Fri, 27 Aug 2010 16:20:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/transportation/</guid>
      <description>&lt;p&gt;Salzburg is a small city and is on the banks of the Salzach River. It&amp;rsquo;s easy to go through the city by bus in 30 minutes.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lh5.ggpht.com/_5seoFihTGKg/TGhDE2zZzpI/AAAAAAAAEts/7yYsaAnjIvg/s1600/IMAG0058.jpg&#34;&gt;&lt;img src=&#34;http://lh5.ggpht.com/_5seoFihTGKg/TGhDE2zZzpI/AAAAAAAAEts/7yYsaAnjIvg/s320/IMAG0058.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Salzach River&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lh4.ggpht.com/_5seoFihTGKg/TF7wirfvyNI/AAAAAAAAEJo/Q92doV8uMyU/s1600/DSC01291.JPG&#34;&gt;&lt;img src=&#34;http://lh4.ggpht.com/_5seoFihTGKg/TF7wirfvyNI/AAAAAAAAEJo/Q92doV8uMyU/s320/DSC01291.JPG&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;outline view&lt;/p&gt;

&lt;p&gt;Riding the bicycle is a very good way to enjoy the beautiful sight of the city. You could see many kids with parents riding bicycle in the sunny weekend.&lt;br /&gt;
The train station and a major bus transient station are the same one that is called as &amp;lsquo;main station&amp;rsquo; by local residents. it&amp;rsquo;s not far from the office of company, about 20 minutes by foot.&lt;/p&gt;

&lt;p&gt;The ticket system of bus is more complicated than Beijing&amp;rsquo;s. People can buy the ticket for single, 24 hours, 48 hours, a week and even a year. The children can get discount. There&amp;rsquo;s no ticket seller in the bus. Usually nobody checks whether you have valid ticket. Pressing the button to open the door when getting on/off the bus.&lt;/p&gt;

&lt;p&gt;The public transportation is designed well. There are different tickets for different people. For example, tourists would prefer to buy 24 hours ticket or 48 hours tickets. 24 hours ticket means the passengers can take any bus in the 24 hours after it&amp;rsquo;s used first time. So it&amp;rsquo;s very convenient for tourists. 24 hours ticket is 4.2€ for adults, 2.1€ for children.  The price of train tickets is same. The faster train &amp;ldquo;ICE&amp;rdquo; have higher price. The regular train is much cheaper. And the ticket allows a family not exceed 5 persons to go back and forth another city in a day. It&amp;rsquo;s very cheap for a family to enjoy weekend in another city or town by train. I think it&amp;rsquo;s a good approach to use public transportation more to reduce environment pollution.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lh3.ggpht.com/_5seoFihTGKg/THA35YLtBII/AAAAAAAAFbk/TSWCuhOVscI/s1600/DSC02175.JPG&#34;&gt;&lt;img src=&#34;http://lh3.ggpht.com/_5seoFihTGKg/THA35YLtBII/AAAAAAAAFbk/TSWCuhOVscI/s320/DSC02175.JPG&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;round-trip ticket&lt;/p&gt;

&lt;p&gt;Taking the train is more convenient than China. There is no security checking, no long distance between gate and platform and even no staffs in the platform. Meanwhile there is no any limitation to travel among the European countries. I went to Munich of Germany by train, I felt it&amp;rsquo;s even more convenient than taking subway in Beijing. Both the train and bus have a lot of humanization design for disability people and people with their bicycles or pets.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lh5.ggpht.com/_5seoFihTGKg/THA34mgWJ5I/AAAAAAAAFbg/GzdGFOAZtZs/s1600/DSC02174.JPG&#34;&gt;&lt;img src=&#34;http://lh5.ggpht.com/_5seoFihTGKg/THA34mgWJ5I/AAAAAAAAFbg/GzdGFOAZtZs/s320/DSC02174.JPG&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Working style</title>
      <link>https://kane.mx/posts/archive/blogspot/working-style/</link>
      <pubDate>Fri, 20 Aug 2010 17:45:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/working-style/</guid>
      <description>&lt;p&gt;There are 20+ staffs in Salzburg office. Most of them are developers, one is administrator of office.&lt;br /&gt;
Generally the staffs in Salzburg work more flexible than the staffs working in Beijing.&lt;br /&gt;
Some of them live in German. Even though it&amp;rsquo;s not so far as Salzburg, they also need come to Salzburg by train. So sometimes they work at home, use internet and phone as communication tool.&lt;br /&gt;
And they have different responsibilities for products. For example, Helmut works on installer, Matthias and Michael are responsibility for QFT testing, Martin N. is focus on license API developing. So everybody has himself schedule, he can decide when he come to office and when leave office based on his working schedule. Nobody cares when you come/leave office or how long you work every day. I believe all of them do well on their jobs.&lt;br /&gt;
Furthermore you can work with your dogs together if nobody takes care of them at home.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lh4.ggpht.com/_5seoFihTGKg/TGMHIzBlXCI/AAAAAAAAEZk/2HQKcFkkRG4/s1600/DSC01434.JPG&#34;&gt;&lt;img src=&#34;http://lh4.ggpht.com/_5seoFihTGKg/TGMHIzBlXCI/AAAAAAAAEZk/2HQKcFkkRG4/s320/DSC01434.JPG&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Max&amp;rsquo;s dogs&lt;/p&gt;

&lt;p&gt;Most of foreign like coffee, so there is a kitchen with seats in the office. Some of them like to drink a cup of coffee or tea as a break, and it&amp;rsquo;s a good chance to talk with others. It&amp;rsquo;s a relaxing time for changing your mind out of work. Besides drinking some things, there is a room for playing table football game. It&amp;rsquo;s a small amount of exercise, it&amp;rsquo;s good for body.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lh4.ggpht.com/_5seoFihTGKg/TGhB9Fk32aI/AAAAAAAAEtw/KnBxZafXWjY/s1600/DSC01534.JPG&#34;&gt;&lt;img src=&#34;http://lh4.ggpht.com/_5seoFihTGKg/TGhB9Fk32aI/AAAAAAAAEtw/KnBxZafXWjY/s320/DSC01534.JPG&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Another thing makes me very impressive is that the team is very stable than any company I know in China. Most of them work in company more than 10 years. So I think I know that&amp;rsquo;s why they know more than us. Everyone could be expert after doing the same thing more than 10 years. They love the work of coding, and they would like to do coding until retiring. That&amp;rsquo;s why I can see some of them are more than 40, even 50 years old.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>day 1</title>
      <link>https://kane.mx/posts/archive/blogspot/day-1/</link>
      <pubDate>Tue, 10 Aug 2010 19:24:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/day-1/</guid>
      <description>&lt;p&gt;度过长途飞行的旅程不是一件容易的事。要在狭小的空间里待上近10个小时，好在是两人出行，半睡半聊的打发过了时间。&lt;br /&gt;
到达维也纳之后，出了登机通道看到的居然是一个酒吧类的餐馆。感觉很稀奇，也很有味道。&lt;br /&gt;
周围当然少不了免税店和商铺，但远没有首都机场那样的规模。总体感觉就像国内大型超市购物出口一样，而且人也不多。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lh3.ggpht.com/_5seoFihTGKg/TGHDEkhP_yI/AAAAAAAAENE/vaUaP6QSc5o/s1600/IMAG0012.jpg&#34;&gt;&lt;img src=&#34;http://lh3.ggpht.com/_5seoFihTGKg/TGHDEkhP_yI/AAAAAAAAENE/vaUaP6QSc5o/s320/IMAG0012.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;另外赞一下维也纳机场的Wifi，简单配置就K了，哪像国内的，又要移动号码，还要短信获取，搞半天也没弄定。&lt;br /&gt;
转机之前还有段时间，就在机场里到处逛了逛。顺便在一个吧解决了晚餐，同时也尝了杯当地啤酒。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lh3.ggpht.com/_5seoFihTGKg/TGHDGKzhOgI/AAAAAAAAENI/SyDJegD6gsU/s1600/IMAG0013.jpg&#34;&gt;&lt;img src=&#34;http://lh3.ggpht.com/_5seoFihTGKg/TGHDGKzhOgI/AAAAAAAAENI/SyDJegD6gsU/s320/IMAG0013.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;去萨尔茨堡的飞机还是带螺旋桨的，头次坐这样的老式飞机。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lh5.ggpht.com/_5seoFihTGKg/TF7tgvXQbhI/AAAAAAAAECI/AgjugZ-dPW0/s1600/DSC01197.JPG&#34;&gt;&lt;img src=&#34;http://lh5.ggpht.com/_5seoFihTGKg/TF7tgvXQbhI/AAAAAAAAECI/AgjugZ-dPW0/s320/DSC01197.JPG&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Discovering the p2 API</title>
      <link>https://kane.mx/posts/archive/blogspot/discovering-p2-api/</link>
      <pubDate>Mon, 17 May 2010 22:35:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/discovering-p2-api/</guid>
      <description>&lt;p&gt;Check out this SlideShare Presentation:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://www.slideshare.net/PascalRapicault/discovering-the-p2-api&#34; title=&#34;Discovering the p2 API&#34;&gt;Discovering the p2 API&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;View more &lt;a href=&#34;http://www.slideshare.net/&#34;&gt;presentations&lt;/a&gt; from &lt;a href=&#34;http://www.slideshare.net/PascalRapicault&#34;&gt;Sonatype&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>P2 replication tool lives on Eclipse Marketplace</title>
      <link>https://kane.mx/posts/archive/blogspot/p2-replication-tool-lives-on-eclipse/</link>
      <pubDate>Mon, 17 May 2010 15:41:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/p2-replication-tool-lives-on-eclipse/</guid>
      <description>&lt;p&gt;Days ago I updated my p2 replication tool. It&amp;rsquo;s easier to install it in your Eclipse.&lt;br /&gt;
A new component named &amp;lsquo;Eclipse marketplace&amp;rsquo; is added into Eclipse SDK since Helios, which is an application store for Eclipse. People could be easy to install third party plug-ins into their Eclipse.&lt;/p&gt;

&lt;p&gt;You can launch marketplace via &amp;lsquo;Help&amp;rsquo; - &amp;lsquo;Eclipse Marketplace&amp;hellip;&amp;rsquo;, then search key word &amp;lsquo;p2&amp;rsquo; or &amp;lsquo;replication&amp;rsquo; to find the tool. Finally click next to install it.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s a very graceful workflow to install some add-ons like firefox.&lt;/p&gt;

&lt;p&gt;And then p2 replication tool could help you replicate your environment. This tool supports install components from another existing Eclipse instance to save the time cost on downloading them from Internet now! Enjoy it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>useful network utility tools</title>
      <link>https://kane.mx/posts/archive/blogspot/useful-network-utility-tools/</link>
      <pubDate>Thu, 11 Mar 2010 14:53:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/useful-network-utility-tools/</guid>
      <description>&lt;p&gt;1. tcpdump&lt;br /&gt;
tcpdump -n port 80 -i eth0|lo&lt;br /&gt;
monitor all package transferred on 80 port on the network interface eth0/lo&lt;br /&gt;
2. netstat&lt;br /&gt;
netstat -anp|grep java&lt;br /&gt;
trace all network traffic on the process named java&lt;br /&gt;
netstat -anp|grep 128.224.159.xxx&lt;br /&gt;
trace all network traffic on the host whose ip address is 128.224.159.xxx&lt;br /&gt;
3. nslookup&lt;br /&gt;
nslookup 206.191.52.46&lt;br /&gt;
look up the domain name whose ip address is 206.191.52.46&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[tip]Find -exec tip</title>
      <link>https://kane.mx/posts/archive/blogspot/find-exec-tip/</link>
      <pubDate>Wed, 24 Feb 2010 13:46:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/find-exec-tip/</guid>
      <description>&lt;p&gt;Using -exec command like below, need add escape character for semicolon that separated two commands in shell&lt;/p&gt;

&lt;p&gt;find directory/ -type d -exec chmod a+x {} \;&lt;/p&gt;

&lt;p&gt;Feb 24, 2010 - update:&lt;br /&gt;
find . -maxdepth 4 -type d  -name &amp;lsquo;g-vxworks&amp;rsquo; 2&amp;gt;/dev/null -print&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>special characters in p2 touchpoint instruction</title>
      <link>https://kane.mx/posts/archive/blogspot/special-characters-in-p2-touchpoint/</link>
      <pubDate>Fri, 05 Feb 2010 16:15:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/special-characters-in-p2-touchpoint/</guid>
      <description>&lt;p&gt;I suffered p2 installation failed on the configure parse. Becase I try to add vm arguments for my application.&lt;br /&gt;
For example, I added &amp;lsquo;-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8272&amp;rsquo; in the product configuration.&lt;br /&gt;
P2 will fail when parsing the argument, because it contains &amp;lsquo;:&amp;rsquo; and &amp;lsquo;,&amp;rsquo; that should be escaped.&lt;br /&gt;
It works again after replacing it to &amp;lsquo;-agentlib${#58}jdwp=transport=dt_socket${#44}server=y${#44}suspend=n${#44}address=8272&amp;rsquo;.&lt;br /&gt;
The more detail note could be found in &lt;a href=&#34;http://wiki.eclipse.org/Equinox/p2/Engine/Touchpoint_Instructions#Variables_Available_in_all_phases&#34;&gt;p2 touchpoint wiki&lt;/a&gt;.&lt;br /&gt;
And I also opened &lt;a href=&#34;https://bugs.eclipse.org/bugs/show_bug.cgi?id=301927&#34;&gt;bug&lt;/a&gt; to request improving it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>mount windows share folder</title>
      <link>https://kane.mx/posts/archive/blogspot/mount-windows-share-folder/</link>
      <pubDate>Fri, 29 Jan 2010 13:22:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/mount-windows-share-folder/</guid>
      <description>&lt;p&gt;mount -t cifs -o username=xxx,password=xxx,workgroup=xx,iocharset=utf8 //share.domain/folder /localfolder&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>the way to dump hex file</title>
      <link>https://kane.mx/posts/archive/blogspot/way-to-dump-hex-file/</link>
      <pubDate>Wed, 27 Jan 2010 17:27:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/way-to-dump-hex-file/</guid>
      <description>&lt;p&gt;1. open the file in vim, :%!xxd&lt;br /&gt;
2. hexdump&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to get the name of running test case in JUnit4</title>
      <link>https://kane.mx/posts/archive/blogspot/how-to-get-name-of-running-test-case-in/</link>
      <pubDate>Mon, 11 Jan 2010 14:57:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/how-to-get-name-of-running-test-case-in/</guid>
      <description>&lt;pre&gt;&lt;code&gt;public class NameRuleTest {      @Rule public TestName name = new TestName();          @Test public void testA() {                  assertEquals(&amp;quot;testA&amp;quot;, name.getMethodName());          }        @Test public void testB() {                  assertEquals(&amp;quot;testB&amp;quot;, name.getMethodName());          }}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>How p2 UI handles with license agreements</title>
      <link>https://kane.mx/posts/archive/blogspot/how-p2-ui-handles-with-license/</link>
      <pubDate>Wed, 30 Dec 2009 16:56:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/how-p2-ui-handles-with-license/</guid>
      <description>&lt;p&gt;P2 install wizard firstly query the repository to find out the root installable unit(as well as top installable). Then p2 recalculate the dependency and try to search the requirements in all available repositories after user submits their installation request. Go to the license agreement page if all the dependencies are satisfied.&lt;/p&gt;

&lt;p&gt;P2 agreement page obtains all the units to be installed from the operands of provision plan. The number always is much greater than the number submitted by user. Because the submitted IUs only are the root IUs.&lt;/p&gt;

&lt;p&gt;P2 UI would check the unaccepted licenses comparing to before records. The policy class of p2 UI provides the license manager to record the even accepted license. It traverses all the installable units, querying its license whether it has already been accepted if it has. If the license agreement has been accepted, it would be ignored, won&amp;rsquo;t be shown in the agreement page. Otherwise, new record is created to mark it as accepted by the license manager and display it in the agreement wizard page.&lt;/p&gt;

&lt;p&gt;The default implementation of license manager would persist the accepted information in the file &amp;ndash; &lt;workspace&gt;/.metadata/.plugins/org.eclipse.equinox.p2.ui.sdk/license.xml.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[tip]ssh key</title>
      <link>https://kane.mx/posts/archive/blogspot/ssh-key/</link>
      <pubDate>Tue, 29 Dec 2009 11:33:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/ssh-key/</guid>
      <description>&lt;p&gt;Setup SSH without password.&lt;br /&gt;
a) execute &amp;ldquo;ssh-keygen -t rsa&amp;rdquo; under your linux/unix login to get the RSA keys.&lt;br /&gt;
(press Enter for all)&lt;br /&gt;
You will get 2 files uner ~/.ssh/, id_rsa and id_rsa.pub&lt;br /&gt;
b) Put the public key id_rsa.pub to your remote host: ~/.ssh/authorized_keys If the remote host share the same nfs, just try &amp;ldquo; cat id_rsa.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys&amp;rdquo;&lt;br /&gt;
* Remember to modify hostname or ip info in ~/.ssh/authorized_keys to &amp;ldquo;&lt;em&gt;&amp;rdquo;, so that you can login from any host without password in your NIS domain.&lt;br /&gt;
For example:&lt;br /&gt;
ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA4Ri5J0s1BL/+mR7RfAuDW6FY2P6ILc61Zvw1BdDkvHMFrTzaC/AUMw33H7biAMCXuCleakCuSoV8ZDiGHYs4wOVvet5sDmphkwdiC4xTekdl3dRNvGjMVbvFUta/Y5CiayL6YIu47Ro6Vvu4Mutsrv/13pTlifrEz+NTR/+bzMb9nTniCwiryMyYod3E46b8WvS8yE3WK+tH4BZE8bjiCwdvAzSdPyk/OFNrlBNuF1yewwnxv1roRD3UalT2+7O4kfEG9sMvvBHjuX2l7xlUe3stBftYpigBbwGmmadxjRpNIlk88t5xKcQX6nSu7V8HI3GWPHI0D+ISIlbfU5Sunw== kzhu0@&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[Eclipse][P2]P2 replication plug-in</title>
      <link>https://kane.mx/posts/archive/blogspot/p2-replication-plug-in/</link>
      <pubDate>Fri, 25 Dec 2009 16:43:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/p2-replication-plug-in/</guid>
      <description>&lt;p&gt;I wrote a plug-in to simplify the process to install the same plug-ins in different platform or different workstation.&lt;br /&gt;
Anyone is interested in it, pls follow below guide to freely use it.&lt;br /&gt;
&lt;a href=&#34;http://code.google.com/p/kane-toolkit/wiki/P2Replication&#34;&gt;http://code.google.com/p/kane-toolkit/wiki/P2Replication&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Enjoy it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[eclipse]How Equinox load bundles</title>
      <link>https://kane.mx/posts/archive/blogspot/how-equinox-load-bundles/</link>
      <pubDate>Wed, 02 Dec 2009 14:58:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/how-equinox-load-bundles/</guid>
      <description>

&lt;h1 id=&#34;how-equinox-load-bundles&#34;&gt;How Equinox load bundles&lt;/h1&gt;

&lt;p&gt;Equinox launcher is responsible to start OSGi framework. The system bundle would be created and marked as installed when initializing the framework. Equinox also tries to install the installed bundles if finding them in persistence data during the initializing period. Of course there is no extra bundles would be installed when launching Equinox first time.&lt;br /&gt;
&lt;img src=&#34;http://docs.google.com/drawings/image?id=sNT8DMKTCXXaH4PoaQOafoA&amp;amp;w=400&amp;amp;h=400&amp;amp;rev=109&amp;amp;ac=1&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Then Equinox launcher would install the bundles specified by vm&amp;rsquo;s system property &amp;lsquo;osgi.bundles&amp;rsquo;. And start the initial bundles that are marked as early start. For example, let&amp;rsquo;s have a look at the configuration/config.ini of Eclipse, you would find a line similar as below,&lt;br /&gt;
osgi.bundles=reference\:file\:org.eclipse.equinox.simpleconfigurator_1.0.200.v20090831.jar@1\:start&lt;br /&gt;
It means the start level of bundle &amp;lsquo;org.eclipse.equinox.simpleconfigurator_1.0.200.v20090831.jar&amp;rsquo; is 1, and it would be started after installing it.&lt;/p&gt;

&lt;p&gt;Here you would ask there are only two bundles are installed(one is system bundle &amp;lsquo;org.eclipse.osgi&amp;rsquo;, the other is &amp;lsquo;org.eclipse.equinox.simpleconfigurator&amp;rsquo;) when launching Equinox, how the other bundles are installed? It&amp;rsquo;s done by the activate method of &amp;lsquo;simpleconfigurator&amp;rsquo; bundle. The available bundles are recorded in plain text file configuration/org.eclipse.equinox.simpleconfigurator/bundles.info, simpleconfigurator read the file then install those bundles.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s a new bundle management introduced by p2. P2 also supports the traditional way to install extensions, such as link file, .eclipseproduct file and directly copying features/plugins.&lt;br /&gt;
Below table lists the p2 bundles to implement the compatibility installation feature,&lt;/p&gt;

&lt;p&gt;Bundle&lt;/p&gt;

&lt;p&gt;Usage&lt;/p&gt;

&lt;p&gt;org.eclipse.equinox.p2.directorywatcher&lt;/p&gt;

&lt;p&gt;the definition and implementation of directory watcher API&lt;/p&gt;

&lt;p&gt;org.eclipse.equinox.p2.updatesite&lt;/p&gt;

&lt;p&gt;the implementation of updatesite repository&lt;/p&gt;

&lt;p&gt;org.eclipse.equinox.p2.extensionlocation&lt;/p&gt;

&lt;p&gt;the implementation of extension repository&lt;/p&gt;

&lt;p&gt;org.eclipse.equinox.p2.reconciler.dropins&lt;/p&gt;

&lt;p&gt;scan dropin folder and link files; watch the traditional configuration file used by update manager&lt;/p&gt;

&lt;p&gt;P2 reconciler would scan the dropin, link folder and legacy configuration file in every Equinox launching. You can disable the capability by marking it not be early start.&lt;br /&gt;
org.eclipse.equinox.p2.reconciler.dropins,1.0.100.v20091010,plugins/org.eclipse.equinox.p2.reconciler.dropins_1.0.100.v20091010.jar,4,false&lt;/p&gt;

&lt;p&gt;If finding some new bundles in dorpin folder, the reconciler would add the new bundles into a local metadata repository that is stored as OSGi data of Equinox. Then synchronize the bundles into the current p2 profile, then add the new bundles into bundles.info file.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[Eclipse][P2]Learn p2 step by step</title>
      <link>https://kane.mx/posts/archive/blogspot/learn-p2-step-by-step/</link>
      <pubDate>Thu, 12 Nov 2009 17:48:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/learn-p2-step-by-step/</guid>
      <description>

&lt;h1 id=&#34;learn-p2-step-by-step&#34;&gt;Learn p2 step by step&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;mailto:kane.mx@gmail.com&#34; title=&#34;Kane&#34;&gt;Kane&lt;/a&gt;               &lt;/p&gt;

&lt;p&gt;                     &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.blogger.com/post-edit.g?blogID=8314384370778429245&amp;amp;postID=6549693887265291061#Learn_P2_step_by_step&#34;&gt;Learn P2 step by step&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://www.blogger.com/post-edit.g?blogID=8314384370778429245&amp;amp;postID=6549693887265291061#p2_concept&#34;&gt;p2 concept&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.blogger.com/post-edit.g?blogID=8314384370778429245&amp;amp;postID=6549693887265291061#p2_install&#34;&gt;p2 install&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.blogger.com/post-edit.g?blogID=8314384370778429245&amp;amp;postID=6549693887265291061#p2_install_practice&#34;&gt;p2 install practice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.blogger.com/post-edit.g?blogID=8314384370778429245&amp;amp;postID=6549693887265291061#p2_repository_publish&#34;&gt;p2 repository publish&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.blogger.com/post-edit.g?blogID=8314384370778429245&amp;amp;postID=6549693887265291061#customized_p2_touchpoint&#34;&gt;customized p2 touchpoint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.blogger.com/post-edit.g?blogID=8314384370778429245&amp;amp;postID=6549693887265291061#p2_repository_publish_practice&#34;&gt;p2 repository publish practice&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.blogger.com/post-edit.g?blogID=8314384370778429245&amp;amp;postID=6549693887265291061#Example_Code&#34;&gt;Example Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.blogger.com/post-edit.g?blogID=8314384370778429245&amp;amp;postID=6549693887265291061#Reference&#34;&gt;Reference&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;br /&gt;

&lt;br /&gt;&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;p2-concept&#34;&gt;p2 concept&lt;/h3&gt;

&lt;p&gt;首先来理解p2引入的几个概念[1]&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;p2 / Agent&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The provisioning infrastructure on client machines&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Installable Unit (IU)&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Metadata&lt;/strong&gt; that describes things that can be installed/configured&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Artifact&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The actual content being installed/configured(e.g., bundle JARs)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Repository&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;A store of metadata or artifacts&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Profile&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The target of install/management operations&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Planner&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The decision-making entity in the provisioning system&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Engine&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The mechanism for executing provisioning requests&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Touchpoint&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The part of the engine responsible for integrating the provisioning&lt;br /&gt;
system to a particular runtime or management system&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;IU比较好理解，就是对可安装或配置的部分一种描述，并不对应实际要安装的文件。&lt;br /&gt;
Arifact就是来描述实际要安装的文件，bundle类型的jar，feature，binary文件。&lt;br /&gt;
这时就有了Repository（仓库）这个概念，是用来保存artifacts信息，以及artifacts的元数据。元数据包括了对artifact的唯一标识符，版本，对外暴露的接口信息，以及它依赖的接口及其版本信息，各个安装阶段需要执行的配置。在p2默认的实现里面，这两个repository用xml文件来描述，同时被压缩为artifacts.jar, content.jar来减小文件大小，缩短传输时间。&lt;br /&gt;
从Eclipse 3.4起，当从远程site安装新的软件时，就会看到有个work thread在后台下载content.jar文件。p2在安装时候，首先会根据content.xml（metadata repository）来解析正在安装软件的依赖。在当前runtime里面查找metadata中指定的依赖，如果满足才继续安装。据我个人经验，如果安装的软件比较复杂，那它产生的metadata文件就会比较大（很容易上兆），下载这个文件以及解析它的内容都会比较慢，从而影响用户体验。&lt;br /&gt;
比较灵活的是，用户可以实现自己的ArtifactRepository和MetadataRepository，注册到它们各自的Manager里面就可以了。所有这些服务都被实现为OSGi Service.&lt;br /&gt;
下一个Profile，是用来管理安装目标里的软件信息。p2在被设计的时候，希望解决多个eclipse实例共享一份安装的某软件。比如为了某种目的我机器上有好几个Eclipse，同时它们都需要CDT，免去为重复安装的麻烦。profile就会记录每次安装的内容，让整个应用程序被管理起来。在Galileo里安装的软件都可以软件管理里面查找到。&lt;br /&gt;
Planner和Engine完全就是p2内部的东西。任何p2的操作（安装，删除，配置）都需要Planner实例来描述。有了Planner以后，还需要创建一个Engine对象，通过engine来执行对应的plan。这就是目前调用p2 API来完成安装的一个过程。&lt;br /&gt;
最后一个Touchpoint。程序在安装的时候，可能会根据runtime(os, ws, arch等）或阶段(安装，卸载，配置等)执行某些配置，touchpoint就是帮助实现这些配置。具体操作是以IU为单位记录在metadata repository里的。p2默认实现了一些Eclipse touchpoint，比如拷贝，删除文件，执行外部程序等。如果用户有自己特殊的native操作需要执行，可以自己实现自定义的touchpoint。&lt;/p&gt;

&lt;h3 id=&#34;p2-install&#34;&gt;p2 install&lt;/h3&gt;

&lt;p&gt;有了这些概念以后，我们来看看如何使用p2 API。以安装为例，&lt;/p&gt;

&lt;p&gt;首先需要得到当前安装的profile。如果是全新安装，通过IProfileRegistry.addProfile创建一个新profile。是更新安装的话，可以通过IProfileRegistry查询到期望更新的profile。创建profile的时候，需要注意设置profile的属性，&lt;/p&gt;

&lt;p&gt;Map&lt;String, String&gt; profileProperties = new HashMap&lt;String, String&gt;();&lt;/p&gt;

&lt;p&gt;profileProperties.put(IProfile.PROP_INSTALL_FOLDER, installLocation.getAbsolutePath());&lt;/p&gt;

&lt;p&gt;profileProperties.put(IProfile.PROP_FLAVOR, &amp;ldquo;tooling&amp;rdquo;); //$NON-NLS-1$&lt;/p&gt;

&lt;p&gt;profileProperties.put(IProfile.PROP_ENVIRONMENTS, &amp;ldquo;osgi.os=&amp;rdquo; + Platform.getOS() + &amp;ldquo;,osgi.ws=&amp;rdquo; + Platform.getWS() + &amp;ldquo;,osgi.arch=&amp;rdquo; + Platform.getOSArch()); //$NON-NLS-1$;&lt;/p&gt;

&lt;p&gt;profileProperties.put(IProfile.PROP_NL, &amp;ldquo;en_US&amp;rdquo;); //$NON-NLS-1$&lt;/p&gt;

&lt;p&gt;profileProperties.put(IProfile.PROP_INSTALL_FEATURES, &amp;ldquo;true&amp;rdquo;);&lt;/p&gt;

&lt;p&gt;profileProperties.put(IProfile.PROP_CONFIGURATION_FOLDER, new File(installLocation, &amp;ldquo;configuration&amp;rdquo;).getAbsolutePath());&lt;/p&gt;

&lt;p&gt;profileProperties.put(IProfile.PROP_ROAMING, &amp;ldquo;true&amp;rdquo;);&lt;/p&gt;

&lt;p&gt;profileProperties.put(IProfile.PROP_CACHE, installLocation.getAbsolutePath());&lt;/p&gt;

&lt;p&gt;currentProfile = registry.addProfile(PROFILE_ID, profileProperties);&lt;/p&gt;

&lt;p&gt;PROP_INSTALL_FOLDER设置安装的目录，PROP_CACHE设置保存下载来的Eclipse IU(features/plugins)的目录，如果repository是以feature为单位来发布的话，需要设置PROP_INSTALL_FEATURES为true。如果repository包括native的binary（比如launcher）也需要指定正确的PROP_ENVIROMENTS，包括OS,WS,ARCH或PROCESSOR。&lt;/p&gt;

&lt;p&gt;然后需要获得将要安装的IMetadataRepository集合。比如：&lt;/p&gt;

&lt;p&gt;ArrayList&lt;IInstallableUnit&gt; ius = new ArrayList&lt;IInstallableUnit&gt;();&lt;/p&gt;

&lt;p&gt;IMetadataRepositoryManager repositoryManager = (IMetadataRepositoryManager) ServiceHelper.getService(Activator.getDefault().getBundle().getBundleContext(),&lt;/p&gt;

&lt;p&gt;IMetadataRepositoryManager.class.getName()); &lt;/p&gt;

&lt;p&gt;if (repositoryManager == null) &lt;/p&gt;

&lt;p&gt;       throw new InterruptedException(&amp;ldquo;Failed to get IMetadataRepositoryManager.&amp;rdquo;);&lt;/p&gt;

&lt;p&gt;try {&lt;/p&gt;

&lt;p&gt;  for (URI uri : uris) {&lt;/p&gt;

&lt;p&gt;    IMetadataRepository metaRepo = repositoryManager.loadRepository(uri, progress.newChild(50/uris.length));&lt;/p&gt;

&lt;p&gt;    Collector collector = metaRepo.query(new AccpetQuery(), new LatestNoninstalledIUCollector(currentProfile), progress.newChild(50/uris.length));&lt;/p&gt;

&lt;p&gt;     ius.addAll(collector.toCollection());&lt;/p&gt;

&lt;p&gt;  }&lt;/p&gt;

&lt;p&gt;} catch (ProvisionException e) {&lt;/p&gt;

&lt;p&gt;    throw new InterruptedException(&amp;ldquo;Failed to get IMetadataRepository.&amp;rdquo;);&lt;/p&gt;

&lt;p&gt;}&lt;br /&gt;
     -同时这里也查找出IMetaRepository中没安装过的IUs。这就需要同当前安装的profile中已经安装过的内容来比较，&lt;/p&gt;

&lt;p&gt;    Collector collector = metaRepo.query(new AccpetQuery(), new LatestNoninstalledIUCollector(currentProfile), progress.newChild(50/uris.length));&lt;/p&gt;

&lt;p&gt;     这里需要指出的是，IMetadataRepository实现了IQueryable接口。IQueryable是p2引入的查找接口，返回满足特殊查询条件的集合，同时传入了一个IProgressMonitor对象，可以反应查找进度。这里的AcceptQuery，LatestNoninstalledIUCollector是自定义的Query和Collector对象。p2已经实现了许多有用的Query，经常用到的有InstallableUnitQuery，IUPropertyQuery，RangeQuery。&lt;/p&gt;

&lt;p&gt;    -接下来生成IEngine所需的ProvisionPlan。首先创建ProfileChangeRequest对象，将先前查找出的要安装的IUs添加进去。&lt;/p&gt;

&lt;p&gt;     request.addInstallableUnits(ius);&lt;/p&gt;

&lt;p&gt;     删除的话则与之相反。更新的话也需要通过ProfileChangeRequest.removeInstallableUnits()去掉旧版本的IUs。&lt;/p&gt;

&lt;p&gt;     调用IPlanner service的getProvisioningPlan(ProfileChangeRequest, ProvisioningContext, IProgressMonitor)得到对应于当前request的plan。&lt;/p&gt;

&lt;p&gt;    -最后就是调用IEngine.perform(IProfile, PhaseSet, Operand[], ProvisioningContext, IProgressMonitor)来执行provisioning操作。这里的PhaseSet是用来指定Engine将要执行的几个阶段，以及每个阶段的执行时间权重。这些阶段包括了Collect, Unconfigure, Uninstall, Property, CheckTrust, Install, Configure. 如果熟悉Eclipse之前的Installer Handler，对Unconfigure/Uninstall/Install/Configure应该都很熟悉。 在p2里，更是将Collect, CheckTrust这些过程也暴露了出来。下面是p2里默认PhaseSet的实现，&lt;/p&gt;

&lt;p&gt;        public DefaultPhaseSet() {&lt;/p&gt;

&lt;p&gt;            this(new Phase[] {new Collect(100), new Unconfigure(10, forcedUninstall), new Uninstall(50, forcedUninstall), new Property(1), new CheckTrust(10), new Install(50), new Configure(10)});&lt;/p&gt;

&lt;p&gt;        }&lt;/p&gt;

&lt;p&gt;     Operand[]通过ProvisionPlan.getOperands()获得。&lt;/p&gt;

&lt;h3 id=&#34;p2-install-practice&#34;&gt;p2 install practice&lt;/h3&gt;

&lt;p&gt;先制作一个可安装的repository，这里的方法是基于Eclipse提供的模版创建一个RCP程序，比如mail template,&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.google.com/File?id=ddqccrw2_871xs75p2fh_b&#34;&gt;&lt;img src=&#34;http://docs.google.com/File?id=ddqccrw2_871xs75p2fh_b&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.google.com/File?id=ddqccrw2_872fzbmznfm_b&#34;&gt;&lt;img src=&#34;http://docs.google.com/File?id=ddqccrw2_872fzbmznfm_b&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;然后创建一个feature包含刚才创建出来的plug-in &amp;lsquo;com.example.mail&amp;rsquo;。&lt;/p&gt;

&lt;p&gt;基于存在的‘com.example.mail.product’创建product configuration，将其设置为base on features, 同时在dependencies页面添加以下feature。feature的qaulifier id依赖于用到的Eclipsse版本，从下图看到我这里使用的是Eclipse 3.5.1。如果要让RCP程序具有安装插件的能力（包含p2和p2 UI），就需要依赖更多的feature。后面的example里面会实现这部分功能。另外注意：&lt;a href=&#34;https://bugs.eclipse.org/bugs/show_bug.cgi?id=291872&#34; title=&#34;ID不能包括空格字符&#34;&gt;ID不能包括空格字符&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.google.com/File?id=ddqccrw2_873fx44c3ff_b&#34;&gt;&lt;img src=&#34;http://docs.google.com/File?id=ddqccrw2_873fx44c3ff_b&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;接下来使用Eclipse Product Export Wizard生成repository。记得要勾选上generate metadata repository。&lt;/p&gt;

&lt;p&gt;[](&lt;a href=&#34;http://docs.google.com/File?id=ddqccrw2_874qnh7n3gc_b&#34;&gt;http://docs.google.com/File?id=ddqccrw2_874qnh7n3gc_b&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.google.com/File?id=ddqccrw2_875gfs4p3d2_b&#34;&gt;&lt;img src=&#34;http://docs.google.com/File?id=ddqccrw2_875gfs4p3d2_b&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;在成功创建了Mail Application的repository后，试用我们自己的p2 installer来安装这个应用程序。安装过程类似下面的截图。然后执行/folk/kzhu0/tmp/mailrcp/mail来运行Mail Application.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.google.com/File?id=ddqccrw2_877cm6fxcc6_b&#34;&gt;&lt;img src=&#34;http://docs.google.com/File?id=ddqccrw2_877cm6fxcc6_b&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.google.com/File?id=ddqccrw2_878dg9g8kf4_b&#34;&gt;&lt;img src=&#34;http://docs.google.com/File?id=ddqccrw2_878dg9g8kf4_b&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;p2-repository-publish&#34;&gt;p2 repository publish&lt;/h3&gt;

&lt;p&gt;这一节将会展示如何发布/产生基于p2的repository。在p2最早的版本Eclipse 3.4中将生成repository这个程序称为generator，而3.5对此重构后命名为publisher。重构后的publish过程简单明了。首先需要创建一个IPublishInfo对象，它负责提供将要生成的repository的情况。包括了meta repository, artifact repository的信息，属性，以及提供辅助信息的advice对象。IPublisherAdvice可以看作类似创建RCP窗口时候的WorkbenchAdvice和WorkbenchWindowAdvice等辅助类。它用来提供需要记录在repository中的IU特殊信息。比如IU的属性，touchpoint的类型及各个阶段执行的action，对可执行文件或配置文件IU的处理。&lt;br /&gt;
此外还需要创建IPublisherAction来处理不同类型的IU发布过程。例如BundlesAction来实现发布bundles到repository，FeaturesAction则是处理feature。此外p2已提供的IPublisherAction还包括product action, config action, launcher action和jre action等等[2]。&lt;br /&gt;
有了描述repository情况的publishinfo和发布各种IUs的action后，调用Publisher.publish方法完成repository的发布。&lt;br /&gt;
        IPublisherInfo info = createPublisherInfo();&lt;br /&gt;
        IPublisherAction[] actions = createActions();&lt;br /&gt;
        Publisher publisher = new Publisher(info);&lt;br /&gt;
        publisher.publish(actions, new NullProgressMonitor());&lt;br /&gt;
这里有一点需要注意，publish只是把将要用于部署的features/plugins/binary发布到repository，并不负责编译打包它们。先前我们使用过Eclipse Export功能既编译打包features/plugins同时又生成repository。Export实现的过程首先是调用PDE来编译打包features/plugins，再调用对应的publisher应用程序将编译后的features/plugins/product发布为repository。&lt;/p&gt;

&lt;h3 id=&#34;customized-p2-touchpoint&#34;&gt;customized p2 touchpoint&lt;/h3&gt;

&lt;p&gt;前面一节已经提过IPublishInfo通过额外的IPublisherAdvise来定制发布到repository的IU信息。这里介绍为自己的IU定制新的touchpoint类型，并且要求在配置阶段在操作系统桌面创建应用程序的启动快捷方式。首先为我们的PublisherInfo添加处理touchpoint data的advice，NativeLauncherTouchPoint实现了ITouchpointAdvice接口，publisher在发布的时候当处理到touchpoint data部分，会查找实现了ITouchpointAdvice接口的advice。如果有advice可用，将会让这些advice处理现有的touchpoint data，并且得到新的touchpoint data，并把结果保存到metadata repository当中。&lt;/p&gt;

&lt;p&gt;        PublisherInfo result = new PublisherInfo();&lt;br /&gt;
        result.addAdvice(new NativeLauncherTouchPoint());&lt;/p&gt;

&lt;p&gt;NativeLauncherTouchPoint将指定为特定的IU在configure阶段执行createDesktop操作，以及相反的操作，unconfigure阶段执行deleteDesktop操作。&lt;/p&gt;

&lt;p&gt;更改touchpoint type的方法如下。当然也可以为现有的touchpoint type扩展action。内置的touchpoint类型和action的具体命令用法，请参考p2 wiki[3]。&lt;br /&gt;
iu.setTouchpointType(DesktopTouchpoint.TOUCHPOINT_TYPE);&lt;br /&gt;
touchpoint类型和action都是通过extension point来扩展的。通过扩展“org.eclipse.equinox.p2.engine.touchpoints”来添加新的touchpoint类型，扩展”org.eclipse.equinox.p2.engine.actions“将新的action同某个类型关联起来。&lt;/p&gt;

&lt;h3 id=&#34;p2-repository-publish-practice&#34;&gt;p2 repository publish practice&lt;/h3&gt;

&lt;p&gt;我们创建plug-in &amp;lsquo;com.example.p2.touchpoint&amp;rsquo;来实现桌面快捷方式的扩展，并且创建&amp;rsquo;com.example.p2.feature&amp;rsquo;包含touchpoint实现的plug-in。具体实现请参考p2 example源码。&lt;br /&gt;
然后为Mail Application添加p2相关feature的依赖，重新发布得到支持安装软件的新版本。并且用p2 example installer安装它。p.s: 个人感觉Eclipse在包含第三方plug-in时，层次有些问题。p2作为一个runtime的project（跟equinox, ECF同级），居然需要直接或间接依赖help, rcp.platform这样的上层模块。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.google.com/File?id=ddqccrw2_879cjg6wrgg_b&#34;&gt;&lt;img src=&#34;http://docs.google.com/File?id=ddqccrw2_879cjg6wrgg_b&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;接下来创建plug-in &amp;lsquo;com.example.mail.desktop&amp;rsquo; 和 feature &amp;lsquo;com.example.mail.desktop.feature&amp;rsquo;，作为提供桌面快捷方式的IU。用Eclipse Export Feature将&amp;rsquo;com.example.mail.desktop.feature&amp;rsquo;导出，实际就是用PDE替我们编译打包:)。&lt;br /&gt;
运行‘com.example.p2.generator&amp;rsquo;提供的headless publisher来生成我们定制的repository。’/folk/kzhu0/tmp/mail/desktop-deploy&amp;rsquo;是先前desktop feature导出后的路径，而&amp;rsquo;/folk/kzhu0/tmp/mail/desktop&amp;rsquo;是生成repository的路径。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.google.com/File?id=ddqccrw2_880tk4fk8wd_b&#34;&gt;&lt;img src=&#34;http://docs.google.com/File?id=ddqccrw2_880tk4fk8wd_b&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;运行新版本的Mail Application，在Help菜单下面会多出Install New Software选项。将自定义publisher生成的Desktop feature repository添加为新的软件源，安装Mail Desktop Feature。安装完成后，将在桌面找到Mail Application的快捷方式。在Installation Detail里面将会出现这次安装的内容。选中Desktop Feature后选择卸载，桌面的快捷方式文件将会被删除掉。当然也可以使用p2 example installer来为Mail Application安装desktop feature。p.s: example代码里只实现了创建linux/unix桌面快捷方式。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://docs.google.com/File?id=ddqccrw2_8814qg7wvhs_b&#34;&gt;&lt;img src=&#34;http://docs.google.com/File?id=ddqccrw2_8814qg7wvhs_b&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;example-code&#34;&gt;Example Code&lt;/h3&gt;

&lt;p&gt;Example Code应该只能编译运行在Eclipse 3.5.x。Example Code使用的都是p2 internal API, 而p2 public API将会随Eclipse 3.6首次发布。这些类和方法基本都会保留，但命名，包一定会有重构。&lt;br /&gt;
&lt;a href=&#34;http://code.google.com/p/kane-toolkit/source/browse/#svn/trunk/p2-example&#34;&gt;http://code.google.com/p/kane-toolkit/source/browse/#svn/trunk/p2-example&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;reference&#34;&gt;Reference&lt;/h3&gt;

&lt;p&gt;[1] &lt;a href=&#34;http://wiki.eclipse.org/Equinox/p2/Concepts&#34;&gt;http://wiki.eclipse.org/Equinox/p2/Concepts&lt;/a&gt;&lt;br /&gt;
[2] &lt;a href=&#34;http://wiki.eclipse.org/Equinox/p2/Publisher&#34;&gt;http://wiki.eclipse.org/Equinox/p2/Publisher&lt;/a&gt;&lt;br /&gt;
[3] &lt;a href=&#34;http://wiki.eclipse.org/Equinox/p2/Engine/Touchpoint_Instructions&#34;&gt;http://wiki.eclipse.org/Equinox/p2/Engine/Touchpoint_Instructions&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[tip]ssh forward</title>
      <link>https://kane.mx/posts/archive/blogspot/ssh-forward/</link>
      <pubDate>Wed, 28 Oct 2009 15:29:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/ssh-forward/</guid>
      <description>&lt;p&gt;ssh -qTfnN -D LocalPort remotehost&lt;/p&gt;

&lt;p&gt;All the added options are for a ssh session that&amp;rsquo;s used for tunneling.&lt;/p&gt;

&lt;p&gt;-q :- be very quite, we are acting only as a tunnel.&lt;br /&gt;
-T :- Do not allocate a pseudo tty, we are only acting a tunnel.&lt;br /&gt;
-f :- move the ssh process to background, as we don&amp;rsquo;t want to interact with this ssh session directly.&lt;br /&gt;
-N :- Do not execute remote command.&lt;br /&gt;
-n :- redirect standard input to /dev/null.&lt;/p&gt;

&lt;p&gt;In addition on a slow line you can gain performance by enabling compression with the -C option.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Simulate p2 self host in Eclipse run</title>
      <link>https://kane.mx/posts/archive/blogspot/simulate-p2-self-host-in-eclipse-run/</link>
      <pubDate>Tue, 27 Oct 2009 16:12:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/simulate-p2-self-host-in-eclipse-run/</guid>
      <description>&lt;p&gt;-Dosgi.install.area=&lt;launcher&#39;s folder&gt;&lt;br /&gt;
-Declipse.p2.profile=&lt;profile id&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Eclipse/OSGi preference</title>
      <link>https://kane.mx/posts/archive/blogspot/eclipseosgi-preference/</link>
      <pubDate>Thu, 22 Oct 2009 15:29:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/eclipseosgi-preference/</guid>
      <description>&lt;p&gt;The IPreferenceStore API of Eclipse is based on OSGi&amp;rsquo;s preferences service. Equinox implements several scope context for different preferences, such DefaultScope, InstanceScope and ConfigurationScope. The IPreferenceStore is the wrapper of instance scope for back-compatibility. It stored the data in workspace(osgi.data.area).&lt;/p&gt;

&lt;p&gt;The workspace folder would be created when launching RCP application if it doesn&amp;rsquo;t exist. But we can use argument &amp;lsquo;-data @none&amp;rsquo; to suppress the creation of workspace. If that, the instance scope/IPreferenceStore can&amp;rsquo;t store any value any more.&lt;/p&gt;

&lt;p&gt;There is a workaround to resolve such issue. Use ConfigurationScope instead of InstanceScope. Both of them are implemented the same interface, so it&amp;rsquo;s easy to migrate to use ConfigurationScope. The data of configuration scope would be stored in @config.dir/.setting folder.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The usage of Eclipse&#39;s Proxy API</title>
      <link>https://kane.mx/posts/archive/blogspot/usage-of-eclipses-proxy-api/</link>
      <pubDate>Wed, 21 Oct 2009 16:53:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/usage-of-eclipses-proxy-api/</guid>
      <description>&lt;p&gt;Eclipse platform register an OSGi service &amp;lsquo;IProxyService&amp;rsquo; to manage network connection, which has capability to set proxy setting. There are three types of proxy working mode,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Direct(no proxy),&lt;/li&gt;
&lt;li&gt;Manual(specified by user),&lt;/li&gt;
&lt;li&gt;Native(using OS&amp;rsquo;s proxy setting, such as gnome-proxy, IE).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are three types of proxy supported by IProxyService. They&amp;rsquo;re http, https and socks.&lt;/p&gt;

&lt;p&gt;It also allows to add/remove ip address from white list, which are accessed without connecting proxy.&lt;/p&gt;

&lt;p&gt;End users can manage the proxy setting of Eclipse via Preference - General - Network Connections. Eclipse would do persistence of user&amp;rsquo;s setting. Other components of Eclipse also use those proxy settings to access network, such as ECF.&lt;/p&gt;

&lt;p&gt;Below code snippet shows how to use proxy API to manually specify proxy server,&lt;/p&gt;

&lt;p&gt;proxyService.setProxiesEnabled(true);&lt;br /&gt;
    proxyService.setSystemProxiesEnabled(false);&lt;br /&gt;
    IProxyData[] datas = proxyService.getProxyData();&lt;br /&gt;
    IProxyData proxyData = null;&lt;br /&gt;
    for(IProxyData data : datas) {&lt;br /&gt;
        // clean old data&lt;br /&gt;
        ((ProxyData)data).setSource(&amp;ldquo;Manual&amp;rdquo;); //$NON-NLS-1$&lt;br /&gt;
        data.setUserid(null); //$NON-NLS-1$&lt;br /&gt;
        data.setPassword(null); //$NON-NLS-1$&lt;br /&gt;
        if(proxyType == SOCKSPROXY &amp;amp;&amp;amp; IProxyData.SOCKS_PROXY_TYPE.equals(data.getType())) {&lt;br /&gt;
           proxyData = data;&lt;br /&gt;
           continue;&lt;br /&gt;
        }else if(proxyType == WEBPROXY &amp;amp;&amp;amp; IProxyData.HTTP_PROXY_TYPE.equals(data.getType())){&lt;br /&gt;
           proxyData = data;&lt;br /&gt;
           continue;&lt;br /&gt;
        }&lt;br /&gt;
        data.setHost(null); //$NON-NLS-1$&lt;br /&gt;
        data.setPort(0);&lt;br /&gt;
      }&lt;br /&gt;
      if(proxyData != null){&lt;br /&gt;
          proxyData.setHost(proxyServer);&lt;br /&gt;
          proxyData.setPort(proxyPort);&lt;br /&gt;
      }&lt;br /&gt;
      try {&lt;br /&gt;
         proxyService.setProxyData(datas);&lt;br /&gt;
      } catch (CoreException e) {&lt;br /&gt;
         proxyService.setProxiesEnabled(false);&lt;br /&gt;
         proxyService.setSystemProxiesEnabled(false);&lt;br /&gt;
         return false;&lt;br /&gt;
 }&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://help.eclipse.org/galileo/index.jsp?topic=/org.eclipse.platform.doc.isv/reference/api/org/eclipse/core/net/proxy/IProxyService.html&#34;&gt;Official API Reference&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[tip]Turn off automatically scanning disk when reboot</title>
      <link>https://kane.mx/posts/archive/blogspot/turnoff-automatically-scanning-disk/</link>
      <pubDate>Wed, 11 Feb 2009 17:40:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/turnoff-automatically-scanning-disk/</guid>
      <description>&lt;p&gt;tune2fs -i 0 -c 0 /dev/sdx&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to set default input method for GNOME</title>
      <link>https://kane.mx/posts/archive/blogspot/how-to-set-default-input-method-for/</link>
      <pubDate>Mon, 09 Feb 2009 11:24:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/how-to-set-default-input-method-for/</guid>
      <description>&lt;p&gt;add below lines in ~/.gnomerc&lt;/p&gt;

&lt;p&gt;export XMODIFIERS=&amp;ldquo;@im=fcitx&amp;rdquo;&lt;br /&gt;
export GTK_IM_MODULE=&amp;ldquo;xim&amp;rdquo;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[HowTo]How to set up jre environment in firefox</title>
      <link>https://kane.mx/posts/archive/blogspot/how-to-set-up-jre-environment-in/</link>
      <pubDate>Mon, 29 Dec 2008 12:52:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/how-to-set-up-jre-environment-in/</guid>
      <description>&lt;p&gt;create symbol link under lib/plugins of firefox to link jre/plugins/i386/ns**/libjavaplugin_oji.so&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[Debug][tip]How to ignore specified signal when debugging program via gdb</title>
      <link>https://kane.mx/posts/archive/blogspot/how-to-ignore-specified-signal-when/</link>
      <pubDate>Wed, 10 Dec 2008 15:02:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/how-to-ignore-specified-signal-when/</guid>
      <description>&lt;p&gt;Such as,&lt;br /&gt;
(gdb) handle SIGPIPE nostop noprint pass&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[HowTo][tip]How to adjust the font size of Notes editor</title>
      <link>https://kane.mx/posts/archive/blogspot/how-to-adjust-font-size-of-notes-editor/</link>
      <pubDate>Thu, 04 Dec 2008 13:11:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/how-to-adjust-font-size-of-notes-editor/</guid>
      <description>&lt;p&gt;Close Notes&lt;br /&gt;
Double click c:\notes\notes.ini to open it.&lt;br /&gt;
Add one new line &amp;ldquo;Display_font_adjustment=n&amp;rdquo; after the third line in notes.ini file. &amp;ldquo;n&amp;rdquo; is the number.It can be 1or 2 or 3&amp;hellip;.and the font will be larger with the number increasing.&lt;br /&gt;
Launch note&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[OSGi][Eclipse]Add custom jar or path into Equinox Framework</title>
      <link>https://kane.mx/posts/archive/blogspot/add-custom-jar-or-path-into-equinox/</link>
      <pubDate>Sun, 28 Sep 2008 13:23:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/add-custom-jar-or-path-into-equinox/</guid>
      <description>&lt;p&gt;Set vm arguments &amp;lsquo;osgi.framework.extensions&amp;rsquo; and &amp;lsquo;osgi.frameworkClassPath&amp;rsquo; when vm starts. If those value are set, those jar or path would be added into the classloader when starting EclipseStarter.&lt;/p&gt;

&lt;p&gt;See org.eclipse.equinox.launcher.Main for more details in the source code of Eclipse 3.4.&lt;br /&gt;
Best Regards&lt;br /&gt;
Kane&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[OSGi]How to acquire the fragments of specified bundle</title>
      <link>https://kane.mx/posts/archive/blogspot/osgihow-to-acquire-fragments-of/</link>
      <pubDate>Fri, 01 Aug 2008 16:22:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/osgihow-to-acquire-fragments-of/</guid>
      <description>&lt;p&gt;The answer is very simple, using the service &amp;lsquo;org.eclipse.service.PackageAdmin&amp;rsquo;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[Eclipse]Equinox&#39;s classloader and its URL schema</title>
      <link>https://kane.mx/posts/archive/blogspot/eclipseequinoxs-classloader-and-its-url/</link>
      <pubDate>Thu, 17 Jul 2008 17:42:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/eclipseequinoxs-classloader-and-its-url/</guid>
      <description>&lt;p&gt;Equinox uses the adaptor hooks to implement the class loader.&lt;br /&gt;
See &lt;a href=&#34;http://wiki.eclipse.org/Adaptor_Hooks&#34;&gt;http://wiki.eclipse.org/Adaptor_Hooks&lt;/a&gt; for more detail&lt;/p&gt;

&lt;p&gt;BaseClassLoadingHook would search the native code on itself. If it find the file in that jar file, it would extract the native library into its storage folder.&lt;/p&gt;

&lt;p&gt;EclipseClassLoadingHook defines some variables to search the native library. Belows are built-in variables:&lt;/p&gt;

&lt;p&gt;result.add(&amp;ldquo;ws/&amp;rdquo; + info.getWS() + &amp;ldquo;/&amp;rdquo;); //$NON-NLS-1$ //$NON-NLS-2$&lt;br /&gt;
result.add(&amp;ldquo;os/&amp;rdquo; + info.getOS() + &amp;ldquo;/&amp;rdquo; + info.getOSArch() + &amp;ldquo;/&amp;rdquo;); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$&lt;br /&gt;
result.add(&amp;ldquo;os/&amp;rdquo; + info.getOS() + &amp;ldquo;/&amp;rdquo;); //$NON-NLS-1$ //$NON-NLS-2$&lt;/p&gt;

&lt;p&gt;So the classloader can find your native library that under those path. If your bundle is jar file, equinox would extract your native library into its storage folder.&lt;/p&gt;

&lt;p&gt;I prefer to use OSGi header(Bundle-NativeCode) defining the path of native code, which still works on other OSGi implementations.&lt;/p&gt;

&lt;p&gt;Equinox defines its url schema, one of them is named as &amp;lsquo;BundleURLConnection&amp;rsquo;. From its name, we know it&amp;rsquo;s used for describing the files of bundle. You can obtain the url of file that is located on bundle by Bundle.getResource()/Bundle.getEntry()/Bundle.findEntries()/Bundle.getResources(). The return value of those functions are an object of BundleURLConnection. Once it&amp;rsquo;s used as the argument of FileLocator.toFileURL(URL), the jar bundle would be unpacked into its storage folder recursively.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[tip][vim]排版小技巧</title>
      <link>https://kane.mx/posts/archive/blogspot/tipvim/</link>
      <pubDate>Tue, 15 Jul 2008 11:00:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/tipvim/</guid>
      <description>&lt;p&gt;    1. 将要排版的文字贴到vim了&lt;br /&gt;
    2.  set textwidth=70&lt;br /&gt;
    3. visual模式下选择要排版的文字,按gq, 就变成70字母1行的格式了&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[tip]convert dos format to unix</title>
      <link>https://kane.mx/posts/archive/blogspot/tipconvert-dos-format-to-unix/</link>
      <pubDate>Fri, 23 May 2008 18:03:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/tipconvert-dos-format-to-unix/</guid>
      <description>&lt;p&gt;In vi/vim,&lt;/p&gt;

&lt;p&gt;﻿set file format=unix&lt;/p&gt;

&lt;p&gt;or dos2unix, unix2dos&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[tip]Makefile</title>
      <link>https://kane.mx/posts/archive/blogspot/makefile-tip/</link>
      <pubDate>Thu, 22 May 2008 20:37:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/makefile-tip/</guid>
      <description>&lt;p&gt;Build c/c++ project always need third party library on linux, such as gtk+, glib. Writing their absolute path in Makefile is not flexible way. You can use pkg-config instead of the absolute path. Below is code snippet:&lt;/p&gt;

&lt;p&gt;GTK_LIB=$(shell pkg-config &amp;ndash;libs gtk+-2.0)&lt;br /&gt;
GTK_INC=$(shell pkg-config &amp;ndash;cflags gtk+-2.0)&lt;/p&gt;

&lt;p&gt;gcc -o yourlibrary.so $(GTK_INC) $(GTK_LIB)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[OSGi][Equinox]URL Handlers Service</title>
      <link>https://kane.mx/posts/archive/blogspot/url-handlers-service/</link>
      <pubDate>Wed, 16 Apr 2008 14:20:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/url-handlers-service/</guid>
      <description>&lt;p&gt;OSGi provides a mechanism to let user contribute custom schemes automatically. It avoid some restriction with Java facilities for extending the handlers. The more detail could be found from OSGi specification R4, which has description how OSGi implements URL Handler Service.&lt;/p&gt;

&lt;p&gt;Use a sample to illustrate how to contribute your scheme(protocol):&lt;/p&gt;

&lt;p&gt;1. register your URLStreamHandlerService implementation, which must contain a property named &amp;ldquo;url.handler.protocol&amp;rdquo;. below register my scheme &amp;lsquo;smb&amp;rsquo;&lt;br /&gt;
public void start(BundleContext context) throws Exception {&lt;br /&gt;
Hashtable properties = new Hashtable();&lt;br /&gt;
properties.put( URLConstants.URL_HANDLER_PROTOCOL, new String[] { &amp;ldquo;smb&amp;rdquo; } );&lt;br /&gt;
context.registerService(URLStreamHandlerService.class.getName(), new SmbURLHandler(), properties );&lt;br /&gt;
}&lt;br /&gt;
2. your URL Handler extends AbstractURLStreamHandlerService, and implements abstract function &amp;lsquo;openConnection(URL)&amp;rsquo;&lt;br /&gt;
public class SmbURLHandler extends AbstractURLStreamHandlerService {&lt;/p&gt;

&lt;p&gt;public URLConnection openConnection(URL url) throws IOException {&lt;br /&gt;
return new SmbURLConnection(url);&lt;br /&gt;
}&lt;/p&gt;

&lt;p&gt;}&lt;br /&gt;
3. your URL Connection extends java.net.URLConnection&lt;br /&gt;
public class SmbURLConnection extends URLConnection {&lt;/p&gt;

&lt;p&gt;protected SmbURLConnection(URL url) {&lt;br /&gt;
super(url);&lt;br /&gt;
}&lt;/p&gt;

&lt;p&gt;public void connect() throws IOException {&lt;br /&gt;
}&lt;br /&gt;
}&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[OSGi][Equinox]the Bundle-NativeCode implementation in Equinox</title>
      <link>https://kane.mx/posts/archive/blogspot/bundle-nativecode-implementation-in/</link>
      <pubDate>Mon, 31 Mar 2008 17:36:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/bundle-nativecode-implementation-in/</guid>
      <description>&lt;p&gt;OSGi Spec defines Bundle-NativeCode header to contain a specification of native code libraries contained in that bundle. All magic things are initialized by org.eclipse.osgi.internal.baseadaptor.DefaultClassLoader.findLibrary(String) and org.eclipse.osgi.framework.internal.core.BundleLoader.findLibrary(String). Then BundleLoader uses the org.eclipse.osgi.baseadaptor.BaseData(an implementation of BundleData) to find the library path, if the bundle is NOT a jar file, it would directly get the absolute path of library. Otherwise, the BaseData would extract the library file if it could NOT find it in OSGi bundle storage(located in ${data}/org.eclipse.osgi/bundles/[bundle_id]/.cp/). Refer to org.eclipse.osgi.baseadaptor.BaseData.findLibrary(String) for more detail.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[shell]Learning Note - 3/19/08</title>
      <link>https://kane.mx/posts/archive/blogspot/linux-shelllearning-note-31908/</link>
      <pubDate>Wed, 19 Mar 2008 14:35:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/linux-shelllearning-note-31908/</guid>
      <description>&lt;p&gt;1&amp;gt; 是输出正确数据， 2&amp;gt; 则是错误数据输出项目, 若要同时写入同一个档案需要使用 2&amp;gt;&amp;amp;1 /dev/null 是什么呢？基本上，那就有点像是一个『黑洞』的垃圾桶功能！当你输入的任何东西导向到这个虚拟的垃圾桶装置时，『他就会凭空消失不见了～～』&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[Eclipse]How to use qualifier string when exporting features and plug-ins</title>
      <link>https://kane.mx/posts/archive/blogspot/how-to-use-qualifier-string-when/</link>
      <pubDate>Tue, 11 Mar 2008 13:30:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/how-to-use-qualifier-string-when/</guid>
      <description>&lt;p&gt;You must see the qualifier string property when exporting your features and plug-ins by Eclipse pde. But specified qualifier string won&amp;rsquo;t appear after you export the features successfully.&lt;/p&gt;

&lt;p&gt;If you want to use the qualifier string, you must define your feature and plug-in version like below:&lt;br /&gt;
1.0.0.qualifier, 2.2.2.qaulifier&lt;/p&gt;

&lt;p&gt;:)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>万恶的注册表</title>
      <link>https://kane.mx/posts/archive/blogspot/suck-windows-registry/</link>
      <pubDate>Tue, 03 Apr 2007 13:16:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/suck-windows-registry/</guid>
      <description>&lt;p&gt;最近几天被一个注册表相关的defect搞的焦头烂额。&lt;/p&gt;

&lt;p&gt;背景是这样的，产品在安装的时候需要通过修改注册表注册文件关联等信息。在先前安装程序基于InstallShield时工作正确，但在最近安装程序改用MSI后，我们写入注册表的信息没有被写到所期望的位置。&lt;/p&gt;

&lt;p&gt;通过各种试验，查找资料，终于搞明白原因。我们修改注册表的进程不是当前用户进程，而是系统进程，因此写入到HKEY_CURRENT_USER下的数据不能被写入到当前登陆用户下。&lt;/p&gt;

&lt;p&gt;We should not use &amp;ldquo;&lt;strong&gt;HKEY_CURRENT_USER&amp;rdquo;&lt;/strong&gt; to retrival current user&amp;rsquo;s registry key value. Because Windows Services always startup before user login. It may happen some error or loading the wrong setting profile. If you still insist on using the current user registry key setting, please refer &amp;ldquo;&lt;em&gt;&lt;a href=&#34;http://msdn.microsoft.com/library/default.asp?url=/library/en-us/sysinfo/base/regopencurrentuser.asp&#34;&gt;RegOpenCurrentUser&lt;/a&gt;&lt;/em&gt;&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;最后只好将这些数据写到了Local Machine键值下。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[Eclipse]get rid of the menus of eclipse platform</title>
      <link>https://kane.mx/posts/archive/blogspot/get-rid-of-menus-of-eclipse-platform/</link>
      <pubDate>Fri, 09 Mar 2007 13:46:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/get-rid-of-menus-of-eclipse-platform/</guid>
      <description>&lt;p&gt;When you develop a rich client application base on eclipse framework, and your application require eclipse platform feature, you would find that your application has some menu items contributed by eclipse platform. Those menu items are defined by several plug-ins&amp;rsquo; implementation of actionSet extention point. In fact Eclipse provides an activity mechanism to suppress the extension points which you don&amp;rsquo;t want to use. However, you must know the identification name of extension points which you want to suppress. It&amp;rsquo;s a hard work to find out all of them from dozens of plugins. so, I wrote a utility function to list all the extension points of specified name.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    IExtensionRegistry registry = Platform.getExtensionRegistry();  

  IExtensionPoint extensionPoint = registry.getExtensionPoint(&amp;quot;org.eclipse.ui.actionSets&amp;quot;);  

  IExtension\[\] extensions = extensionPoint.getExtensions();  

  for(int i = 0; i &amp;lt; extensions.length; i++){  

      IConfigurationElement elements\[\] = extensions\[i \].getConfigurationElements();  

      for(int j = 0; j &amp;lt; elements.length; j++){  

          String pluginId = elements\[j\].getNamespaceIdentifier();  

          if(pluginId.indexOf(&amp;quot;org.eclipse&amp;quot;) &amp;gt; -1){ //$NON-NLS-1$  

              IConfigurationElement\[\] subElements = elements\[j\].getChildren(&amp;quot;action&amp;quot;);                   

              for(int m = 0; m &amp;lt; subElements.length; m++){  

                  System.out.println(&amp;quot;Plugin: &amp;quot; + pluginId + &amp;quot;  Id: &amp;quot; +  

                          subElements\[m\].getAttribute(&amp;quot;id&amp;quot;));  

              }  

          }  

      }  

  }  
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and the follow snippet is about the activities of menus of eclipse platform:&lt;/p&gt;

&lt;p&gt;&lt;extension point=&#34;org.eclipse.ui.activities&#34;&gt;&lt;br /&gt;
    &lt;activity id=&#34;activity.platform&#34; name=&#34;hidePlatformMenus&#34;/&gt;&lt;br /&gt;
   &lt;activityPatternBinding activityId=&#34;activity.platform&#34; pattern=&#34;org\\.eclipse\\.platform/org\\.eclipse\\.ui\\.cheatsheets\\.actions\\.CheatSheetHelpMenuAction&#34;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;activity id=&#34;activity.search&#34; name=&#34;hideSearchMenus&#34;/&gt;&lt;br /&gt;
 &lt;activityPatternBinding activityId=&#34;activity.search&#34; pattern=&#34;org\\.eclipse\\.search/org\\.eclipse\\.search\\..*&#34;/&gt;&lt;br /&gt;
 &lt;activity  
      id=&#34;activity.ide&#34;  
      name=&#34;hideIDEMenus&#34;&gt;&lt;br /&gt;
&lt;/activity&gt;&lt;br /&gt;
&lt;activityPatternBinding  
      activityId=&#34;activity.ide&#34;  
      pattern=&#34;org\\.eclipse\\.ui\\.ide/org\\.eclipse\\.ui\\.actions\\.showKeyAssistHandler&#34;&gt;&lt;br /&gt;
 &lt;/activityPatternBinding&gt;&lt;br /&gt;
&lt;activityPatternBinding  
      activityId=&#34;activity.ide&#34;  
      pattern=&#34;org\\.eclipse\\.ui\\.ide/org\\.eclipse\\.update\\.ui\\..*&#34;&gt;&lt;br /&gt;
&lt;/activityPatternBinding&gt;&lt;br /&gt;
 &lt;activity  
      id=&#34;activity.editor&#34;  
      name=&#34;hideEditorMenus&#34;&gt;&lt;br /&gt;
&lt;/activity&gt;&lt;br /&gt;
&lt;activityPatternBinding  
      activityId=&#34;activity.editor&#34;  
      pattern=&#34;org\\.eclipse\\.ui\\.editors/org\\.eclipse\\.ui\\.edit\\.text\\.openExternalFile&#34;&gt;&lt;br /&gt;
 &lt;/activityPatternBinding&gt;&lt;br /&gt;
&lt;activityPatternBinding  
      activityId=&#34;activity.editor&#34;  
      pattern=&#34;org\\.eclipse\\.ui\\.editors/org\\.eclipse\\.ui\\.edit\\.text\\.delimiter\\..*&#34;&gt;&lt;br /&gt;
 &lt;/activityPatternBinding&gt;&lt;br /&gt;
&lt;activity  
      id=&#34;activity.externaltool&#34;  
      name=&#34;hideExternaltoolMenus&#34;&gt;&lt;br /&gt;
&lt;/activity&gt;&lt;br /&gt;
&lt;activityPatternBinding  
      activityId=&#34;activity.externaltool&#34;  
       pattern=&#34;org\\.eclipse\\.ui\\.externaltools/org\\.eclipse\\.ui\\.externaltools\\.ExternalToolMenuDelegateMenu&#34;&gt;&lt;br /&gt;
&lt;/activityPatternBinding&gt;&lt;br /&gt;
&lt;/extension&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>加载jar文件里的本地库</title>
      <link>https://kane.mx/posts/archive/blogspot/jar/</link>
      <pubDate>Wed, 24 Jan 2007 14:19:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/jar/</guid>
      <description>&lt;p&gt;java程序开发中经常用到JNI调用本地library, 同时又希望将library同class文件编译成一个jar文件以方便deploy.&lt;/p&gt;

&lt;p&gt;但是JDK的classloader不支持从jar文件中加载library, 一个变通的方法就是jar里的library以临时文件的方式写到临时目录或java.library目录.&lt;/p&gt;

&lt;p&gt;附上两篇文档链接 :&lt;/p&gt;

&lt;p&gt;[](&lt;a href=&#34;http://www.javaworld.com.tw/jute/post/view?bid=29&amp;amp;id=173624&amp;amp;tpg=1&amp;amp;ppg=1&amp;amp;sty=1&amp;amp;age=0#173624)**[Load&#34;&gt;http://www.javaworld.com.tw/jute/post/view?bid=29&amp;amp;id=173624&amp;amp;tpg=1&amp;amp;ppg=1&amp;amp;sty=1&amp;amp;age=0#173624)**[Load&lt;/a&gt; Library inside a jar file](&lt;a href=&#34;http://www.javaworld.com.tw/jute/post/view?bid=29&amp;amp;id=173624&amp;amp;tpg=1&amp;amp;ppg=1&amp;amp;sty=1&amp;amp;age=0#173624&#34;&gt;http://www.javaworld.com.tw/jute/post/view?bid=29&amp;amp;id=173624&amp;amp;tpg=1&amp;amp;ppg=1&amp;amp;sty=1&amp;amp;age=0#173624&lt;/a&gt;)&lt;br /&gt;
**&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.javaeye.com/topic/17713&#34; title=&#34;固定链接：使用JNI时，装载本地库的小技巧&#34;&gt;使用JNI时，装载本地库的小技巧&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[Eclipse]Eclipse update support</title>
      <link>https://kane.mx/posts/archive/blogspot/eclipse-update-support/</link>
      <pubDate>Wed, 17 Jan 2007 13:51:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/eclipse-update-support/</guid>
      <description>&lt;p&gt;Those days my work is focus on eclipse&amp;rsquo;s update. Now I understand the general mechanism and meet some issues when using it in development work.&lt;/p&gt;

&lt;p&gt;The update mechanism includes four major types: install, enable, disable and uninstall. And all of those operations can be executed by command line, such as installing a feature can use following line:&lt;br /&gt;
-application org.eclipse.update.core.standaloneUpdate -command install -featureId my.feature -version 1.0.0 -from file:/v:/local_updateSite/ -to file:/v:/eclipse/.&lt;br /&gt;
The installation process would copy the feature and plugins which are included by the feature to the local site from the update site, then execute the feature&amp;rsquo;s global install handler if it has one.&lt;/p&gt;

&lt;p&gt;Some strange issue occurs when I want to disable a feature.Then I try to disable the feature with command,&lt;br /&gt;
-command disable -featureId my.feature -version 1.0.0 -to file:/v:/eclipse/&lt;br /&gt;
The output of command means that the command is executed successfully.&lt;br /&gt;
But I list the status of features with command line &amp;ldquo;-command listFeatures&amp;rdquo;, the status of my.feature is still enable.&lt;br /&gt;
Then I try to uninstall my.feature with command,&lt;br /&gt;
-command uninstall -featureId my.feature -version 1.0.0 -to file:/v:/eclipse/&lt;br /&gt;
It fails, and the following is the root cause found in log file.&lt;br /&gt;
!MESSAGE [Cannot find unconfigured feature my.feature with version 1.0.0]&lt;br /&gt;
unconfigured feature means the feature is disabled.&lt;/p&gt;

&lt;p&gt;I posted my question in forum, and one guy told me that it might be a bug of eclipse and advised me to fire a bug for it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[Eclipse]The call sequence between partActivated and menu update</title>
      <link>https://kane.mx/posts/archive/blogspot/call-sequence-between-partactivated-and/</link>
      <pubDate>Thu, 19 Oct 2006 12:42:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/call-sequence-between-partactivated-and/</guid>
      <description>&lt;p&gt;I met a defect that dynamically created menu items disappear after creating a new viewPart. It caused me overtime last Friday. Today I find the root cause.&lt;/p&gt;

&lt;p&gt;The scenario is:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;open first document, the items are shown well&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;open another document, the items disappear&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The requirement is that showing the menu items while current part is document, otherwise hide them.&lt;/p&gt;

&lt;p&gt;So our implementation is:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;when current document part is deactivated, set menu items invisible&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;when document part is activated, set menu items visible&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After debugging, I found that menu items was updated before the part activated listener was notified. Hence the menu is invisible while the parent menu is updated. The resolved solution is that setting menu items visible while part opened listener is notified.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>[debug][java]Remote debug in Eclipse</title>
      <link>https://kane.mx/posts/archive/blogspot/remote-debug-in-eclipse/</link>
      <pubDate>Wed, 18 Oct 2006 12:53:00 +0800</pubDate>
      
      <guid>https://kane.mx/posts/archive/blogspot/remote-debug-in-eclipse/</guid>
      <description>&lt;p&gt;I need use remote debug in our project, however just some experience in Weblogic were found from internet. After my investigation, I got some experience about using Eclipse remote debug RCP.&lt;br /&gt;
There are two important parameters for jvm. And we must launch remote java app with those two parameters.&lt;br /&gt;
-Xdebug //tells jvm starting with debug mode&lt;br /&gt;
-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=1044 //transport=dt_socket represents communication with socket, address=1044 represents that the port number is 1044&lt;br /&gt;
Then there are 3 steps in local env:&lt;br /&gt;
1.import source code into eclipse&amp;rsquo;s project&lt;br /&gt;
2.Debug-Remote Java Application, see attachement as a sample&lt;br /&gt;
3.insert breakpoint,&lt;/p&gt;

&lt;p&gt;update:&lt;br /&gt;
a simpler way:&lt;br /&gt;
-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=8000&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
