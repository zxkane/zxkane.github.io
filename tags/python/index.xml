<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on The road</title><link>https://kane.mx/tags/python/</link><description>Recent content in python on The road</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 16 Aug 2012 09:11:00 +0800</lastBuildDate><atom:link href="https://kane.mx/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Django's unicdoe encode error</title><link>https://kane.mx/posts/archive/blogspot/djangos-unicdoe-encode-error/</link><pubDate>Thu, 16 Aug 2012 09:11:00 +0800</pubDate><guid>https://kane.mx/posts/archive/blogspot/djangos-unicdoe-encode-error/</guid><description>
It's a common and ugly problem when using non-ascii characters in Django.
The general solution is below,
put # -- coding: utf-8 -- at beginning of every python source files that are using utf-8 characters declare every string variable as unicode, such as str_var = u'中文字符' add a __unicode__ method in your model classes if you are running server on apache/mod_wsgi or ngnix, you need configure web server to use utf-8 encoding
&lt;p>&lt;a href="https://kane.mx/posts/archive/blogspot/djangos-unicdoe-encode-error/">Read More&lt;/a>&lt;/p></description></item></channel></rss>