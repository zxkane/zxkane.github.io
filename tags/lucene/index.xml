<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lucene on The road</title><link>https://kane.mx/tags/lucene/</link><description>Recent content in Lucene on The road</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 11 May 2013 13:16:00 +0800</lastBuildDate><atom:link href="https://kane.mx/tags/lucene/index.xml" rel="self" type="application/rss+xml"/><item><title>Solr boost examples</title><link>https://kane.mx/posts/archive/blogspot/solr-boost-examples/</link><pubDate>Sat, 11 May 2013 13:16:00 +0800</pubDate><guid>https://kane.mx/posts/archive/blogspot/solr-boost-examples/</guid><description>
&lt;p>The index has a field named 'create_time' that is the timestamp of document created time. The query string can boost the latest created document like below,&lt;/p>
&lt;p>{!boost b=recip(ms(NOW,create_time),3.16e-11,0.08,0.05)}name:keyword&lt;/p>
&lt;p>There is another field named 'important' that indicates whether the document is important or not. The query string can boost the document is important like below,&lt;/p>
&lt;p>q={!boost b=$importfunc}name:keyword&amp;amp;importfunc=query({!v='important:true'})&lt;/p>
&lt;p>Above query string uses a sub query in boost function.&lt;/p>
&lt;p>Finally I want to boost both above two fields, and 'important' field has higher priority. The query string looks like below,&lt;/p>
&lt;p>&lt;a href="https://kane.mx/posts/archive/blogspot/solr-boost-examples/">Read More&lt;/a>&lt;/p></description></item></channel></rss>