<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OAuth Client Provider on The road</title><link>https://kane.mx/tags/oauth-client-provider/</link><description>Recent content in OAuth Client Provider on The road</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 04 Sep 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://kane.mx/tags/oauth-client-provider/index.xml" rel="self" type="application/rss+xml"/><item><title>Leveraging MCP Client's OAuthClientProvider for Seamless AWS AgentCore Authentication</title><link>https://kane.mx/posts/2025/use-mcp-client-oauthclientprovider-invoke-mcp-hosted-on-aws-agentcore/</link><pubDate>Thu, 04 Sep 2025 00:00:00 +0000</pubDate><guid>https://kane.mx/posts/2025/use-mcp-client-oauthclientprovider-invoke-mcp-hosted-on-aws-agentcore/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Building on my &lt;a href="https://kane.mx/posts/2025/invoke-mcp-hosted-on-aws-agentcore/">previous exploration of connecting to MCP servers hosted on AWS AgentCore&lt;/a>, I've been working extensively with the native MCP SDK's OAuth Client Provider to streamline authentication workflows. The MCP SDK's built-in OAuth support has evolved significantly, offering robust solutions for both interactive user authentication and machine-to-machine (M2M) flows.&lt;/p>
&lt;p>In this follow-up article, I'll share the key improvements and special techniques I've discovered for using the MCP Client's &lt;code>OAuthClientProvider&lt;/code> with AWS AgentCore, including handling AgentCore's unique behavior with 403 responses, implementing M2M authentication flows, and leveraging automatic token refresh capabilities.&lt;/p>
&lt;p>&lt;a href="https://kane.mx/posts/2025/use-mcp-client-oauthclientprovider-invoke-mcp-hosted-on-aws-agentcore/">Read More&lt;/a>&lt;/p></description></item></channel></rss>