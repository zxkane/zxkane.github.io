<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Authentication on The road</title><link>https://kane.mx/tags/authentication/</link><description>Recent content in Authentication on The road</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 22 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://kane.mx/tags/authentication/index.xml" rel="self" type="application/rss+xml"/><item><title>How invoking remote MCP servers hosted on AWS AgentCore</title><link>https://kane.mx/posts/2025/invoke-mcp-hosted-on-aws-agentcore/</link><pubDate>Fri, 22 Aug 2025 00:00:00 +0000</pubDate><guid>https://kane.mx/posts/2025/invoke-mcp-hosted-on-aws-agentcore/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Recently, I've been exploring &lt;a href="https://docs.aws.amazon.com/bedrock-agentcore/latest/devguide/">AWS AgentCore&lt;/a>'s new capability to host &lt;a href="https://modelcontextprotocol.io/">Model Context Protocol (MCP)&lt;/a> servers, and I wanted to share my experience with connecting to these remote servers as a client. The Model Context Protocol is an open standard that enables AI assistants to securely connect with external data sources and tools, and AWS AgentCore provides a managed hosting environment for these servers with built-in authentication and scaling capabilities.&lt;/p>
&lt;p>In this article, I'll walk through the process of invoking MCP servers hosted on &lt;a href="https://docs.aws.amazon.com/bedrock-agentcore/latest/devguide/runtime-mcp.html">AWS AgentCore Runtime&lt;/a> or proxied via &lt;a href="https://docs.aws.amazon.com/bedrock-agentcore/latest/devguide/gateway.html">AgentCore Gateway&lt;/a>, covering different authentication methods, client implementation patterns, and practical considerations. What struck me most about this approach is how it bridges the gap between local development and enterprise-grade deployment while maintaining the flexibility that makes MCP so powerful.&lt;/p>
&lt;p>&lt;a href="https://kane.mx/posts/2025/invoke-mcp-hosted-on-aws-agentcore/">Read More&lt;/a>&lt;/p></description></item><item><title>Federated OIDC login with Cognito and Amplify</title><link>https://kane.mx/posts/2022/build-serverless-app-on-aws/federated-oidc-login-with-cognito-and-amplify/</link><pubDate>Mon, 12 Sep 2022 00:00:00 +0000</pubDate><guid>https://kane.mx/posts/2022/build-serverless-app-on-aws/federated-oidc-login-with-cognito-and-amplify/</guid><description>
&lt;p>When working on either 2C application or 2B service, the customers do not want to
or is not allowed to sign up the new account, they can login the application via existing
IdP or enterprise SSO. So, building the application supports the federated OIDC login
to address such requirements.&lt;/p>
&lt;p>This post extends the capability of &lt;a href="https://kane.mx/posts/2022/build-serverless-app-on-aws/protect-website-with-cognito/">Todolist application protected by Amazon Cognito&lt;/a>,
using &lt;a href="https://auth0.com/">Auth0&lt;/a> as the third party &lt;a href="https://en.wikipedia.org/wiki/OpenID">OpenID Connect&lt;/a> provider introduces the external user pool.&lt;/p>
&lt;p>&lt;a href="https://kane.mx/posts/2022/build-serverless-app-on-aws/federated-oidc-login-with-cognito-and-amplify/">Read More&lt;/a>&lt;/p></description></item><item><title>Protect website with Cognito</title><link>https://kane.mx/posts/2022/build-serverless-app-on-aws/protect-website-with-cognito/</link><pubDate>Sun, 04 Sep 2022 00:00:00 +0000</pubDate><guid>https://kane.mx/posts/2022/build-serverless-app-on-aws/protect-website-with-cognito/</guid><description>
&lt;p>&lt;a href="https://kane.mx/posts/2022/build-serverless-app-on-aws/static-website/">Previous post&lt;/a> we demonstrated how distributing and securely deploying the website to global end users.
The authentication and authorization are always mandatory features of web application.
&lt;a href="https://aws.amazon.com/cognito/">Amazon Cognito&lt;/a> is a managed AWS serverless service helping the applications to implement AuthN and AuthZ,
with Cognito the applications securely scales to millions of users(up to 50,000 free users)
supporting identity and access management standards, such as OAuth 2.0, SAML 2.0, and OpenID Connect.&lt;/p>
&lt;p>&lt;a href="https://kane.mx/posts/2022/build-serverless-app-on-aws/protect-website-with-cognito/">Read More&lt;/a>&lt;/p></description></item></channel></rss>