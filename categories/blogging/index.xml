<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogging on The Road</title>
    <link>https://kane.mx/categories/blogging/</link>
    <description>Recent content in Blogging on The Road</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 May 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://kane.mx/categories/blogging/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AWS Lambda Layer实践</title>
      <link>https://kane.mx/posts/2019/aws-lambda-layers/</link>
      <pubDate>Tue, 14 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2019/aws-lambda-layers/</guid>
      <description>&lt;p&gt;在&lt;a href=&#34;https://kane.mx/posts/effective-cloud-computing/serverless-dingtalk-callback/&#34;&gt;基于函数计算的钉钉回调函数接口&lt;/a&gt;中使用钉钉回调函数案例实践了&lt;a href=&#34;https://aws.amazon.com/lambda/&#34;&gt;AWS Lambda&lt;/a&gt;无服务函数。该示例中，我们将自定义的函数代码及依赖的第三方库（比如json处理库jackson, 钉钉openapi加密库, aws dynamodb client等）整体打包为一个部署包，上传到lamdba代码仓库用于函数执行。&lt;/p&gt;

&lt;p&gt;然而实际项目中，其实有大量的相关函数可能会共享这些基础依赖库、三方函数库(比如headless chrome(Puppeteer), pandoc, OCR library &amp;ndash; Tesseract等等)或者使用自定义runtime(如官方未支持的java11)的需求。AWS Lambda在去年底发布了&lt;a href=&#34;https://aws.amazon.com/about-aws/whats-new/2018/11/aws-lambda-now-supports-custom-runtimes-and-layers/&#34;&gt;Lambda layers功能&lt;/a&gt;来满足上述这些实际开发中的需求。&lt;/p&gt;

&lt;p&gt;接下来，让我们看看如何将&lt;a href=&#34;https://kane.mx/posts/effective-cloud-computing/serverless-dingtalk-callback/&#34;&gt;前文&lt;/a&gt;中的&lt;a href=&#34;https://github.com/zxkane/dingtalk-callback-on-aws/blob/267b5f11851148f5a23a834b8b7ecd4d3b247ce7/build.gradle.kts#L71-L91&#34;&gt;函数依赖&lt;/a&gt;放置到一个单独的layer中，作为不同函数的共享依赖库。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>QCon2019北京站回顾</title>
      <link>https://kane.mx/posts/2019/2019-qconbeijing-reviews/</link>
      <pubDate>Thu, 09 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2019/2019-qconbeijing-reviews/</guid>
      <description>&lt;p&gt;这周参加了&lt;a href=&#34;https://2019.qconbeijing.com/&#34;&gt;QCon 2019北京站&lt;/a&gt;，这里记录下部分印象深刻的主题以及个人感受。&lt;/p&gt;

&lt;p&gt;QCon是由InfoQ主办的综合性技术盛会，主题涵盖了大前端、高可用架构、容器技术、大数据、机器学习等各种热门技术主题。其中也不乏&lt;a href=&#34;https://2019.qconbeijing.com/track/501&#34;&gt;下一代分布式应用&lt;/a&gt;、&lt;a href=&#34;https://2019.qconbeijing.com/track/565&#34;&gt;混沌工程&lt;/a&gt;等前沿有意思的主题，后面会详细介绍相关的主题演讲。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2018北京ArchSummit回顾</title>
      <link>https://kane.mx/posts/2018/2018-12-13-bj-archsummit-review/</link>
      <pubDate>Thu, 13 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2018/2018-12-13-bj-archsummit-review/</guid>
      <description>&lt;p&gt;上周参加了&lt;a href=&#34;https://bj2018.archsummit.com&#34;&gt;ArchSummit(全球架构师峰会)&lt;/a&gt;，在这里记录下部分参加的主题以及个人感受。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何修复Jenkins CI无法读取存在的任务配置</title>
      <link>https://kane.mx/posts/2016/how-to-fix-jenkins-fail-to-load-job-config/</link>
      <pubDate>Wed, 12 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/how-to-fix-jenkins-fail-to-load-job-config/</guid>
      <description>V秘开发团队一直使用着Jenkins CI来持续集成V秘服务的新功能和各种改进。近日，Jenkins CI在重启之后，很多已有任务的配置无法被J</description>
    </item>
    
    <item>
      <title>MongoDB中如何找出慢查询</title>
      <link>https://kane.mx/posts/2016/how-to-find-slow-queries-in-mongodb/</link>
      <pubDate>Thu, 29 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/how-to-find-slow-queries-in-mongodb/</guid>
      <description>MongoDB是目前最为流行的NoSQL数据库之一。V秘的后台数据就是保存在MongoDB中的哦;) 尽管MongoDB的性能为业界称道，但任</description>
    </item>
    
    <item>
      <title>Docker Swarm mode(v1.12.x)的一些使用限制</title>
      <link>https://kane.mx/posts/2016/the-limitations-docker-swarm-mode-v1.12/</link>
      <pubDate>Tue, 20 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/the-limitations-docker-swarm-mode-v1.12/</guid>
      <description>Swarm mode在Docker v1.12中正式发布，Swarm mode带来了诸如Docker集群，容器编排，多主机网络等激动人心的特性。V秘团队也</description>
    </item>
    
    <item>
      <title>创建于Docker Swarm的服务无法在Ubuntu 14.04 LTS中运行</title>
      <link>https://kane.mx/posts/2016/docker-swarm-mode-in-ubuntu-1404/</link>
      <pubDate>Tue, 13 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/docker-swarm-mode-in-ubuntu-1404/</guid>
      <description>V秘团队一直致力于用技术改善产品。V秘后台的各种服务一直是通过完善的Devops流程自动部署到Docker容器集群。随着Swarm mode在</description>
    </item>
    
    <item>
      <title>基于Angularjs单页面应用的SEO优化</title>
      <link>https://kane.mx/posts/2016/seo-optimization-for-angularajs-based-app/</link>
      <pubDate>Thu, 19 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/seo-optimization-for-angularajs-based-app/</guid>
      <description>在之前的文章我曾提到基于Angularjs的单页面应用在用户体验上的种种好处。然而任何事情都不是完美的，Angular和类似的框架通过应用内</description>
    </item>
    
    <item>
      <title>Spring框架下的分布式session管理</title>
      <link>https://kane.mx/posts/2016/clustered-session-under-spring-framework/</link>
      <pubDate>Sat, 07 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/clustered-session-under-spring-framework/</guid>
      <description>在微服务和容器等技术的帮助下，Web应用可以较为容易的进行水平扩展，来部署更多的应用实例来提升请求处理数QPS。当Web服务有状态的时候，如</description>
    </item>
    
    <item>
      <title>V秘是如何构建的</title>
      <link>https://kane.mx/posts/2016/how-we-build-videome/</link>
      <pubDate>Thu, 07 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/how-we-build-videome/</guid>
      <description>春天来了，V秘大家庭也新增了两位10后的传人。新爸爸经过一番忙乱后，希望在这里与大家分享V秘的架构，共同探讨如何快速的构建高可用，高性能的W</description>
    </item>
    
    <item>
      <title>说一说阿里云ossfs</title>
      <link>https://kane.mx/posts/2016/aliyun-ossfs-sucks/</link>
      <pubDate>Fri, 26 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/aliyun-ossfs-sucks/</guid>
      <description>阿里云提供的对象或者文件存储叫OSS，为应用程序提供了海量存储，按需付费等服务。应用程序则需要通过Aliyun OSS的各语言SDK才能操作（</description>
    </item>
    
    <item>
      <title>如何使用微信公众平台的临时素材</title>
      <link>https://kane.mx/posts/2016/weixin-temporary-materials/</link>
      <pubDate>Wed, 27 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/weixin-temporary-materials/</guid>
      <description>微信给公众平台提供了素材管理的接口，通过这一系列接口可以上传，接收以及管理图片，视频等多媒体文件。其中又分为临时和永久两种类型。永久素材有总</description>
    </item>
    
    <item>
      <title>单页面应用(single page application)中使用微信支付</title>
      <link>https://kane.mx/posts/2016/single-page-app-meets-weixin-pay/</link>
      <pubDate>Sun, 24 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/single-page-app-meets-weixin-pay/</guid>
      <description>随着AngularJS等前端MVC框架的流行，AJAX的异步请求数据结合H5的push state等特性，极大的改善了网站的用户体验和页面加载</description>
    </item>
    
    <item>
      <title>文件系统的Inode耗尽，会导致Docker编译镜像出现&#39;No space left on device&#39;错误</title>
      <link>https://kane.mx/posts/2016/docker-build-no-space-left-caused-by-inode-exhausted/</link>
      <pubDate>Thu, 21 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/docker-build-no-space-left-caused-by-inode-exhausted/</guid>
      <description>最近在提交前端代码后，前端代码的自动发布老是失败。失败的原因多是编译Docker镜像时在执行COPY语句拷贝文件到镜像文件系统时，扔出了&amp;r</description>
    </item>
    
  </channel>
</rss>