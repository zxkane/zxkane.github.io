<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blogging on The Road</title>
    <link>https://kane.mx/categories/blogging/</link>
    <description>Recent content in blogging on The Road</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 13 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://kane.mx/categories/blogging/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AWS发布更快、更便宜、更易用的HTTP APIs</title>
      <link>https://kane.mx/posts/2020/new-http-apis-of-api-gateway/</link>
      <pubDate>Fri, 13 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2020/new-http-apis-of-api-gateway/</guid>
      <description>&lt;p&gt;AWS在3月12日&lt;a href=&#34;https://aws.amazon.com/blogs/compute/building-better-apis-http-apis-now-generally-available/&#34;&gt;正式发布了新一代的API网关 &amp;ndash; HTTP APIs&lt;/a&gt;。AWS发布的第一代API Gateway服务已经快5年了，通过这些年来大规模服务客户的心得以及客户反馈，由此重新构建了更快（相比第一代网关60%的延迟减少）、更便宜（至少节省71%的费用）、更易用的第二代网关服务。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AWS Cloud Debugging初探</title>
      <link>https://kane.mx/posts/2019/aws-cloud-debugging/</link>
      <pubDate>Thu, 26 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2019/aws-cloud-debugging/</guid>
      <description>&lt;p&gt;在&lt;a href=&#34;https://reinvent.awsevents.com/?nc2=h_ql_re&#34;&gt;re:Invent&lt;/a&gt; 2019之前，&lt;a href=&#34;https://aws.amazon.com/getting-started/tools-sdks/?nc2=h_ql_prod_dt_tsdk&#34;&gt;AWS Toolkit&lt;/a&gt;发布了&lt;a href=&#34;https://aws.amazon.com/about-aws/whats-new/2019/11/announcing-cloud-debugging-beta/?nc1=h_ls&#34;&gt;Cloud Debugging beta&lt;/a&gt;功能。该功能支持在IntelliJ IDEs(IntelliJ, PyCharm, Webstorm, 以及 Rider)中远程调试 ECS &lt;a href=&#34;https://aws.amazon.com/fargate/&#34;&gt;Fargate&lt;/a&gt; 容器中执行的应用程序。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AWS Batch简介</title>
      <link>https://kane.mx/posts/2019/aws-batch/</link>
      <pubDate>Wed, 25 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2019/aws-batch/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://aws.amazon.com/batch/&#34;&gt;AWS Batch&lt;/a&gt;是一个全托管的批处理调度服务，它可为用户管理所有基础设施，从而避免了预置、管理、监控和扩展批处理计算作业所带来的复杂性。当然&lt;a href=&#34;https://aws.amazon.com/batch/&#34;&gt;AWS Batch&lt;/a&gt;已与 AWS 平台原生集成，让用户能够利用 AWS 的扩展、联网和访问管理功能。让用户轻松运行能够安全地从 AWS 数据存储（如 Amazon S3 和 Amazon DynamoDB）中检索数据并向其中写入数据的作业。&lt;a href=&#34;https://aws.amazon.com/batch/&#34;&gt;AWS Batch&lt;/a&gt;可根据所提交的批处理作业的数量和资源要求预置计算资源并优化作业分配。能够将计算资源动态扩展至运行批处理作业所需的任何数量，从而不必受固定容量集群的限制。&lt;a href=&#34;https://aws.amazon.com/batch/&#34;&gt;AWS Batch&lt;/a&gt;还可以利用 Spot 实例，从而进一步降低运行批处理作业产生的费用。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://aws.amazon.com/batch/&#34;&gt;AWS Batch&lt;/a&gt;服务本身是&lt;strong&gt;免费&lt;/strong&gt;的，仅收取实际使用的 EC2 实例费用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>免费邮件转发服务</title>
      <link>https://kane.mx/posts/2019/email-forwarding/</link>
      <pubDate>Wed, 18 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2019/email-forwarding/</guid>
      <description>&lt;p&gt;在拥有域名后，通常希望创建一些自有域名下的邮箱来收取不同用途的邮件，同时不希望为这部分功能付费😃。使用免费的企业邮箱(比如网易企业邮箱、阿里云企业邮箱)是一种选择。这时就需要配置邮件地址和邮件客户端来收取邮件，如果有多个邮箱地址，配置会特别麻烦。有时，这些企业邮箱的收件服务会莫名其妙的丢失一些邮件。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>实战Aliyun EDAS应用迁移AWS</title>
      <link>https://kane.mx/posts/2019/aliyun-edas-migration-in-action/</link>
      <pubDate>Mon, 02 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2019/aliyun-edas-migration-in-action/</guid>
      <description>近期实践了将阿里云EDAS微服务应用迁移到AWS上，在这里分享一下迁移方案。 该方案涉及了以下三个方面， 微服务应用集群。在AWS上采用的ECS</description>
    </item>
    
    <item>
      <title>AWS RDS数据库日志分析及展示</title>
      <link>https://kane.mx/posts/2019/rds-log-analysis/</link>
      <pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2019/rds-log-analysis/</guid>
      <description>&lt;p&gt;托管的RDS数据库已经是云计算服务中非常成熟的服务，绝大部分的云计算用户会采用RDS服务来提升数据库服务的可用性同时减少数据库的各类运维事务。&lt;/p&gt;
&lt;p&gt;AWS RDS服务支持开启和查询各类的数据库日志，包括常规日志、慢日志、错误日志和审计日志。但RDS服务默认提供的日志查看工具仅仅类似文本查看器，无法针对日志数据做统计和查看历史滚动的存档。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用Openswan连接AWS VPC</title>
      <link>https://kane.mx/posts/2019/using-openswan-connect-aws-vpn/</link>
      <pubDate>Mon, 16 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2019/using-openswan-connect-aws-vpn/</guid>
      <description>&lt;p&gt;业务上云之后，经常也有需求将多云、数据中心或办公室的私有网络同云端的私有网络建立连接。&lt;a href=&#34;https://docs.aws.amazon.com/zh_cn/vpn/latest/s2svpn/VPC_VPN.html&#34;&gt;AWS Site-to-Site VPN&lt;/a&gt;正是AWS提供的托管VPN服务，我们可以在另一端的私有网络通过&lt;a href=&#34;https://www.openswan.org/&#34;&gt;Openswan&lt;/a&gt;同AWS VPC网络建立基于IPSec协议的安全连接。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AWS CDK简介</title>
      <link>https://kane.mx/posts/2019/aws-cdk/</link>
      <pubDate>Sun, 08 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2019/aws-cdk/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Infrastructure_as_code&#34;&gt;Infrastructure as Code&lt;/a&gt;(架构即代码)一直是衡量公有云是否支持良好运维能力的重要指标。作为云计算领先的AWS，通过服务&lt;a href=&#34;https://aws.amazon.com/cn/cloudformation/&#34;&gt;CloudFormation&lt;/a&gt;来编排云环境中的基础设施资源。不过由于CloudFormation是使用YAML/JSON编写的声明式语言，不善于处理逻辑，编写繁琐且不利于调试排错，对于新上手的Devops工程师来说也有不小的学习曲线。三方开源的工具&lt;a href=&#34;https://en.wikipedia.org/wiki/Terraform_(software)&#34;&gt;Terraform&lt;/a&gt;同样没有很好解决&lt;a href=&#34;https://aws.amazon.com/cn/cloudformation/&#34;&gt;CloudFormation&lt;/a&gt;存在的这些问题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Amazon Alexa Android版本国内登录问题</title>
      <link>https://kane.mx/posts/2019/alexa-login-issue/</link>
      <pubDate>Wed, 14 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2019/alexa-login-issue/</guid>
      <description>&lt;p&gt;近期需要做一些Alexa上的开发，在手机上安装了Amazon Alexa，一直得到下面这样的错误提示而无法登录。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Connection Timed Out.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>使用AWS S3作为MacOSX时间机器(Time Machine)的备份存储</title>
      <link>https://kane.mx/posts/2019/using-s3-as-device-for-mac-time-machine-backup/</link>
      <pubDate>Sun, 30 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2019/using-s3-as-device-for-mac-time-machine-backup/</guid>
      <description>&lt;p&gt;个人电脑数据备份一直都是一个强烈的需求。使用网盘等云存储产品可以部分满足数据的备份需求，仍然无法做到使用便利性和很高的数据安全保障。&lt;/p&gt;
&lt;p&gt;MacOSX上系统内置了备份解决方案 &amp;ndash; &lt;a href=&#34;https://support.apple.com/zh-cn/HT201250&#34;&gt;时间机器(Time Machine)&lt;/a&gt;。Time Machine支持AirPort Time Capsule，NAS存储或者外置的存储设备。然而这些备份方案都依赖于硬件设备，有容量限制或不便于移动。在云计算已经大行其道的今天，有没有使用云计算厂商对象存储作为目标存储的备份方案，为MacOSX数据备份提供无限容量、高度的安全性的云方案？经过一番搜索，既找到了开源免费的工具&lt;a href=&#34;https://restic.net/&#34;&gt;Restic&lt;/a&gt;，也有付费软件&lt;a href=&#34;https://www.arqbackup.com/&#34;&gt;Arq&lt;/a&gt;。无论Restic还是Arq提供的是独立的三方工具来实现备份到云端存储或从云端恢复，有没有将Time Machine和云端储存结合在一起的方案呢？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>公有云对比</title>
      <link>https://kane.mx/posts/2019/aws-vs-aliyun/</link>
      <pubDate>Wed, 26 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2019/aws-vs-aliyun/</guid>
      <description>&lt;p&gt;AWS是全球云计算领域的领跑者，它在计算、存储、网络等方面都做出了很多创新，同时也是其他云计算厂商学习及模仿的对象。&lt;/p&gt;
&lt;p&gt;阿里云是目前国内市场份额最大的云计算厂商，其份额&lt;a href=&#34;http://www.sohu.com/a/302064020_465914&#34;&gt;超过了第二至五位厂商的总和&lt;/a&gt;，份额领先优势比AWS在全球还要显著，同时&lt;a href=&#34;https://www.canalys.com/newsroom/cloud-market-share-q4-2018-and-full-year-2018&#34;&gt;全球份额也超过IBM来到第四&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;本文将对AWS和阿里云核心服务做一个简要对比，以及这两家厂商发展方向的一些个人见解。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Serverless framework 101</title>
      <link>https://kane.mx/posts/2019/serverless-framework/</link>
      <pubDate>Thu, 16 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2019/serverless-framework/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://serverless.com/&#34;&gt;Serverless Framework&lt;/a&gt;是一个开源命令行工具。他提供函数脚手架、流程自动化、最佳实践等帮助开发、部署跨云厂商的托管无服务器计算服务(官方已支持aws, Azure, GCP, IBM Cloud等各种厂商的无服务器计算)。同时支持使用插件来扩展各种功能，比如支持更多云厂商无服务器计算服务，例如&lt;a href=&#34;https://github.com/aliyun/serverless-aliyun-function-compute&#34;&gt;阿里云的函数计算&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这里使用&lt;a href=&#34;https://kane.mx/posts/effective-cloud-computing/serverless-dingtalk-callback/&#34;&gt;基于函数计算的钉钉回调函数接口&lt;/a&gt;示例来演示如何使用&lt;a href=&#34;https://serverless.com/&#34;&gt;Serverless Framework&lt;/a&gt;将一个无服务器函数部署到&lt;a href=&#34;https://aws.amazon.com/lambda&#34;&gt;AWS Lambda&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AWS Lambda Layer实践</title>
      <link>https://kane.mx/posts/2019/aws-lambda-layers/</link>
      <pubDate>Tue, 14 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2019/aws-lambda-layers/</guid>
      <description>&lt;p&gt;在&lt;a href=&#34;https://kane.mx/posts/effective-cloud-computing/serverless-dingtalk-callback/&#34;&gt;基于函数计算的钉钉回调函数接口&lt;/a&gt;中使用钉钉回调函数案例实践了&lt;a href=&#34;https://aws.amazon.com/lambda/&#34;&gt;AWS Lambda&lt;/a&gt;无服务函数。该示例中，我们将自定义的函数代码及依赖的第三方库（比如json处理库jackson, 钉钉openapi加密库, aws dynamodb client等）整体打包为一个部署包，上传到lamdba代码仓库用于函数执行。&lt;/p&gt;
&lt;p&gt;然而实际项目中，其实有大量的相关函数可能会共享这些基础依赖库、三方函数库(比如headless chrome(Puppeteer), pandoc, OCR library &amp;ndash; Tesseract等等)或者使用自定义runtime(如官方未支持的java11)的需求。AWS Lambda在去年底发布了&lt;a href=&#34;https://aws.amazon.com/about-aws/whats-new/2018/11/aws-lambda-now-supports-custom-runtimes-and-layers/&#34;&gt;Lambda layers功能&lt;/a&gt;来满足上述这些实际开发中的需求。&lt;/p&gt;
&lt;p&gt;接下来，让我们看看如何将&lt;a href=&#34;https://kane.mx/posts/effective-cloud-computing/serverless-dingtalk-callback/&#34;&gt;前文&lt;/a&gt;中的&lt;a href=&#34;https://github.com/zxkane/dingtalk-callback-on-aws/blob/267b5f11851148f5a23a834b8b7ecd4d3b247ce7/build.gradle.kts#L71-L91&#34;&gt;函数依赖&lt;/a&gt;放置到一个单独的layer中，作为不同函数的共享依赖库。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>QCon2019北京站回顾</title>
      <link>https://kane.mx/posts/2019/2019-qconbeijing-reviews/</link>
      <pubDate>Thu, 09 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2019/2019-qconbeijing-reviews/</guid>
      <description>&lt;p&gt;这周参加了&lt;a href=&#34;https://2019.qconbeijing.com/&#34;&gt;QCon 2019北京站&lt;/a&gt;，这里记录下部分印象深刻的主题以及个人感受。&lt;/p&gt;
&lt;p&gt;QCon是由InfoQ主办的综合性技术盛会，主题涵盖了大前端、高可用架构、容器技术、大数据、机器学习等各种热门技术主题。其中也不乏&lt;a href=&#34;https://2019.qconbeijing.com/track/501&#34;&gt;下一代分布式应用&lt;/a&gt;、&lt;a href=&#34;https://2019.qconbeijing.com/track/565&#34;&gt;混沌工程&lt;/a&gt;等前沿有意思的主题，后面会详细介绍相关的主题演讲。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2018北京ArchSummit回顾</title>
      <link>https://kane.mx/posts/2018/2018-12-13-bj-archsummit-review/</link>
      <pubDate>Thu, 13 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2018/2018-12-13-bj-archsummit-review/</guid>
      <description>&lt;p&gt;上周参加了&lt;a href=&#34;https://bj2018.archsummit.com&#34;&gt;ArchSummit(全球架构师峰会)&lt;/a&gt;，在这里记录下部分参加的主题以及个人感受。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何修复Jenkins CI无法读取存在的任务配置</title>
      <link>https://kane.mx/posts/2016/how-to-fix-jenkins-fail-to-load-job-config/</link>
      <pubDate>Wed, 12 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/how-to-fix-jenkins-fail-to-load-job-config/</guid>
      <description>V秘开发团队一直使用着Jenkins CI来持续集成V秘服务的新功能和各种改进。近日，Jenkins CI在重启之后，很多已有任务的配置无法被J</description>
    </item>
    
    <item>
      <title>MongoDB中如何找出慢查询</title>
      <link>https://kane.mx/posts/2016/how-to-find-slow-queries-in-mongodb/</link>
      <pubDate>Thu, 29 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/how-to-find-slow-queries-in-mongodb/</guid>
      <description>MongoDB是目前最为流行的NoSQL数据库之一。V秘的后台数据就是保存在MongoDB中的哦;) 尽管MongoDB的性能为业界称道，但任</description>
    </item>
    
    <item>
      <title>Docker Swarm mode(v1.12.x)的一些使用限制</title>
      <link>https://kane.mx/posts/2016/the-limitations-docker-swarm-mode-v1.12/</link>
      <pubDate>Tue, 20 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/the-limitations-docker-swarm-mode-v1.12/</guid>
      <description>Swarm mode在Docker v1.12中正式发布，Swarm mode带来了诸如Docker集群，容器编排，多主机网络等激动人心的特性。V秘团队也</description>
    </item>
    
    <item>
      <title>创建于Docker Swarm的服务无法在Ubuntu 14.04 LTS中运行</title>
      <link>https://kane.mx/posts/2016/docker-swarm-mode-in-ubuntu-1404/</link>
      <pubDate>Tue, 13 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/docker-swarm-mode-in-ubuntu-1404/</guid>
      <description>V秘团队一直致力于用技术改善产品。V秘后台的各种服务一直是通过完善的Devops流程自动部署到Docker容器集群。随着Swarm mode在</description>
    </item>
    
    <item>
      <title>基于Angularjs单页面应用的SEO优化</title>
      <link>https://kane.mx/posts/2016/seo-optimization-for-angularajs-based-app/</link>
      <pubDate>Thu, 19 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/seo-optimization-for-angularajs-based-app/</guid>
      <description>在之前的文章我曾提到基于Angularjs的单页面应用在用户体验上的种种好处。然而任何事情都不是完美的，Angular和类似的框架通过应用内</description>
    </item>
    
    <item>
      <title>Spring框架下的分布式session管理</title>
      <link>https://kane.mx/posts/2016/clustered-session-under-spring-framework/</link>
      <pubDate>Sat, 07 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/clustered-session-under-spring-framework/</guid>
      <description>在微服务和容器等技术的帮助下，Web应用可以较为容易的进行水平扩展，来部署更多的应用实例来提升请求处理数QPS。当Web服务有状态的时候，如</description>
    </item>
    
    <item>
      <title>V秘是如何构建的</title>
      <link>https://kane.mx/posts/2016/how-we-build-videome/</link>
      <pubDate>Thu, 07 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/how-we-build-videome/</guid>
      <description>春天来了，V秘大家庭也新增了两位10后的传人。新爸爸经过一番忙乱后，希望在这里与大家分享V秘的架构，共同探讨如何快速的构建高可用，高性能的W</description>
    </item>
    
    <item>
      <title>说一说阿里云ossfs</title>
      <link>https://kane.mx/posts/2016/aliyun-ossfs-sucks/</link>
      <pubDate>Fri, 26 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/aliyun-ossfs-sucks/</guid>
      <description>阿里云提供的对象或者文件存储叫OSS，为应用程序提供了海量存储，按需付费等服务。应用程序则需要通过Aliyun OSS的各语言SDK才能操作（</description>
    </item>
    
    <item>
      <title>如何使用微信公众平台的临时素材</title>
      <link>https://kane.mx/posts/2016/weixin-temporary-materials/</link>
      <pubDate>Wed, 27 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/weixin-temporary-materials/</guid>
      <description>微信给公众平台提供了素材管理的接口，通过这一系列接口可以上传，接收以及管理图片，视频等多媒体文件。其中又分为临时和永久两种类型。永久素材有总</description>
    </item>
    
    <item>
      <title>单页面应用(single page application)中使用微信支付</title>
      <link>https://kane.mx/posts/2016/single-page-app-meets-weixin-pay/</link>
      <pubDate>Sun, 24 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/single-page-app-meets-weixin-pay/</guid>
      <description>随着AngularJS等前端MVC框架的流行，AJAX的异步请求数据结合H5的push state等特性，极大的改善了网站的用户体验和页面加载</description>
    </item>
    
    <item>
      <title>文件系统的Inode耗尽，会导致Docker编译镜像出现&#39;No space left on device&#39;错误</title>
      <link>https://kane.mx/posts/2016/docker-build-no-space-left-caused-by-inode-exhausted/</link>
      <pubDate>Thu, 21 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kane.mx/posts/2016/docker-build-no-space-left-caused-by-inode-exhausted/</guid>
      <description>最近在提交前端代码后，前端代码的自动发布老是失败。失败的原因多是编译Docker镜像时在执行COPY语句拷贝文件到镜像文件系统时，扔出了&amp;r</description>
    </item>
    
  </channel>
</rss>